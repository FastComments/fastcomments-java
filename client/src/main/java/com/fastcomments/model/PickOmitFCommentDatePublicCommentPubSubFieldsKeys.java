/*
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fastcomments.model;

import java.util.Objects;
import com.fastcomments.model.CommentUserBadgeInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.fastcomments.invoker.JSON;

/**
 * From T, pick a set of properties whose keys are in the union K
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-20T09:43:57.934745832-07:00[America/Los_Angeles]", comments = "Generator version: 7.11.0")
public class PickOmitFCommentDatePublicCommentPubSubFieldsKeys {
  public static final String SERIALIZED_NAME_ID = "_id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nonnull
  private String id;

  public static final String SERIALIZED_NAME_URL_ID = "urlId";
  @SerializedName(SERIALIZED_NAME_URL_ID)
  @javax.annotation.Nonnull
  private String urlId;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  @javax.annotation.Nonnull
  private String url;

  public static final String SERIALIZED_NAME_PAGE_TITLE = "pageTitle";
  @SerializedName(SERIALIZED_NAME_PAGE_TITLE)
  @javax.annotation.Nullable
  private String pageTitle;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  @javax.annotation.Nullable
  private Object date = null;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  @javax.annotation.Nonnull
  private String tenantId;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private String userId;

  public static final String SERIALIZED_NAME_ANON_USER_ID = "anonUserId";
  @SerializedName(SERIALIZED_NAME_ANON_USER_ID)
  @javax.annotation.Nullable
  private String anonUserId;

  public static final String SERIALIZED_NAME_COMMENTER_NAME = "commenterName";
  @SerializedName(SERIALIZED_NAME_COMMENTER_NAME)
  @javax.annotation.Nonnull
  private String commenterName;

  public static final String SERIALIZED_NAME_COMMENTER_LINK = "commenterLink";
  @SerializedName(SERIALIZED_NAME_COMMENTER_LINK)
  @javax.annotation.Nullable
  private String commenterLink;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  @javax.annotation.Nonnull
  private String comment;

  public static final String SERIALIZED_NAME_COMMENT_H_T_M_L = "commentHTML";
  @SerializedName(SERIALIZED_NAME_COMMENT_H_T_M_L)
  @javax.annotation.Nonnull
  private String commentHTML;

  public static final String SERIALIZED_NAME_PARENT_ID = "parentId";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  @javax.annotation.Nullable
  private String parentId;

  public static final String SERIALIZED_NAME_VOTES = "votes";
  @SerializedName(SERIALIZED_NAME_VOTES)
  @javax.annotation.Nullable
  private Integer votes;

  public static final String SERIALIZED_NAME_VOTES_UP = "votesUp";
  @SerializedName(SERIALIZED_NAME_VOTES_UP)
  @javax.annotation.Nullable
  private Integer votesUp;

  public static final String SERIALIZED_NAME_VOTES_DOWN = "votesDown";
  @SerializedName(SERIALIZED_NAME_VOTES_DOWN)
  @javax.annotation.Nullable
  private Integer votesDown;

  public static final String SERIALIZED_NAME_EXPIRE_AT = "expireAt";
  @SerializedName(SERIALIZED_NAME_EXPIRE_AT)
  @javax.annotation.Nullable
  private OffsetDateTime expireAt;

  public static final String SERIALIZED_NAME_VERIFIED = "verified";
  @SerializedName(SERIALIZED_NAME_VERIFIED)
  @javax.annotation.Nonnull
  private Boolean verified;

  public static final String SERIALIZED_NAME_REVIEWED = "reviewed";
  @SerializedName(SERIALIZED_NAME_REVIEWED)
  @javax.annotation.Nullable
  private Boolean reviewed;

  public static final String SERIALIZED_NAME_AVATAR_SRC = "avatarSrc";
  @SerializedName(SERIALIZED_NAME_AVATAR_SRC)
  @javax.annotation.Nullable
  private String avatarSrc;

  public static final String SERIALIZED_NAME_IS_SPAM = "isSpam";
  @SerializedName(SERIALIZED_NAME_IS_SPAM)
  @javax.annotation.Nullable
  private Boolean isSpam;

  public static final String SERIALIZED_NAME_HAS_IMAGES = "hasImages";
  @SerializedName(SERIALIZED_NAME_HAS_IMAGES)
  @javax.annotation.Nullable
  private Boolean hasImages;

  public static final String SERIALIZED_NAME_HAS_LINKS = "hasLinks";
  @SerializedName(SERIALIZED_NAME_HAS_LINKS)
  @javax.annotation.Nullable
  private Boolean hasLinks;

  public static final String SERIALIZED_NAME_HAS_CODE = "hasCode";
  @SerializedName(SERIALIZED_NAME_HAS_CODE)
  @javax.annotation.Nullable
  private Boolean hasCode;

  public static final String SERIALIZED_NAME_APPROVED = "approved";
  @SerializedName(SERIALIZED_NAME_APPROVED)
  @javax.annotation.Nonnull
  private Boolean approved;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  @javax.annotation.Nonnull
  private String locale;

  public static final String SERIALIZED_NAME_IS_DELETED = "isDeleted";
  @SerializedName(SERIALIZED_NAME_IS_DELETED)
  @javax.annotation.Nullable
  private Boolean isDeleted;

  public static final String SERIALIZED_NAME_IS_DELETED_USER = "isDeletedUser";
  @SerializedName(SERIALIZED_NAME_IS_DELETED_USER)
  @javax.annotation.Nullable
  private Boolean isDeletedUser;

  public static final String SERIALIZED_NAME_IS_BANNED_USER = "isBannedUser";
  @SerializedName(SERIALIZED_NAME_IS_BANNED_USER)
  @javax.annotation.Nullable
  private Boolean isBannedUser;

  public static final String SERIALIZED_NAME_IS_BY_ADMIN = "isByAdmin";
  @SerializedName(SERIALIZED_NAME_IS_BY_ADMIN)
  @javax.annotation.Nullable
  private Boolean isByAdmin;

  public static final String SERIALIZED_NAME_IS_BY_MODERATOR = "isByModerator";
  @SerializedName(SERIALIZED_NAME_IS_BY_MODERATOR)
  @javax.annotation.Nullable
  private Boolean isByModerator;

  public static final String SERIALIZED_NAME_IS_PINNED = "isPinned";
  @SerializedName(SERIALIZED_NAME_IS_PINNED)
  @javax.annotation.Nullable
  private Boolean isPinned;

  public static final String SERIALIZED_NAME_IS_LOCKED = "isLocked";
  @SerializedName(SERIALIZED_NAME_IS_LOCKED)
  @javax.annotation.Nullable
  private Boolean isLocked;

  public static final String SERIALIZED_NAME_FLAG_COUNT = "flagCount";
  @SerializedName(SERIALIZED_NAME_FLAG_COUNT)
  @javax.annotation.Nullable
  private Integer flagCount;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  @javax.annotation.Nullable
  private Double rating;

  public static final String SERIALIZED_NAME_DISPLAY_LABEL = "displayLabel";
  @SerializedName(SERIALIZED_NAME_DISPLAY_LABEL)
  @javax.annotation.Nullable
  private String displayLabel;

  public static final String SERIALIZED_NAME_BADGES = "badges";
  @SerializedName(SERIALIZED_NAME_BADGES)
  @javax.annotation.Nullable
  private List<CommentUserBadgeInfo> badges = new ArrayList<>();

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  @javax.annotation.Nullable
  private String domain;

  public static final String SERIALIZED_NAME_FEEDBACK_IDS = "feedbackIds";
  @SerializedName(SERIALIZED_NAME_FEEDBACK_IDS)
  @javax.annotation.Nullable
  private List<String> feedbackIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_GROUP_IDS = "groupIds";
  @SerializedName(SERIALIZED_NAME_GROUP_IDS)
  @javax.annotation.Nullable
  private List<String> groupIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_VIEW_COUNT = "viewCount";
  @SerializedName(SERIALIZED_NAME_VIEW_COUNT)
  @javax.annotation.Nullable
  private Double viewCount;

  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys() {
  }

  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys id(@javax.annotation.Nonnull String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys urlId(@javax.annotation.Nonnull String urlId) {
    this.urlId = urlId;
    return this;
  }

  /**
   * Get urlId
   * @return urlId
   */
  @javax.annotation.Nonnull
  public String getUrlId() {
    return urlId;
  }

  public void setUrlId(@javax.annotation.Nonnull String urlId) {
    this.urlId = urlId;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys url(@javax.annotation.Nonnull String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nonnull
  public String getUrl() {
    return url;
  }

  public void setUrl(@javax.annotation.Nonnull String url) {
    this.url = url;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys pageTitle(@javax.annotation.Nullable String pageTitle) {
    this.pageTitle = pageTitle;
    return this;
  }

  /**
   * Get pageTitle
   * @return pageTitle
   */
  @javax.annotation.Nullable
  public String getPageTitle() {
    return pageTitle;
  }

  public void setPageTitle(@javax.annotation.Nullable String pageTitle) {
    this.pageTitle = pageTitle;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys date(@javax.annotation.Nullable Object date) {
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   */
  @javax.annotation.Nullable
  public Object getDate() {
    return date;
  }

  public void setDate(@javax.annotation.Nullable Object date) {
    this.date = date;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys tenantId(@javax.annotation.Nonnull String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * @return tenantId
   */
  @javax.annotation.Nonnull
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(@javax.annotation.Nonnull String tenantId) {
    this.tenantId = tenantId;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys userId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys anonUserId(@javax.annotation.Nullable String anonUserId) {
    this.anonUserId = anonUserId;
    return this;
  }

  /**
   * Get anonUserId
   * @return anonUserId
   */
  @javax.annotation.Nullable
  public String getAnonUserId() {
    return anonUserId;
  }

  public void setAnonUserId(@javax.annotation.Nullable String anonUserId) {
    this.anonUserId = anonUserId;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys commenterName(@javax.annotation.Nonnull String commenterName) {
    this.commenterName = commenterName;
    return this;
  }

  /**
   * Get commenterName
   * @return commenterName
   */
  @javax.annotation.Nonnull
  public String getCommenterName() {
    return commenterName;
  }

  public void setCommenterName(@javax.annotation.Nonnull String commenterName) {
    this.commenterName = commenterName;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys commenterLink(@javax.annotation.Nullable String commenterLink) {
    this.commenterLink = commenterLink;
    return this;
  }

  /**
   * Get commenterLink
   * @return commenterLink
   */
  @javax.annotation.Nullable
  public String getCommenterLink() {
    return commenterLink;
  }

  public void setCommenterLink(@javax.annotation.Nullable String commenterLink) {
    this.commenterLink = commenterLink;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys comment(@javax.annotation.Nonnull String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nonnull
  public String getComment() {
    return comment;
  }

  public void setComment(@javax.annotation.Nonnull String comment) {
    this.comment = comment;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys commentHTML(@javax.annotation.Nonnull String commentHTML) {
    this.commentHTML = commentHTML;
    return this;
  }

  /**
   * Get commentHTML
   * @return commentHTML
   */
  @javax.annotation.Nonnull
  public String getCommentHTML() {
    return commentHTML;
  }

  public void setCommentHTML(@javax.annotation.Nonnull String commentHTML) {
    this.commentHTML = commentHTML;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys parentId(@javax.annotation.Nullable String parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * Get parentId
   * @return parentId
   */
  @javax.annotation.Nullable
  public String getParentId() {
    return parentId;
  }

  public void setParentId(@javax.annotation.Nullable String parentId) {
    this.parentId = parentId;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys votes(@javax.annotation.Nullable Integer votes) {
    this.votes = votes;
    return this;
  }

  /**
   * Get votes
   * @return votes
   */
  @javax.annotation.Nullable
  public Integer getVotes() {
    return votes;
  }

  public void setVotes(@javax.annotation.Nullable Integer votes) {
    this.votes = votes;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys votesUp(@javax.annotation.Nullable Integer votesUp) {
    this.votesUp = votesUp;
    return this;
  }

  /**
   * Get votesUp
   * @return votesUp
   */
  @javax.annotation.Nullable
  public Integer getVotesUp() {
    return votesUp;
  }

  public void setVotesUp(@javax.annotation.Nullable Integer votesUp) {
    this.votesUp = votesUp;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys votesDown(@javax.annotation.Nullable Integer votesDown) {
    this.votesDown = votesDown;
    return this;
  }

  /**
   * Get votesDown
   * @return votesDown
   */
  @javax.annotation.Nullable
  public Integer getVotesDown() {
    return votesDown;
  }

  public void setVotesDown(@javax.annotation.Nullable Integer votesDown) {
    this.votesDown = votesDown;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys expireAt(@javax.annotation.Nullable OffsetDateTime expireAt) {
    this.expireAt = expireAt;
    return this;
  }

  /**
   * Get expireAt
   * @return expireAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpireAt() {
    return expireAt;
  }

  public void setExpireAt(@javax.annotation.Nullable OffsetDateTime expireAt) {
    this.expireAt = expireAt;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys verified(@javax.annotation.Nonnull Boolean verified) {
    this.verified = verified;
    return this;
  }

  /**
   * Get verified
   * @return verified
   */
  @javax.annotation.Nonnull
  public Boolean getVerified() {
    return verified;
  }

  public void setVerified(@javax.annotation.Nonnull Boolean verified) {
    this.verified = verified;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys reviewed(@javax.annotation.Nullable Boolean reviewed) {
    this.reviewed = reviewed;
    return this;
  }

  /**
   * Get reviewed
   * @return reviewed
   */
  @javax.annotation.Nullable
  public Boolean getReviewed() {
    return reviewed;
  }

  public void setReviewed(@javax.annotation.Nullable Boolean reviewed) {
    this.reviewed = reviewed;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys avatarSrc(@javax.annotation.Nullable String avatarSrc) {
    this.avatarSrc = avatarSrc;
    return this;
  }

  /**
   * Get avatarSrc
   * @return avatarSrc
   */
  @javax.annotation.Nullable
  public String getAvatarSrc() {
    return avatarSrc;
  }

  public void setAvatarSrc(@javax.annotation.Nullable String avatarSrc) {
    this.avatarSrc = avatarSrc;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys isSpam(@javax.annotation.Nullable Boolean isSpam) {
    this.isSpam = isSpam;
    return this;
  }

  /**
   * Get isSpam
   * @return isSpam
   */
  @javax.annotation.Nullable
  public Boolean getIsSpam() {
    return isSpam;
  }

  public void setIsSpam(@javax.annotation.Nullable Boolean isSpam) {
    this.isSpam = isSpam;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys hasImages(@javax.annotation.Nullable Boolean hasImages) {
    this.hasImages = hasImages;
    return this;
  }

  /**
   * Get hasImages
   * @return hasImages
   */
  @javax.annotation.Nullable
  public Boolean getHasImages() {
    return hasImages;
  }

  public void setHasImages(@javax.annotation.Nullable Boolean hasImages) {
    this.hasImages = hasImages;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys hasLinks(@javax.annotation.Nullable Boolean hasLinks) {
    this.hasLinks = hasLinks;
    return this;
  }

  /**
   * Get hasLinks
   * @return hasLinks
   */
  @javax.annotation.Nullable
  public Boolean getHasLinks() {
    return hasLinks;
  }

  public void setHasLinks(@javax.annotation.Nullable Boolean hasLinks) {
    this.hasLinks = hasLinks;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys hasCode(@javax.annotation.Nullable Boolean hasCode) {
    this.hasCode = hasCode;
    return this;
  }

  /**
   * Get hasCode
   * @return hasCode
   */
  @javax.annotation.Nullable
  public Boolean getHasCode() {
    return hasCode;
  }

  public void setHasCode(@javax.annotation.Nullable Boolean hasCode) {
    this.hasCode = hasCode;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys approved(@javax.annotation.Nonnull Boolean approved) {
    this.approved = approved;
    return this;
  }

  /**
   * Get approved
   * @return approved
   */
  @javax.annotation.Nonnull
  public Boolean getApproved() {
    return approved;
  }

  public void setApproved(@javax.annotation.Nonnull Boolean approved) {
    this.approved = approved;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys locale(@javax.annotation.Nonnull String locale) {
    this.locale = locale;
    return this;
  }

  /**
   * Get locale
   * @return locale
   */
  @javax.annotation.Nonnull
  public String getLocale() {
    return locale;
  }

  public void setLocale(@javax.annotation.Nonnull String locale) {
    this.locale = locale;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys isDeleted(@javax.annotation.Nullable Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Get isDeleted
   * @return isDeleted
   */
  @javax.annotation.Nullable
  public Boolean getIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(@javax.annotation.Nullable Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys isDeletedUser(@javax.annotation.Nullable Boolean isDeletedUser) {
    this.isDeletedUser = isDeletedUser;
    return this;
  }

  /**
   * Get isDeletedUser
   * @return isDeletedUser
   */
  @javax.annotation.Nullable
  public Boolean getIsDeletedUser() {
    return isDeletedUser;
  }

  public void setIsDeletedUser(@javax.annotation.Nullable Boolean isDeletedUser) {
    this.isDeletedUser = isDeletedUser;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys isBannedUser(@javax.annotation.Nullable Boolean isBannedUser) {
    this.isBannedUser = isBannedUser;
    return this;
  }

  /**
   * Get isBannedUser
   * @return isBannedUser
   */
  @javax.annotation.Nullable
  public Boolean getIsBannedUser() {
    return isBannedUser;
  }

  public void setIsBannedUser(@javax.annotation.Nullable Boolean isBannedUser) {
    this.isBannedUser = isBannedUser;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys isByAdmin(@javax.annotation.Nullable Boolean isByAdmin) {
    this.isByAdmin = isByAdmin;
    return this;
  }

  /**
   * Get isByAdmin
   * @return isByAdmin
   */
  @javax.annotation.Nullable
  public Boolean getIsByAdmin() {
    return isByAdmin;
  }

  public void setIsByAdmin(@javax.annotation.Nullable Boolean isByAdmin) {
    this.isByAdmin = isByAdmin;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys isByModerator(@javax.annotation.Nullable Boolean isByModerator) {
    this.isByModerator = isByModerator;
    return this;
  }

  /**
   * Get isByModerator
   * @return isByModerator
   */
  @javax.annotation.Nullable
  public Boolean getIsByModerator() {
    return isByModerator;
  }

  public void setIsByModerator(@javax.annotation.Nullable Boolean isByModerator) {
    this.isByModerator = isByModerator;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys isPinned(@javax.annotation.Nullable Boolean isPinned) {
    this.isPinned = isPinned;
    return this;
  }

  /**
   * Get isPinned
   * @return isPinned
   */
  @javax.annotation.Nullable
  public Boolean getIsPinned() {
    return isPinned;
  }

  public void setIsPinned(@javax.annotation.Nullable Boolean isPinned) {
    this.isPinned = isPinned;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys isLocked(@javax.annotation.Nullable Boolean isLocked) {
    this.isLocked = isLocked;
    return this;
  }

  /**
   * Get isLocked
   * @return isLocked
   */
  @javax.annotation.Nullable
  public Boolean getIsLocked() {
    return isLocked;
  }

  public void setIsLocked(@javax.annotation.Nullable Boolean isLocked) {
    this.isLocked = isLocked;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys flagCount(@javax.annotation.Nullable Integer flagCount) {
    this.flagCount = flagCount;
    return this;
  }

  /**
   * Get flagCount
   * @return flagCount
   */
  @javax.annotation.Nullable
  public Integer getFlagCount() {
    return flagCount;
  }

  public void setFlagCount(@javax.annotation.Nullable Integer flagCount) {
    this.flagCount = flagCount;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys rating(@javax.annotation.Nullable Double rating) {
    this.rating = rating;
    return this;
  }

  /**
   * Get rating
   * @return rating
   */
  @javax.annotation.Nullable
  public Double getRating() {
    return rating;
  }

  public void setRating(@javax.annotation.Nullable Double rating) {
    this.rating = rating;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys displayLabel(@javax.annotation.Nullable String displayLabel) {
    this.displayLabel = displayLabel;
    return this;
  }

  /**
   * Get displayLabel
   * @return displayLabel
   */
  @javax.annotation.Nullable
  public String getDisplayLabel() {
    return displayLabel;
  }

  public void setDisplayLabel(@javax.annotation.Nullable String displayLabel) {
    this.displayLabel = displayLabel;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys badges(@javax.annotation.Nullable List<CommentUserBadgeInfo> badges) {
    this.badges = badges;
    return this;
  }

  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys addBadgesItem(CommentUserBadgeInfo badgesItem) {
    if (this.badges == null) {
      this.badges = new ArrayList<>();
    }
    this.badges.add(badgesItem);
    return this;
  }

  /**
   * Get badges
   * @return badges
   */
  @javax.annotation.Nullable
  public List<CommentUserBadgeInfo> getBadges() {
    return badges;
  }

  public void setBadges(@javax.annotation.Nullable List<CommentUserBadgeInfo> badges) {
    this.badges = badges;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys domain(@javax.annotation.Nullable String domain) {
    this.domain = domain;
    return this;
  }

  /**
   * Get domain
   * @return domain
   */
  @javax.annotation.Nullable
  public String getDomain() {
    return domain;
  }

  public void setDomain(@javax.annotation.Nullable String domain) {
    this.domain = domain;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys feedbackIds(@javax.annotation.Nullable List<String> feedbackIds) {
    this.feedbackIds = feedbackIds;
    return this;
  }

  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys addFeedbackIdsItem(String feedbackIdsItem) {
    if (this.feedbackIds == null) {
      this.feedbackIds = new ArrayList<>();
    }
    this.feedbackIds.add(feedbackIdsItem);
    return this;
  }

  /**
   * Get feedbackIds
   * @return feedbackIds
   */
  @javax.annotation.Nullable
  public List<String> getFeedbackIds() {
    return feedbackIds;
  }

  public void setFeedbackIds(@javax.annotation.Nullable List<String> feedbackIds) {
    this.feedbackIds = feedbackIds;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys groupIds(@javax.annotation.Nullable List<String> groupIds) {
    this.groupIds = groupIds;
    return this;
  }

  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys addGroupIdsItem(String groupIdsItem) {
    if (this.groupIds == null) {
      this.groupIds = new ArrayList<>();
    }
    this.groupIds.add(groupIdsItem);
    return this;
  }

  /**
   * Get groupIds
   * @return groupIds
   */
  @javax.annotation.Nullable
  public List<String> getGroupIds() {
    return groupIds;
  }

  public void setGroupIds(@javax.annotation.Nullable List<String> groupIds) {
    this.groupIds = groupIds;
  }


  public PickOmitFCommentDatePublicCommentPubSubFieldsKeys viewCount(@javax.annotation.Nullable Double viewCount) {
    this.viewCount = viewCount;
    return this;
  }

  /**
   * Get viewCount
   * @return viewCount
   */
  @javax.annotation.Nullable
  public Double getViewCount() {
    return viewCount;
  }

  public void setViewCount(@javax.annotation.Nullable Double viewCount) {
    this.viewCount = viewCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PickOmitFCommentDatePublicCommentPubSubFieldsKeys pickOmitFCommentDatePublicCommentPubSubFieldsKeys = (PickOmitFCommentDatePublicCommentPubSubFieldsKeys) o;
    return Objects.equals(this.id, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.id) &&
        Objects.equals(this.urlId, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.urlId) &&
        Objects.equals(this.url, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.url) &&
        Objects.equals(this.pageTitle, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.pageTitle) &&
        Objects.equals(this.date, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.date) &&
        Objects.equals(this.tenantId, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.tenantId) &&
        Objects.equals(this.userId, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.userId) &&
        Objects.equals(this.anonUserId, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.anonUserId) &&
        Objects.equals(this.commenterName, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.commenterName) &&
        Objects.equals(this.commenterLink, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.commenterLink) &&
        Objects.equals(this.comment, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.comment) &&
        Objects.equals(this.commentHTML, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.commentHTML) &&
        Objects.equals(this.parentId, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.parentId) &&
        Objects.equals(this.votes, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.votes) &&
        Objects.equals(this.votesUp, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.votesUp) &&
        Objects.equals(this.votesDown, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.votesDown) &&
        Objects.equals(this.expireAt, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.expireAt) &&
        Objects.equals(this.verified, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.verified) &&
        Objects.equals(this.reviewed, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.reviewed) &&
        Objects.equals(this.avatarSrc, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.avatarSrc) &&
        Objects.equals(this.isSpam, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.isSpam) &&
        Objects.equals(this.hasImages, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.hasImages) &&
        Objects.equals(this.hasLinks, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.hasLinks) &&
        Objects.equals(this.hasCode, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.hasCode) &&
        Objects.equals(this.approved, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.approved) &&
        Objects.equals(this.locale, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.locale) &&
        Objects.equals(this.isDeleted, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.isDeleted) &&
        Objects.equals(this.isDeletedUser, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.isDeletedUser) &&
        Objects.equals(this.isBannedUser, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.isBannedUser) &&
        Objects.equals(this.isByAdmin, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.isByAdmin) &&
        Objects.equals(this.isByModerator, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.isByModerator) &&
        Objects.equals(this.isPinned, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.isPinned) &&
        Objects.equals(this.isLocked, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.isLocked) &&
        Objects.equals(this.flagCount, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.flagCount) &&
        Objects.equals(this.rating, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.rating) &&
        Objects.equals(this.displayLabel, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.displayLabel) &&
        Objects.equals(this.badges, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.badges) &&
        Objects.equals(this.domain, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.domain) &&
        Objects.equals(this.feedbackIds, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.feedbackIds) &&
        Objects.equals(this.groupIds, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.groupIds) &&
        Objects.equals(this.viewCount, pickOmitFCommentDatePublicCommentPubSubFieldsKeys.viewCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, urlId, url, pageTitle, date, tenantId, userId, anonUserId, commenterName, commenterLink, comment, commentHTML, parentId, votes, votesUp, votesDown, expireAt, verified, reviewed, avatarSrc, isSpam, hasImages, hasLinks, hasCode, approved, locale, isDeleted, isDeletedUser, isBannedUser, isByAdmin, isByModerator, isPinned, isLocked, flagCount, rating, displayLabel, badges, domain, feedbackIds, groupIds, viewCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PickOmitFCommentDatePublicCommentPubSubFieldsKeys {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    urlId: ").append(toIndentedString(urlId)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    pageTitle: ").append(toIndentedString(pageTitle)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    anonUserId: ").append(toIndentedString(anonUserId)).append("\n");
    sb.append("    commenterName: ").append(toIndentedString(commenterName)).append("\n");
    sb.append("    commenterLink: ").append(toIndentedString(commenterLink)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    commentHTML: ").append(toIndentedString(commentHTML)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    votes: ").append(toIndentedString(votes)).append("\n");
    sb.append("    votesUp: ").append(toIndentedString(votesUp)).append("\n");
    sb.append("    votesDown: ").append(toIndentedString(votesDown)).append("\n");
    sb.append("    expireAt: ").append(toIndentedString(expireAt)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("    reviewed: ").append(toIndentedString(reviewed)).append("\n");
    sb.append("    avatarSrc: ").append(toIndentedString(avatarSrc)).append("\n");
    sb.append("    isSpam: ").append(toIndentedString(isSpam)).append("\n");
    sb.append("    hasImages: ").append(toIndentedString(hasImages)).append("\n");
    sb.append("    hasLinks: ").append(toIndentedString(hasLinks)).append("\n");
    sb.append("    hasCode: ").append(toIndentedString(hasCode)).append("\n");
    sb.append("    approved: ").append(toIndentedString(approved)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    isDeletedUser: ").append(toIndentedString(isDeletedUser)).append("\n");
    sb.append("    isBannedUser: ").append(toIndentedString(isBannedUser)).append("\n");
    sb.append("    isByAdmin: ").append(toIndentedString(isByAdmin)).append("\n");
    sb.append("    isByModerator: ").append(toIndentedString(isByModerator)).append("\n");
    sb.append("    isPinned: ").append(toIndentedString(isPinned)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("    flagCount: ").append(toIndentedString(flagCount)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    displayLabel: ").append(toIndentedString(displayLabel)).append("\n");
    sb.append("    badges: ").append(toIndentedString(badges)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    feedbackIds: ").append(toIndentedString(feedbackIds)).append("\n");
    sb.append("    groupIds: ").append(toIndentedString(groupIds)).append("\n");
    sb.append("    viewCount: ").append(toIndentedString(viewCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_id");
    openapiFields.add("urlId");
    openapiFields.add("url");
    openapiFields.add("pageTitle");
    openapiFields.add("date");
    openapiFields.add("tenantId");
    openapiFields.add("userId");
    openapiFields.add("anonUserId");
    openapiFields.add("commenterName");
    openapiFields.add("commenterLink");
    openapiFields.add("comment");
    openapiFields.add("commentHTML");
    openapiFields.add("parentId");
    openapiFields.add("votes");
    openapiFields.add("votesUp");
    openapiFields.add("votesDown");
    openapiFields.add("expireAt");
    openapiFields.add("verified");
    openapiFields.add("reviewed");
    openapiFields.add("avatarSrc");
    openapiFields.add("isSpam");
    openapiFields.add("hasImages");
    openapiFields.add("hasLinks");
    openapiFields.add("hasCode");
    openapiFields.add("approved");
    openapiFields.add("locale");
    openapiFields.add("isDeleted");
    openapiFields.add("isDeletedUser");
    openapiFields.add("isBannedUser");
    openapiFields.add("isByAdmin");
    openapiFields.add("isByModerator");
    openapiFields.add("isPinned");
    openapiFields.add("isLocked");
    openapiFields.add("flagCount");
    openapiFields.add("rating");
    openapiFields.add("displayLabel");
    openapiFields.add("badges");
    openapiFields.add("domain");
    openapiFields.add("feedbackIds");
    openapiFields.add("groupIds");
    openapiFields.add("viewCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("_id");
    openapiRequiredFields.add("urlId");
    openapiRequiredFields.add("url");
    openapiRequiredFields.add("date");
    openapiRequiredFields.add("tenantId");
    openapiRequiredFields.add("commenterName");
    openapiRequiredFields.add("comment");
    openapiRequiredFields.add("commentHTML");
    openapiRequiredFields.add("verified");
    openapiRequiredFields.add("approved");
    openapiRequiredFields.add("locale");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PickOmitFCommentDatePublicCommentPubSubFieldsKeys
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PickOmitFCommentDatePublicCommentPubSubFieldsKeys.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PickOmitFCommentDatePublicCommentPubSubFieldsKeys is not found in the empty JSON string", PickOmitFCommentDatePublicCommentPubSubFieldsKeys.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PickOmitFCommentDatePublicCommentPubSubFieldsKeys.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PickOmitFCommentDatePublicCommentPubSubFieldsKeys` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PickOmitFCommentDatePublicCommentPubSubFieldsKeys.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_id").toString()));
      }
      if (!jsonObj.get("urlId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urlId").toString()));
      }
      if (!jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("pageTitle") != null && !jsonObj.get("pageTitle").isJsonNull()) && !jsonObj.get("pageTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageTitle").toString()));
      }
      if (!jsonObj.get("tenantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantId").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("anonUserId") != null && !jsonObj.get("anonUserId").isJsonNull()) && !jsonObj.get("anonUserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `anonUserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("anonUserId").toString()));
      }
      if (!jsonObj.get("commenterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commenterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commenterName").toString()));
      }
      if ((jsonObj.get("commenterLink") != null && !jsonObj.get("commenterLink").isJsonNull()) && !jsonObj.get("commenterLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commenterLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commenterLink").toString()));
      }
      if (!jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if (!jsonObj.get("commentHTML").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commentHTML` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commentHTML").toString()));
      }
      if ((jsonObj.get("parentId") != null && !jsonObj.get("parentId").isJsonNull()) && !jsonObj.get("parentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentId").toString()));
      }
      if ((jsonObj.get("avatarSrc") != null && !jsonObj.get("avatarSrc").isJsonNull()) && !jsonObj.get("avatarSrc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatarSrc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatarSrc").toString()));
      }
      if (!jsonObj.get("locale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locale").toString()));
      }
      if ((jsonObj.get("displayLabel") != null && !jsonObj.get("displayLabel").isJsonNull()) && !jsonObj.get("displayLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayLabel").toString()));
      }
      if (jsonObj.get("badges") != null && !jsonObj.get("badges").isJsonNull()) {
        JsonArray jsonArraybadges = jsonObj.getAsJsonArray("badges");
        if (jsonArraybadges != null) {
          // ensure the json data is an array
          if (!jsonObj.get("badges").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `badges` to be an array in the JSON string but got `%s`", jsonObj.get("badges").toString()));
          }

          // validate the optional field `badges` (array)
          for (int i = 0; i < jsonArraybadges.size(); i++) {
            CommentUserBadgeInfo.validateJsonElement(jsonArraybadges.get(i));
          };
        }
      }
      if ((jsonObj.get("domain") != null && !jsonObj.get("domain").isJsonNull()) && !jsonObj.get("domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("feedbackIds") != null && !jsonObj.get("feedbackIds").isJsonNull() && !jsonObj.get("feedbackIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `feedbackIds` to be an array in the JSON string but got `%s`", jsonObj.get("feedbackIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("groupIds") != null && !jsonObj.get("groupIds").isJsonNull() && !jsonObj.get("groupIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `groupIds` to be an array in the JSON string but got `%s`", jsonObj.get("groupIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PickOmitFCommentDatePublicCommentPubSubFieldsKeys.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PickOmitFCommentDatePublicCommentPubSubFieldsKeys' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PickOmitFCommentDatePublicCommentPubSubFieldsKeys> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PickOmitFCommentDatePublicCommentPubSubFieldsKeys.class));

       return (TypeAdapter<T>) new TypeAdapter<PickOmitFCommentDatePublicCommentPubSubFieldsKeys>() {
           @Override
           public void write(JsonWriter out, PickOmitFCommentDatePublicCommentPubSubFieldsKeys value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PickOmitFCommentDatePublicCommentPubSubFieldsKeys read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PickOmitFCommentDatePublicCommentPubSubFieldsKeys given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PickOmitFCommentDatePublicCommentPubSubFieldsKeys
   * @throws IOException if the JSON string is invalid with respect to PickOmitFCommentDatePublicCommentPubSubFieldsKeys
   */
  public static PickOmitFCommentDatePublicCommentPubSubFieldsKeys fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PickOmitFCommentDatePublicCommentPubSubFieldsKeys.class);
  }

  /**
   * Convert an instance of PickOmitFCommentDatePublicCommentPubSubFieldsKeys to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


/*
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fastcomments.model;

import java.util.Objects;
import com.fastcomments.model.CommentHTMLRenderingMode;
import com.fastcomments.model.CommentQuestionResultsRenderingType;
import com.fastcomments.model.CommentQuestionsRequired;
import com.fastcomments.model.CommentThreadDeletionMode;
import com.fastcomments.model.CommenterNameFormats;
import com.fastcomments.model.GifRating;
import com.fastcomments.model.QuestionRenderingType;
import com.fastcomments.model.QuestionSubQuestionVisibility;
import com.fastcomments.model.QuestionWhenSave;
import com.fastcomments.model.SortDirections;
import com.fastcomments.model.SpamRule;
import com.fastcomments.model.VoteStyle;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.fastcomments.invoker.JSON;

/**
 * CustomConfigParameters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-13T12:29:11.559332196-08:00[America/Los_Angeles]")
public class CustomConfigParameters {
  public static final String SERIALIZED_NAME_ABSOLUTE_AND_RELATIVE_DATES = "absoluteAndRelativeDates";
  @SerializedName(SERIALIZED_NAME_ABSOLUTE_AND_RELATIVE_DATES)
  private Boolean absoluteAndRelativeDates;

  public static final String SERIALIZED_NAME_ABSOLUTE_DATES = "absoluteDates";
  @SerializedName(SERIALIZED_NAME_ABSOLUTE_DATES)
  private Boolean absoluteDates;

  public static final String SERIALIZED_NAME_ALLOW_ANON = "allowAnon";
  @SerializedName(SERIALIZED_NAME_ALLOW_ANON)
  private Boolean allowAnon;

  public static final String SERIALIZED_NAME_ALLOW_ANON_FLAG = "allowAnonFlag";
  @SerializedName(SERIALIZED_NAME_ALLOW_ANON_FLAG)
  private Boolean allowAnonFlag;

  public static final String SERIALIZED_NAME_ALLOW_ANON_VOTES = "allowAnonVotes";
  @SerializedName(SERIALIZED_NAME_ALLOW_ANON_VOTES)
  private Boolean allowAnonVotes;

  public static final String SERIALIZED_NAME_ALLOWED_LANGUAGES = "allowedLanguages";
  @SerializedName(SERIALIZED_NAME_ALLOWED_LANGUAGES)
  private List<String> allowedLanguages;

  public static final String SERIALIZED_NAME_COLLAPSE_REPLIES = "collapseReplies";
  @SerializedName(SERIALIZED_NAME_COLLAPSE_REPLIES)
  private Boolean collapseReplies;

  public static final String SERIALIZED_NAME_COMMENT_COUNT_FORMAT = "commentCountFormat";
  @SerializedName(SERIALIZED_NAME_COMMENT_COUNT_FORMAT)
  private String commentCountFormat;

  public static final String SERIALIZED_NAME_COMMENT_H_T_M_L_RENDERING_MODE = "commentHTMLRenderingMode";
  @SerializedName(SERIALIZED_NAME_COMMENT_H_T_M_L_RENDERING_MODE)
  private CommentHTMLRenderingMode commentHTMLRenderingMode;

  public static final String SERIALIZED_NAME_COMMENT_THREAD_DELETE_MODE = "commentThreadDeleteMode";
  @SerializedName(SERIALIZED_NAME_COMMENT_THREAD_DELETE_MODE)
  private CommentThreadDeletionMode commentThreadDeleteMode;

  public static final String SERIALIZED_NAME_COMMENTER_NAME_FORMAT = "commenterNameFormat";
  @SerializedName(SERIALIZED_NAME_COMMENTER_NAME_FORMAT)
  private CommenterNameFormats commenterNameFormat;

  public static final String SERIALIZED_NAME_COUNT_ABOVE_TOGGLE = "countAboveToggle";
  @SerializedName(SERIALIZED_NAME_COUNT_ABOVE_TOGGLE)
  private Double countAboveToggle;

  public static final String SERIALIZED_NAME_CUSTOM_C_S_S = "customCSS";
  @SerializedName(SERIALIZED_NAME_CUSTOM_C_S_S)
  private String customCSS;

  public static final String SERIALIZED_NAME_DEFAULT_AVATAR_SRC = "defaultAvatarSrc";
  @SerializedName(SERIALIZED_NAME_DEFAULT_AVATAR_SRC)
  private String defaultAvatarSrc;

  public static final String SERIALIZED_NAME_DEFAULT_SORT_DIRECTION = "defaultSortDirection";
  @SerializedName(SERIALIZED_NAME_DEFAULT_SORT_DIRECTION)
  private SortDirections defaultSortDirection;

  public static final String SERIALIZED_NAME_DEFAULT_USERNAME = "defaultUsername";
  @SerializedName(SERIALIZED_NAME_DEFAULT_USERNAME)
  private String defaultUsername;

  public static final String SERIALIZED_NAME_DISABLE_AUTO_ADMIN_MIGRATION = "disableAutoAdminMigration";
  @SerializedName(SERIALIZED_NAME_DISABLE_AUTO_ADMIN_MIGRATION)
  private Boolean disableAutoAdminMigration;

  public static final String SERIALIZED_NAME_DISABLE_AUTO_HASH_TAG_CREATION = "disableAutoHashTagCreation";
  @SerializedName(SERIALIZED_NAME_DISABLE_AUTO_HASH_TAG_CREATION)
  private Boolean disableAutoHashTagCreation;

  public static final String SERIALIZED_NAME_DISABLE_BLOCKING = "disableBlocking";
  @SerializedName(SERIALIZED_NAME_DISABLE_BLOCKING)
  private Boolean disableBlocking;

  public static final String SERIALIZED_NAME_DISABLE_COMMENTER_COMMENT_DELETE = "disableCommenterCommentDelete";
  @SerializedName(SERIALIZED_NAME_DISABLE_COMMENTER_COMMENT_DELETE)
  private Boolean disableCommenterCommentDelete;

  public static final String SERIALIZED_NAME_DISABLE_COMMENTER_COMMENT_EDIT = "disableCommenterCommentEdit";
  @SerializedName(SERIALIZED_NAME_DISABLE_COMMENTER_COMMENT_EDIT)
  private Boolean disableCommenterCommentEdit;

  public static final String SERIALIZED_NAME_DISABLE_EMAIL_INPUTS = "disableEmailInputs";
  @SerializedName(SERIALIZED_NAME_DISABLE_EMAIL_INPUTS)
  private Boolean disableEmailInputs;

  public static final String SERIALIZED_NAME_DISABLE_LIVE_COMMENTING = "disableLiveCommenting";
  @SerializedName(SERIALIZED_NAME_DISABLE_LIVE_COMMENTING)
  private Boolean disableLiveCommenting;

  public static final String SERIALIZED_NAME_DISABLE_NOTIFICATION_BELL = "disableNotificationBell";
  @SerializedName(SERIALIZED_NAME_DISABLE_NOTIFICATION_BELL)
  private Boolean disableNotificationBell;

  public static final String SERIALIZED_NAME_DISABLE_PROFILES = "disableProfiles";
  @SerializedName(SERIALIZED_NAME_DISABLE_PROFILES)
  private Boolean disableProfiles;

  public static final String SERIALIZED_NAME_DISABLE_SUCCESS_MESSAGE = "disableSuccessMessage";
  @SerializedName(SERIALIZED_NAME_DISABLE_SUCCESS_MESSAGE)
  private Boolean disableSuccessMessage;

  public static final String SERIALIZED_NAME_DISABLE_TOOLBAR = "disableToolbar";
  @SerializedName(SERIALIZED_NAME_DISABLE_TOOLBAR)
  private Boolean disableToolbar;

  public static final String SERIALIZED_NAME_DISABLE_UNVERIFIED_LABEL = "disableUnverifiedLabel";
  @SerializedName(SERIALIZED_NAME_DISABLE_UNVERIFIED_LABEL)
  private Boolean disableUnverifiedLabel;

  public static final String SERIALIZED_NAME_DISABLE_VOTING = "disableVoting";
  @SerializedName(SERIALIZED_NAME_DISABLE_VOTING)
  private Boolean disableVoting;

  public static final String SERIALIZED_NAME_ENABLE_COMMENTER_LINKS = "enableCommenterLinks";
  @SerializedName(SERIALIZED_NAME_ENABLE_COMMENTER_LINKS)
  private Boolean enableCommenterLinks;

  public static final String SERIALIZED_NAME_ENABLE_SEARCH = "enableSearch";
  @SerializedName(SERIALIZED_NAME_ENABLE_SEARCH)
  private Boolean enableSearch;

  public static final String SERIALIZED_NAME_ENABLE_SPOILERS = "enableSpoilers";
  @SerializedName(SERIALIZED_NAME_ENABLE_SPOILERS)
  private Boolean enableSpoilers;

  public static final String SERIALIZED_NAME_ENABLE_THIRD_PARTY_COOKIE_BYPASS = "enableThirdPartyCookieBypass";
  @SerializedName(SERIALIZED_NAME_ENABLE_THIRD_PARTY_COOKIE_BYPASS)
  private Boolean enableThirdPartyCookieBypass;

  public static final String SERIALIZED_NAME_ENABLE_VIEW_COUNTS = "enableViewCounts";
  @SerializedName(SERIALIZED_NAME_ENABLE_VIEW_COUNTS)
  private Boolean enableViewCounts;

  public static final String SERIALIZED_NAME_ENABLE_VOTE_LIST = "enableVoteList";
  @SerializedName(SERIALIZED_NAME_ENABLE_VOTE_LIST)
  private Boolean enableVoteList;

  public static final String SERIALIZED_NAME_ENABLE_W_Y_S_I_W_Y_G = "enableWYSIWYG";
  @SerializedName(SERIALIZED_NAME_ENABLE_W_Y_S_I_W_Y_G)
  private Boolean enableWYSIWYG;

  public static final String SERIALIZED_NAME_GIF_RATING = "gifRating";
  @SerializedName(SERIALIZED_NAME_GIF_RATING)
  private GifRating gifRating;

  public static final String SERIALIZED_NAME_HAS_DARK_BACKGROUND = "hasDarkBackground";
  @SerializedName(SERIALIZED_NAME_HAS_DARK_BACKGROUND)
  private Boolean hasDarkBackground;

  public static final String SERIALIZED_NAME_HEADER_H_T_M_L = "headerHTML";
  @SerializedName(SERIALIZED_NAME_HEADER_H_T_M_L)
  private String headerHTML;

  public static final String SERIALIZED_NAME_HIDE_AVATARS = "hideAvatars";
  @SerializedName(SERIALIZED_NAME_HIDE_AVATARS)
  private Boolean hideAvatars;

  public static final String SERIALIZED_NAME_HIDE_COMMENTS_UNDER_COUNT_TEXT_FORMAT = "hideCommentsUnderCountTextFormat";
  @SerializedName(SERIALIZED_NAME_HIDE_COMMENTS_UNDER_COUNT_TEXT_FORMAT)
  private String hideCommentsUnderCountTextFormat;

  public static final String SERIALIZED_NAME_INPUT_AFTER_COMMENTS = "inputAfterComments";
  @SerializedName(SERIALIZED_NAME_INPUT_AFTER_COMMENTS)
  private Boolean inputAfterComments;

  public static final String SERIALIZED_NAME_LIMIT_COMMENTS_BY_GROUPS = "limitCommentsByGroups";
  @SerializedName(SERIALIZED_NAME_LIMIT_COMMENTS_BY_GROUPS)
  private Boolean limitCommentsByGroups;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  private String locale;

  public static final String SERIALIZED_NAME_MAX_COMMENT_CHARACTER_LENGTH = "maxCommentCharacterLength";
  @SerializedName(SERIALIZED_NAME_MAX_COMMENT_CHARACTER_LENGTH)
  private Double maxCommentCharacterLength;

  public static final String SERIALIZED_NAME_MAX_COMMENT_CREATED_COUNT_P_U_P_M = "maxCommentCreatedCountPUPM";
  @SerializedName(SERIALIZED_NAME_MAX_COMMENT_CREATED_COUNT_P_U_P_M)
  private Double maxCommentCreatedCountPUPM;

  public static final String SERIALIZED_NAME_NO_CUSTOM_CONFIG = "noCustomConfig";
  @SerializedName(SERIALIZED_NAME_NO_CUSTOM_CONFIG)
  private Boolean noCustomConfig;

  public static final String SERIALIZED_NAME_NO_IMAGE_UPLOADS = "noImageUploads";
  @SerializedName(SERIALIZED_NAME_NO_IMAGE_UPLOADS)
  private Boolean noImageUploads;

  public static final String SERIALIZED_NAME_NO_STYLES = "noStyles";
  @SerializedName(SERIALIZED_NAME_NO_STYLES)
  private Boolean noStyles;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Double pageSize;

  public static final String SERIALIZED_NAME_READONLY = "readonly";
  @SerializedName(SERIALIZED_NAME_READONLY)
  private Boolean readonly;

  public static final String SERIALIZED_NAME_REQUIRE_S_S_O = "requireSSO";
  @SerializedName(SERIALIZED_NAME_REQUIRE_S_S_O)
  private Boolean requireSSO;

  public static final String SERIALIZED_NAME_RESTRICTED_LINK_DOMAINS = "restrictedLinkDomains";
  @SerializedName(SERIALIZED_NAME_RESTRICTED_LINK_DOMAINS)
  private List<String> restrictedLinkDomains;

  public static final String SERIALIZED_NAME_SHOW_COMMENT_SAVE_SUCCESS = "showCommentSaveSuccess";
  @SerializedName(SERIALIZED_NAME_SHOW_COMMENT_SAVE_SUCCESS)
  private Boolean showCommentSaveSuccess;

  public static final String SERIALIZED_NAME_SHOW_LIVE_RIGHT_AWAY = "showLiveRightAway";
  @SerializedName(SERIALIZED_NAME_SHOW_LIVE_RIGHT_AWAY)
  private Boolean showLiveRightAway;

  public static final String SERIALIZED_NAME_SHOW_QUESTION = "showQuestion";
  @SerializedName(SERIALIZED_NAME_SHOW_QUESTION)
  private Boolean showQuestion;

  public static final String SERIALIZED_NAME_SPAM_RULES = "spamRules";
  @SerializedName(SERIALIZED_NAME_SPAM_RULES)
  private List<SpamRule> spamRules;

  public static final String SERIALIZED_NAME_TRANSLATIONS = "translations";
  @SerializedName(SERIALIZED_NAME_TRANSLATIONS)
  private Map<String, String> translations;

  public static final String SERIALIZED_NAME_USE_SHOW_COMMENTS_TOGGLE = "useShowCommentsToggle";
  @SerializedName(SERIALIZED_NAME_USE_SHOW_COMMENTS_TOGGLE)
  private Boolean useShowCommentsToggle;

  public static final String SERIALIZED_NAME_USE_SINGLE_LINE_COMMENT_INPUT = "useSingleLineCommentInput";
  @SerializedName(SERIALIZED_NAME_USE_SINGLE_LINE_COMMENT_INPUT)
  private Boolean useSingleLineCommentInput;

  public static final String SERIALIZED_NAME_VOTE_STYLE = "voteStyle";
  @SerializedName(SERIALIZED_NAME_VOTE_STYLE)
  private VoteStyle voteStyle;

  public static final String SERIALIZED_NAME_WIDGET_QUESTION_ID = "widgetQuestionId";
  @SerializedName(SERIALIZED_NAME_WIDGET_QUESTION_ID)
  private String widgetQuestionId;

  public static final String SERIALIZED_NAME_WIDGET_QUESTION_RESULTS_STYLE = "widgetQuestionResultsStyle";
  @SerializedName(SERIALIZED_NAME_WIDGET_QUESTION_RESULTS_STYLE)
  private CommentQuestionResultsRenderingType widgetQuestionResultsStyle;

  public static final String SERIALIZED_NAME_WIDGET_QUESTION_STYLE = "widgetQuestionStyle";
  @SerializedName(SERIALIZED_NAME_WIDGET_QUESTION_STYLE)
  private QuestionRenderingType widgetQuestionStyle;

  public static final String SERIALIZED_NAME_WIDGET_QUESTION_WHEN_TO_SAVE = "widgetQuestionWhenToSave";
  @SerializedName(SERIALIZED_NAME_WIDGET_QUESTION_WHEN_TO_SAVE)
  private QuestionWhenSave widgetQuestionWhenToSave;

  public static final String SERIALIZED_NAME_WIDGET_QUESTIONS_REQUIRED = "widgetQuestionsRequired";
  @SerializedName(SERIALIZED_NAME_WIDGET_QUESTIONS_REQUIRED)
  private CommentQuestionsRequired widgetQuestionsRequired;

  public static final String SERIALIZED_NAME_WIDGET_SUB_QUESTION_VISIBILITY = "widgetSubQuestionVisibility";
  @SerializedName(SERIALIZED_NAME_WIDGET_SUB_QUESTION_VISIBILITY)
  private QuestionSubQuestionVisibility widgetSubQuestionVisibility;

  public static final String SERIALIZED_NAME_WRAP = "wrap";
  @SerializedName(SERIALIZED_NAME_WRAP)
  private Boolean wrap;

  public CustomConfigParameters() {
  }

  public CustomConfigParameters absoluteAndRelativeDates(Boolean absoluteAndRelativeDates) {
    this.absoluteAndRelativeDates = absoluteAndRelativeDates;
    return this;
  }

   /**
   * Get absoluteAndRelativeDates
   * @return absoluteAndRelativeDates
  **/
  @javax.annotation.Nullable
  public Boolean getAbsoluteAndRelativeDates() {
    return absoluteAndRelativeDates;
  }

  public void setAbsoluteAndRelativeDates(Boolean absoluteAndRelativeDates) {
    this.absoluteAndRelativeDates = absoluteAndRelativeDates;
  }


  public CustomConfigParameters absoluteDates(Boolean absoluteDates) {
    this.absoluteDates = absoluteDates;
    return this;
  }

   /**
   * Get absoluteDates
   * @return absoluteDates
  **/
  @javax.annotation.Nullable
  public Boolean getAbsoluteDates() {
    return absoluteDates;
  }

  public void setAbsoluteDates(Boolean absoluteDates) {
    this.absoluteDates = absoluteDates;
  }


  public CustomConfigParameters allowAnon(Boolean allowAnon) {
    this.allowAnon = allowAnon;
    return this;
  }

   /**
   * Get allowAnon
   * @return allowAnon
  **/
  @javax.annotation.Nullable
  public Boolean getAllowAnon() {
    return allowAnon;
  }

  public void setAllowAnon(Boolean allowAnon) {
    this.allowAnon = allowAnon;
  }


  public CustomConfigParameters allowAnonFlag(Boolean allowAnonFlag) {
    this.allowAnonFlag = allowAnonFlag;
    return this;
  }

   /**
   * Get allowAnonFlag
   * @return allowAnonFlag
  **/
  @javax.annotation.Nullable
  public Boolean getAllowAnonFlag() {
    return allowAnonFlag;
  }

  public void setAllowAnonFlag(Boolean allowAnonFlag) {
    this.allowAnonFlag = allowAnonFlag;
  }


  public CustomConfigParameters allowAnonVotes(Boolean allowAnonVotes) {
    this.allowAnonVotes = allowAnonVotes;
    return this;
  }

   /**
   * Get allowAnonVotes
   * @return allowAnonVotes
  **/
  @javax.annotation.Nullable
  public Boolean getAllowAnonVotes() {
    return allowAnonVotes;
  }

  public void setAllowAnonVotes(Boolean allowAnonVotes) {
    this.allowAnonVotes = allowAnonVotes;
  }


  public CustomConfigParameters allowedLanguages(List<String> allowedLanguages) {
    this.allowedLanguages = allowedLanguages;
    return this;
  }

  public CustomConfigParameters addAllowedLanguagesItem(String allowedLanguagesItem) {
    if (this.allowedLanguages == null) {
      this.allowedLanguages = new ArrayList<>();
    }
    this.allowedLanguages.add(allowedLanguagesItem);
    return this;
  }

   /**
   * Get allowedLanguages
   * @return allowedLanguages
  **/
  @javax.annotation.Nullable
  public List<String> getAllowedLanguages() {
    return allowedLanguages;
  }

  public void setAllowedLanguages(List<String> allowedLanguages) {
    this.allowedLanguages = allowedLanguages;
  }


  public CustomConfigParameters collapseReplies(Boolean collapseReplies) {
    this.collapseReplies = collapseReplies;
    return this;
  }

   /**
   * Get collapseReplies
   * @return collapseReplies
  **/
  @javax.annotation.Nullable
  public Boolean getCollapseReplies() {
    return collapseReplies;
  }

  public void setCollapseReplies(Boolean collapseReplies) {
    this.collapseReplies = collapseReplies;
  }


  public CustomConfigParameters commentCountFormat(String commentCountFormat) {
    this.commentCountFormat = commentCountFormat;
    return this;
  }

   /**
   * Get commentCountFormat
   * @return commentCountFormat
  **/
  @javax.annotation.Nullable
  public String getCommentCountFormat() {
    return commentCountFormat;
  }

  public void setCommentCountFormat(String commentCountFormat) {
    this.commentCountFormat = commentCountFormat;
  }


  public CustomConfigParameters commentHTMLRenderingMode(CommentHTMLRenderingMode commentHTMLRenderingMode) {
    this.commentHTMLRenderingMode = commentHTMLRenderingMode;
    return this;
  }

   /**
   * Get commentHTMLRenderingMode
   * @return commentHTMLRenderingMode
  **/
  @javax.annotation.Nullable
  public CommentHTMLRenderingMode getCommentHTMLRenderingMode() {
    return commentHTMLRenderingMode;
  }

  public void setCommentHTMLRenderingMode(CommentHTMLRenderingMode commentHTMLRenderingMode) {
    this.commentHTMLRenderingMode = commentHTMLRenderingMode;
  }


  public CustomConfigParameters commentThreadDeleteMode(CommentThreadDeletionMode commentThreadDeleteMode) {
    this.commentThreadDeleteMode = commentThreadDeleteMode;
    return this;
  }

   /**
   * Get commentThreadDeleteMode
   * @return commentThreadDeleteMode
  **/
  @javax.annotation.Nullable
  public CommentThreadDeletionMode getCommentThreadDeleteMode() {
    return commentThreadDeleteMode;
  }

  public void setCommentThreadDeleteMode(CommentThreadDeletionMode commentThreadDeleteMode) {
    this.commentThreadDeleteMode = commentThreadDeleteMode;
  }


  public CustomConfigParameters commenterNameFormat(CommenterNameFormats commenterNameFormat) {
    this.commenterNameFormat = commenterNameFormat;
    return this;
  }

   /**
   * Get commenterNameFormat
   * @return commenterNameFormat
  **/
  @javax.annotation.Nullable
  public CommenterNameFormats getCommenterNameFormat() {
    return commenterNameFormat;
  }

  public void setCommenterNameFormat(CommenterNameFormats commenterNameFormat) {
    this.commenterNameFormat = commenterNameFormat;
  }


  public CustomConfigParameters countAboveToggle(Double countAboveToggle) {
    this.countAboveToggle = countAboveToggle;
    return this;
  }

   /**
   * Get countAboveToggle
   * @return countAboveToggle
  **/
  @javax.annotation.Nullable
  public Double getCountAboveToggle() {
    return countAboveToggle;
  }

  public void setCountAboveToggle(Double countAboveToggle) {
    this.countAboveToggle = countAboveToggle;
  }


  public CustomConfigParameters customCSS(String customCSS) {
    this.customCSS = customCSS;
    return this;
  }

   /**
   * Get customCSS
   * @return customCSS
  **/
  @javax.annotation.Nullable
  public String getCustomCSS() {
    return customCSS;
  }

  public void setCustomCSS(String customCSS) {
    this.customCSS = customCSS;
  }


  public CustomConfigParameters defaultAvatarSrc(String defaultAvatarSrc) {
    this.defaultAvatarSrc = defaultAvatarSrc;
    return this;
  }

   /**
   * Get defaultAvatarSrc
   * @return defaultAvatarSrc
  **/
  @javax.annotation.Nullable
  public String getDefaultAvatarSrc() {
    return defaultAvatarSrc;
  }

  public void setDefaultAvatarSrc(String defaultAvatarSrc) {
    this.defaultAvatarSrc = defaultAvatarSrc;
  }


  public CustomConfigParameters defaultSortDirection(SortDirections defaultSortDirection) {
    this.defaultSortDirection = defaultSortDirection;
    return this;
  }

   /**
   * Get defaultSortDirection
   * @return defaultSortDirection
  **/
  @javax.annotation.Nullable
  public SortDirections getDefaultSortDirection() {
    return defaultSortDirection;
  }

  public void setDefaultSortDirection(SortDirections defaultSortDirection) {
    this.defaultSortDirection = defaultSortDirection;
  }


  public CustomConfigParameters defaultUsername(String defaultUsername) {
    this.defaultUsername = defaultUsername;
    return this;
  }

   /**
   * Get defaultUsername
   * @return defaultUsername
  **/
  @javax.annotation.Nullable
  public String getDefaultUsername() {
    return defaultUsername;
  }

  public void setDefaultUsername(String defaultUsername) {
    this.defaultUsername = defaultUsername;
  }


  public CustomConfigParameters disableAutoAdminMigration(Boolean disableAutoAdminMigration) {
    this.disableAutoAdminMigration = disableAutoAdminMigration;
    return this;
  }

   /**
   * Get disableAutoAdminMigration
   * @return disableAutoAdminMigration
  **/
  @javax.annotation.Nullable
  public Boolean getDisableAutoAdminMigration() {
    return disableAutoAdminMigration;
  }

  public void setDisableAutoAdminMigration(Boolean disableAutoAdminMigration) {
    this.disableAutoAdminMigration = disableAutoAdminMigration;
  }


  public CustomConfigParameters disableAutoHashTagCreation(Boolean disableAutoHashTagCreation) {
    this.disableAutoHashTagCreation = disableAutoHashTagCreation;
    return this;
  }

   /**
   * Get disableAutoHashTagCreation
   * @return disableAutoHashTagCreation
  **/
  @javax.annotation.Nullable
  public Boolean getDisableAutoHashTagCreation() {
    return disableAutoHashTagCreation;
  }

  public void setDisableAutoHashTagCreation(Boolean disableAutoHashTagCreation) {
    this.disableAutoHashTagCreation = disableAutoHashTagCreation;
  }


  public CustomConfigParameters disableBlocking(Boolean disableBlocking) {
    this.disableBlocking = disableBlocking;
    return this;
  }

   /**
   * Get disableBlocking
   * @return disableBlocking
  **/
  @javax.annotation.Nullable
  public Boolean getDisableBlocking() {
    return disableBlocking;
  }

  public void setDisableBlocking(Boolean disableBlocking) {
    this.disableBlocking = disableBlocking;
  }


  public CustomConfigParameters disableCommenterCommentDelete(Boolean disableCommenterCommentDelete) {
    this.disableCommenterCommentDelete = disableCommenterCommentDelete;
    return this;
  }

   /**
   * Get disableCommenterCommentDelete
   * @return disableCommenterCommentDelete
  **/
  @javax.annotation.Nullable
  public Boolean getDisableCommenterCommentDelete() {
    return disableCommenterCommentDelete;
  }

  public void setDisableCommenterCommentDelete(Boolean disableCommenterCommentDelete) {
    this.disableCommenterCommentDelete = disableCommenterCommentDelete;
  }


  public CustomConfigParameters disableCommenterCommentEdit(Boolean disableCommenterCommentEdit) {
    this.disableCommenterCommentEdit = disableCommenterCommentEdit;
    return this;
  }

   /**
   * Get disableCommenterCommentEdit
   * @return disableCommenterCommentEdit
  **/
  @javax.annotation.Nullable
  public Boolean getDisableCommenterCommentEdit() {
    return disableCommenterCommentEdit;
  }

  public void setDisableCommenterCommentEdit(Boolean disableCommenterCommentEdit) {
    this.disableCommenterCommentEdit = disableCommenterCommentEdit;
  }


  public CustomConfigParameters disableEmailInputs(Boolean disableEmailInputs) {
    this.disableEmailInputs = disableEmailInputs;
    return this;
  }

   /**
   * Get disableEmailInputs
   * @return disableEmailInputs
  **/
  @javax.annotation.Nullable
  public Boolean getDisableEmailInputs() {
    return disableEmailInputs;
  }

  public void setDisableEmailInputs(Boolean disableEmailInputs) {
    this.disableEmailInputs = disableEmailInputs;
  }


  public CustomConfigParameters disableLiveCommenting(Boolean disableLiveCommenting) {
    this.disableLiveCommenting = disableLiveCommenting;
    return this;
  }

   /**
   * Get disableLiveCommenting
   * @return disableLiveCommenting
  **/
  @javax.annotation.Nullable
  public Boolean getDisableLiveCommenting() {
    return disableLiveCommenting;
  }

  public void setDisableLiveCommenting(Boolean disableLiveCommenting) {
    this.disableLiveCommenting = disableLiveCommenting;
  }


  public CustomConfigParameters disableNotificationBell(Boolean disableNotificationBell) {
    this.disableNotificationBell = disableNotificationBell;
    return this;
  }

   /**
   * Get disableNotificationBell
   * @return disableNotificationBell
  **/
  @javax.annotation.Nullable
  public Boolean getDisableNotificationBell() {
    return disableNotificationBell;
  }

  public void setDisableNotificationBell(Boolean disableNotificationBell) {
    this.disableNotificationBell = disableNotificationBell;
  }


  public CustomConfigParameters disableProfiles(Boolean disableProfiles) {
    this.disableProfiles = disableProfiles;
    return this;
  }

   /**
   * Get disableProfiles
   * @return disableProfiles
  **/
  @javax.annotation.Nullable
  public Boolean getDisableProfiles() {
    return disableProfiles;
  }

  public void setDisableProfiles(Boolean disableProfiles) {
    this.disableProfiles = disableProfiles;
  }


  public CustomConfigParameters disableSuccessMessage(Boolean disableSuccessMessage) {
    this.disableSuccessMessage = disableSuccessMessage;
    return this;
  }

   /**
   * Get disableSuccessMessage
   * @return disableSuccessMessage
  **/
  @javax.annotation.Nullable
  public Boolean getDisableSuccessMessage() {
    return disableSuccessMessage;
  }

  public void setDisableSuccessMessage(Boolean disableSuccessMessage) {
    this.disableSuccessMessage = disableSuccessMessage;
  }


  public CustomConfigParameters disableToolbar(Boolean disableToolbar) {
    this.disableToolbar = disableToolbar;
    return this;
  }

   /**
   * Get disableToolbar
   * @return disableToolbar
  **/
  @javax.annotation.Nullable
  public Boolean getDisableToolbar() {
    return disableToolbar;
  }

  public void setDisableToolbar(Boolean disableToolbar) {
    this.disableToolbar = disableToolbar;
  }


  public CustomConfigParameters disableUnverifiedLabel(Boolean disableUnverifiedLabel) {
    this.disableUnverifiedLabel = disableUnverifiedLabel;
    return this;
  }

   /**
   * Get disableUnverifiedLabel
   * @return disableUnverifiedLabel
  **/
  @javax.annotation.Nullable
  public Boolean getDisableUnverifiedLabel() {
    return disableUnverifiedLabel;
  }

  public void setDisableUnverifiedLabel(Boolean disableUnverifiedLabel) {
    this.disableUnverifiedLabel = disableUnverifiedLabel;
  }


  public CustomConfigParameters disableVoting(Boolean disableVoting) {
    this.disableVoting = disableVoting;
    return this;
  }

   /**
   * Get disableVoting
   * @return disableVoting
  **/
  @javax.annotation.Nullable
  public Boolean getDisableVoting() {
    return disableVoting;
  }

  public void setDisableVoting(Boolean disableVoting) {
    this.disableVoting = disableVoting;
  }


  public CustomConfigParameters enableCommenterLinks(Boolean enableCommenterLinks) {
    this.enableCommenterLinks = enableCommenterLinks;
    return this;
  }

   /**
   * Get enableCommenterLinks
   * @return enableCommenterLinks
  **/
  @javax.annotation.Nullable
  public Boolean getEnableCommenterLinks() {
    return enableCommenterLinks;
  }

  public void setEnableCommenterLinks(Boolean enableCommenterLinks) {
    this.enableCommenterLinks = enableCommenterLinks;
  }


  public CustomConfigParameters enableSearch(Boolean enableSearch) {
    this.enableSearch = enableSearch;
    return this;
  }

   /**
   * Get enableSearch
   * @return enableSearch
  **/
  @javax.annotation.Nullable
  public Boolean getEnableSearch() {
    return enableSearch;
  }

  public void setEnableSearch(Boolean enableSearch) {
    this.enableSearch = enableSearch;
  }


  public CustomConfigParameters enableSpoilers(Boolean enableSpoilers) {
    this.enableSpoilers = enableSpoilers;
    return this;
  }

   /**
   * Get enableSpoilers
   * @return enableSpoilers
  **/
  @javax.annotation.Nullable
  public Boolean getEnableSpoilers() {
    return enableSpoilers;
  }

  public void setEnableSpoilers(Boolean enableSpoilers) {
    this.enableSpoilers = enableSpoilers;
  }


  public CustomConfigParameters enableThirdPartyCookieBypass(Boolean enableThirdPartyCookieBypass) {
    this.enableThirdPartyCookieBypass = enableThirdPartyCookieBypass;
    return this;
  }

   /**
   * Get enableThirdPartyCookieBypass
   * @return enableThirdPartyCookieBypass
  **/
  @javax.annotation.Nullable
  public Boolean getEnableThirdPartyCookieBypass() {
    return enableThirdPartyCookieBypass;
  }

  public void setEnableThirdPartyCookieBypass(Boolean enableThirdPartyCookieBypass) {
    this.enableThirdPartyCookieBypass = enableThirdPartyCookieBypass;
  }


  public CustomConfigParameters enableViewCounts(Boolean enableViewCounts) {
    this.enableViewCounts = enableViewCounts;
    return this;
  }

   /**
   * Get enableViewCounts
   * @return enableViewCounts
  **/
  @javax.annotation.Nullable
  public Boolean getEnableViewCounts() {
    return enableViewCounts;
  }

  public void setEnableViewCounts(Boolean enableViewCounts) {
    this.enableViewCounts = enableViewCounts;
  }


  public CustomConfigParameters enableVoteList(Boolean enableVoteList) {
    this.enableVoteList = enableVoteList;
    return this;
  }

   /**
   * Get enableVoteList
   * @return enableVoteList
  **/
  @javax.annotation.Nullable
  public Boolean getEnableVoteList() {
    return enableVoteList;
  }

  public void setEnableVoteList(Boolean enableVoteList) {
    this.enableVoteList = enableVoteList;
  }


  public CustomConfigParameters enableWYSIWYG(Boolean enableWYSIWYG) {
    this.enableWYSIWYG = enableWYSIWYG;
    return this;
  }

   /**
   * Get enableWYSIWYG
   * @return enableWYSIWYG
  **/
  @javax.annotation.Nullable
  public Boolean getEnableWYSIWYG() {
    return enableWYSIWYG;
  }

  public void setEnableWYSIWYG(Boolean enableWYSIWYG) {
    this.enableWYSIWYG = enableWYSIWYG;
  }


  public CustomConfigParameters gifRating(GifRating gifRating) {
    this.gifRating = gifRating;
    return this;
  }

   /**
   * Get gifRating
   * @return gifRating
  **/
  @javax.annotation.Nullable
  public GifRating getGifRating() {
    return gifRating;
  }

  public void setGifRating(GifRating gifRating) {
    this.gifRating = gifRating;
  }


  public CustomConfigParameters hasDarkBackground(Boolean hasDarkBackground) {
    this.hasDarkBackground = hasDarkBackground;
    return this;
  }

   /**
   * Get hasDarkBackground
   * @return hasDarkBackground
  **/
  @javax.annotation.Nullable
  public Boolean getHasDarkBackground() {
    return hasDarkBackground;
  }

  public void setHasDarkBackground(Boolean hasDarkBackground) {
    this.hasDarkBackground = hasDarkBackground;
  }


  public CustomConfigParameters headerHTML(String headerHTML) {
    this.headerHTML = headerHTML;
    return this;
  }

   /**
   * Get headerHTML
   * @return headerHTML
  **/
  @javax.annotation.Nullable
  public String getHeaderHTML() {
    return headerHTML;
  }

  public void setHeaderHTML(String headerHTML) {
    this.headerHTML = headerHTML;
  }


  public CustomConfigParameters hideAvatars(Boolean hideAvatars) {
    this.hideAvatars = hideAvatars;
    return this;
  }

   /**
   * Get hideAvatars
   * @return hideAvatars
  **/
  @javax.annotation.Nullable
  public Boolean getHideAvatars() {
    return hideAvatars;
  }

  public void setHideAvatars(Boolean hideAvatars) {
    this.hideAvatars = hideAvatars;
  }


  public CustomConfigParameters hideCommentsUnderCountTextFormat(String hideCommentsUnderCountTextFormat) {
    this.hideCommentsUnderCountTextFormat = hideCommentsUnderCountTextFormat;
    return this;
  }

   /**
   * Get hideCommentsUnderCountTextFormat
   * @return hideCommentsUnderCountTextFormat
  **/
  @javax.annotation.Nullable
  public String getHideCommentsUnderCountTextFormat() {
    return hideCommentsUnderCountTextFormat;
  }

  public void setHideCommentsUnderCountTextFormat(String hideCommentsUnderCountTextFormat) {
    this.hideCommentsUnderCountTextFormat = hideCommentsUnderCountTextFormat;
  }


  public CustomConfigParameters inputAfterComments(Boolean inputAfterComments) {
    this.inputAfterComments = inputAfterComments;
    return this;
  }

   /**
   * Get inputAfterComments
   * @return inputAfterComments
  **/
  @javax.annotation.Nullable
  public Boolean getInputAfterComments() {
    return inputAfterComments;
  }

  public void setInputAfterComments(Boolean inputAfterComments) {
    this.inputAfterComments = inputAfterComments;
  }


  public CustomConfigParameters limitCommentsByGroups(Boolean limitCommentsByGroups) {
    this.limitCommentsByGroups = limitCommentsByGroups;
    return this;
  }

   /**
   * Get limitCommentsByGroups
   * @return limitCommentsByGroups
  **/
  @javax.annotation.Nullable
  public Boolean getLimitCommentsByGroups() {
    return limitCommentsByGroups;
  }

  public void setLimitCommentsByGroups(Boolean limitCommentsByGroups) {
    this.limitCommentsByGroups = limitCommentsByGroups;
  }


  public CustomConfigParameters locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @javax.annotation.Nullable
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }


  public CustomConfigParameters maxCommentCharacterLength(Double maxCommentCharacterLength) {
    this.maxCommentCharacterLength = maxCommentCharacterLength;
    return this;
  }

   /**
   * Get maxCommentCharacterLength
   * @return maxCommentCharacterLength
  **/
  @javax.annotation.Nullable
  public Double getMaxCommentCharacterLength() {
    return maxCommentCharacterLength;
  }

  public void setMaxCommentCharacterLength(Double maxCommentCharacterLength) {
    this.maxCommentCharacterLength = maxCommentCharacterLength;
  }


  public CustomConfigParameters maxCommentCreatedCountPUPM(Double maxCommentCreatedCountPUPM) {
    this.maxCommentCreatedCountPUPM = maxCommentCreatedCountPUPM;
    return this;
  }

   /**
   * Get maxCommentCreatedCountPUPM
   * @return maxCommentCreatedCountPUPM
  **/
  @javax.annotation.Nullable
  public Double getMaxCommentCreatedCountPUPM() {
    return maxCommentCreatedCountPUPM;
  }

  public void setMaxCommentCreatedCountPUPM(Double maxCommentCreatedCountPUPM) {
    this.maxCommentCreatedCountPUPM = maxCommentCreatedCountPUPM;
  }


  public CustomConfigParameters noCustomConfig(Boolean noCustomConfig) {
    this.noCustomConfig = noCustomConfig;
    return this;
  }

   /**
   * Get noCustomConfig
   * @return noCustomConfig
  **/
  @javax.annotation.Nullable
  public Boolean getNoCustomConfig() {
    return noCustomConfig;
  }

  public void setNoCustomConfig(Boolean noCustomConfig) {
    this.noCustomConfig = noCustomConfig;
  }


  public CustomConfigParameters noImageUploads(Boolean noImageUploads) {
    this.noImageUploads = noImageUploads;
    return this;
  }

   /**
   * Get noImageUploads
   * @return noImageUploads
  **/
  @javax.annotation.Nullable
  public Boolean getNoImageUploads() {
    return noImageUploads;
  }

  public void setNoImageUploads(Boolean noImageUploads) {
    this.noImageUploads = noImageUploads;
  }


  public CustomConfigParameters noStyles(Boolean noStyles) {
    this.noStyles = noStyles;
    return this;
  }

   /**
   * Get noStyles
   * @return noStyles
  **/
  @javax.annotation.Nullable
  public Boolean getNoStyles() {
    return noStyles;
  }

  public void setNoStyles(Boolean noStyles) {
    this.noStyles = noStyles;
  }


  public CustomConfigParameters pageSize(Double pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @javax.annotation.Nullable
  public Double getPageSize() {
    return pageSize;
  }

  public void setPageSize(Double pageSize) {
    this.pageSize = pageSize;
  }


  public CustomConfigParameters readonly(Boolean readonly) {
    this.readonly = readonly;
    return this;
  }

   /**
   * Get readonly
   * @return readonly
  **/
  @javax.annotation.Nullable
  public Boolean getReadonly() {
    return readonly;
  }

  public void setReadonly(Boolean readonly) {
    this.readonly = readonly;
  }


  public CustomConfigParameters requireSSO(Boolean requireSSO) {
    this.requireSSO = requireSSO;
    return this;
  }

   /**
   * Get requireSSO
   * @return requireSSO
  **/
  @javax.annotation.Nullable
  public Boolean getRequireSSO() {
    return requireSSO;
  }

  public void setRequireSSO(Boolean requireSSO) {
    this.requireSSO = requireSSO;
  }


  public CustomConfigParameters restrictedLinkDomains(List<String> restrictedLinkDomains) {
    this.restrictedLinkDomains = restrictedLinkDomains;
    return this;
  }

  public CustomConfigParameters addRestrictedLinkDomainsItem(String restrictedLinkDomainsItem) {
    if (this.restrictedLinkDomains == null) {
      this.restrictedLinkDomains = new ArrayList<>();
    }
    this.restrictedLinkDomains.add(restrictedLinkDomainsItem);
    return this;
  }

   /**
   * Get restrictedLinkDomains
   * @return restrictedLinkDomains
  **/
  @javax.annotation.Nullable
  public List<String> getRestrictedLinkDomains() {
    return restrictedLinkDomains;
  }

  public void setRestrictedLinkDomains(List<String> restrictedLinkDomains) {
    this.restrictedLinkDomains = restrictedLinkDomains;
  }


  public CustomConfigParameters showCommentSaveSuccess(Boolean showCommentSaveSuccess) {
    this.showCommentSaveSuccess = showCommentSaveSuccess;
    return this;
  }

   /**
   * Get showCommentSaveSuccess
   * @return showCommentSaveSuccess
  **/
  @javax.annotation.Nullable
  public Boolean getShowCommentSaveSuccess() {
    return showCommentSaveSuccess;
  }

  public void setShowCommentSaveSuccess(Boolean showCommentSaveSuccess) {
    this.showCommentSaveSuccess = showCommentSaveSuccess;
  }


  public CustomConfigParameters showLiveRightAway(Boolean showLiveRightAway) {
    this.showLiveRightAway = showLiveRightAway;
    return this;
  }

   /**
   * Get showLiveRightAway
   * @return showLiveRightAway
  **/
  @javax.annotation.Nullable
  public Boolean getShowLiveRightAway() {
    return showLiveRightAway;
  }

  public void setShowLiveRightAway(Boolean showLiveRightAway) {
    this.showLiveRightAway = showLiveRightAway;
  }


  public CustomConfigParameters showQuestion(Boolean showQuestion) {
    this.showQuestion = showQuestion;
    return this;
  }

   /**
   * Get showQuestion
   * @return showQuestion
  **/
  @javax.annotation.Nullable
  public Boolean getShowQuestion() {
    return showQuestion;
  }

  public void setShowQuestion(Boolean showQuestion) {
    this.showQuestion = showQuestion;
  }


  public CustomConfigParameters spamRules(List<SpamRule> spamRules) {
    this.spamRules = spamRules;
    return this;
  }

  public CustomConfigParameters addSpamRulesItem(SpamRule spamRulesItem) {
    if (this.spamRules == null) {
      this.spamRules = new ArrayList<>();
    }
    this.spamRules.add(spamRulesItem);
    return this;
  }

   /**
   * Get spamRules
   * @return spamRules
  **/
  @javax.annotation.Nullable
  public List<SpamRule> getSpamRules() {
    return spamRules;
  }

  public void setSpamRules(List<SpamRule> spamRules) {
    this.spamRules = spamRules;
  }


  public CustomConfigParameters translations(Map<String, String> translations) {
    this.translations = translations;
    return this;
  }

  public CustomConfigParameters putTranslationsItem(String key, String translationsItem) {
    if (this.translations == null) {
      this.translations = new HashMap<>();
    }
    this.translations.put(key, translationsItem);
    return this;
  }

   /**
   * Construct a type with a set of properties K of type T
   * @return translations
  **/
  @javax.annotation.Nullable
  public Map<String, String> getTranslations() {
    return translations;
  }

  public void setTranslations(Map<String, String> translations) {
    this.translations = translations;
  }


  public CustomConfigParameters useShowCommentsToggle(Boolean useShowCommentsToggle) {
    this.useShowCommentsToggle = useShowCommentsToggle;
    return this;
  }

   /**
   * Get useShowCommentsToggle
   * @return useShowCommentsToggle
  **/
  @javax.annotation.Nullable
  public Boolean getUseShowCommentsToggle() {
    return useShowCommentsToggle;
  }

  public void setUseShowCommentsToggle(Boolean useShowCommentsToggle) {
    this.useShowCommentsToggle = useShowCommentsToggle;
  }


  public CustomConfigParameters useSingleLineCommentInput(Boolean useSingleLineCommentInput) {
    this.useSingleLineCommentInput = useSingleLineCommentInput;
    return this;
  }

   /**
   * Get useSingleLineCommentInput
   * @return useSingleLineCommentInput
  **/
  @javax.annotation.Nullable
  public Boolean getUseSingleLineCommentInput() {
    return useSingleLineCommentInput;
  }

  public void setUseSingleLineCommentInput(Boolean useSingleLineCommentInput) {
    this.useSingleLineCommentInput = useSingleLineCommentInput;
  }


  public CustomConfigParameters voteStyle(VoteStyle voteStyle) {
    this.voteStyle = voteStyle;
    return this;
  }

   /**
   * Get voteStyle
   * @return voteStyle
  **/
  @javax.annotation.Nullable
  public VoteStyle getVoteStyle() {
    return voteStyle;
  }

  public void setVoteStyle(VoteStyle voteStyle) {
    this.voteStyle = voteStyle;
  }


  public CustomConfigParameters widgetQuestionId(String widgetQuestionId) {
    this.widgetQuestionId = widgetQuestionId;
    return this;
  }

   /**
   * Get widgetQuestionId
   * @return widgetQuestionId
  **/
  @javax.annotation.Nullable
  public String getWidgetQuestionId() {
    return widgetQuestionId;
  }

  public void setWidgetQuestionId(String widgetQuestionId) {
    this.widgetQuestionId = widgetQuestionId;
  }


  public CustomConfigParameters widgetQuestionResultsStyle(CommentQuestionResultsRenderingType widgetQuestionResultsStyle) {
    this.widgetQuestionResultsStyle = widgetQuestionResultsStyle;
    return this;
  }

   /**
   * Get widgetQuestionResultsStyle
   * @return widgetQuestionResultsStyle
  **/
  @javax.annotation.Nullable
  public CommentQuestionResultsRenderingType getWidgetQuestionResultsStyle() {
    return widgetQuestionResultsStyle;
  }

  public void setWidgetQuestionResultsStyle(CommentQuestionResultsRenderingType widgetQuestionResultsStyle) {
    this.widgetQuestionResultsStyle = widgetQuestionResultsStyle;
  }


  public CustomConfigParameters widgetQuestionStyle(QuestionRenderingType widgetQuestionStyle) {
    this.widgetQuestionStyle = widgetQuestionStyle;
    return this;
  }

   /**
   * Get widgetQuestionStyle
   * @return widgetQuestionStyle
  **/
  @javax.annotation.Nullable
  public QuestionRenderingType getWidgetQuestionStyle() {
    return widgetQuestionStyle;
  }

  public void setWidgetQuestionStyle(QuestionRenderingType widgetQuestionStyle) {
    this.widgetQuestionStyle = widgetQuestionStyle;
  }


  public CustomConfigParameters widgetQuestionWhenToSave(QuestionWhenSave widgetQuestionWhenToSave) {
    this.widgetQuestionWhenToSave = widgetQuestionWhenToSave;
    return this;
  }

   /**
   * Get widgetQuestionWhenToSave
   * @return widgetQuestionWhenToSave
  **/
  @javax.annotation.Nullable
  public QuestionWhenSave getWidgetQuestionWhenToSave() {
    return widgetQuestionWhenToSave;
  }

  public void setWidgetQuestionWhenToSave(QuestionWhenSave widgetQuestionWhenToSave) {
    this.widgetQuestionWhenToSave = widgetQuestionWhenToSave;
  }


  public CustomConfigParameters widgetQuestionsRequired(CommentQuestionsRequired widgetQuestionsRequired) {
    this.widgetQuestionsRequired = widgetQuestionsRequired;
    return this;
  }

   /**
   * Get widgetQuestionsRequired
   * @return widgetQuestionsRequired
  **/
  @javax.annotation.Nullable
  public CommentQuestionsRequired getWidgetQuestionsRequired() {
    return widgetQuestionsRequired;
  }

  public void setWidgetQuestionsRequired(CommentQuestionsRequired widgetQuestionsRequired) {
    this.widgetQuestionsRequired = widgetQuestionsRequired;
  }


  public CustomConfigParameters widgetSubQuestionVisibility(QuestionSubQuestionVisibility widgetSubQuestionVisibility) {
    this.widgetSubQuestionVisibility = widgetSubQuestionVisibility;
    return this;
  }

   /**
   * Get widgetSubQuestionVisibility
   * @return widgetSubQuestionVisibility
  **/
  @javax.annotation.Nullable
  public QuestionSubQuestionVisibility getWidgetSubQuestionVisibility() {
    return widgetSubQuestionVisibility;
  }

  public void setWidgetSubQuestionVisibility(QuestionSubQuestionVisibility widgetSubQuestionVisibility) {
    this.widgetSubQuestionVisibility = widgetSubQuestionVisibility;
  }


  public CustomConfigParameters wrap(Boolean wrap) {
    this.wrap = wrap;
    return this;
  }

   /**
   * Get wrap
   * @return wrap
  **/
  @javax.annotation.Nullable
  public Boolean getWrap() {
    return wrap;
  }

  public void setWrap(Boolean wrap) {
    this.wrap = wrap;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomConfigParameters customConfigParameters = (CustomConfigParameters) o;
    return Objects.equals(this.absoluteAndRelativeDates, customConfigParameters.absoluteAndRelativeDates) &&
        Objects.equals(this.absoluteDates, customConfigParameters.absoluteDates) &&
        Objects.equals(this.allowAnon, customConfigParameters.allowAnon) &&
        Objects.equals(this.allowAnonFlag, customConfigParameters.allowAnonFlag) &&
        Objects.equals(this.allowAnonVotes, customConfigParameters.allowAnonVotes) &&
        Objects.equals(this.allowedLanguages, customConfigParameters.allowedLanguages) &&
        Objects.equals(this.collapseReplies, customConfigParameters.collapseReplies) &&
        Objects.equals(this.commentCountFormat, customConfigParameters.commentCountFormat) &&
        Objects.equals(this.commentHTMLRenderingMode, customConfigParameters.commentHTMLRenderingMode) &&
        Objects.equals(this.commentThreadDeleteMode, customConfigParameters.commentThreadDeleteMode) &&
        Objects.equals(this.commenterNameFormat, customConfigParameters.commenterNameFormat) &&
        Objects.equals(this.countAboveToggle, customConfigParameters.countAboveToggle) &&
        Objects.equals(this.customCSS, customConfigParameters.customCSS) &&
        Objects.equals(this.defaultAvatarSrc, customConfigParameters.defaultAvatarSrc) &&
        Objects.equals(this.defaultSortDirection, customConfigParameters.defaultSortDirection) &&
        Objects.equals(this.defaultUsername, customConfigParameters.defaultUsername) &&
        Objects.equals(this.disableAutoAdminMigration, customConfigParameters.disableAutoAdminMigration) &&
        Objects.equals(this.disableAutoHashTagCreation, customConfigParameters.disableAutoHashTagCreation) &&
        Objects.equals(this.disableBlocking, customConfigParameters.disableBlocking) &&
        Objects.equals(this.disableCommenterCommentDelete, customConfigParameters.disableCommenterCommentDelete) &&
        Objects.equals(this.disableCommenterCommentEdit, customConfigParameters.disableCommenterCommentEdit) &&
        Objects.equals(this.disableEmailInputs, customConfigParameters.disableEmailInputs) &&
        Objects.equals(this.disableLiveCommenting, customConfigParameters.disableLiveCommenting) &&
        Objects.equals(this.disableNotificationBell, customConfigParameters.disableNotificationBell) &&
        Objects.equals(this.disableProfiles, customConfigParameters.disableProfiles) &&
        Objects.equals(this.disableSuccessMessage, customConfigParameters.disableSuccessMessage) &&
        Objects.equals(this.disableToolbar, customConfigParameters.disableToolbar) &&
        Objects.equals(this.disableUnverifiedLabel, customConfigParameters.disableUnverifiedLabel) &&
        Objects.equals(this.disableVoting, customConfigParameters.disableVoting) &&
        Objects.equals(this.enableCommenterLinks, customConfigParameters.enableCommenterLinks) &&
        Objects.equals(this.enableSearch, customConfigParameters.enableSearch) &&
        Objects.equals(this.enableSpoilers, customConfigParameters.enableSpoilers) &&
        Objects.equals(this.enableThirdPartyCookieBypass, customConfigParameters.enableThirdPartyCookieBypass) &&
        Objects.equals(this.enableViewCounts, customConfigParameters.enableViewCounts) &&
        Objects.equals(this.enableVoteList, customConfigParameters.enableVoteList) &&
        Objects.equals(this.enableWYSIWYG, customConfigParameters.enableWYSIWYG) &&
        Objects.equals(this.gifRating, customConfigParameters.gifRating) &&
        Objects.equals(this.hasDarkBackground, customConfigParameters.hasDarkBackground) &&
        Objects.equals(this.headerHTML, customConfigParameters.headerHTML) &&
        Objects.equals(this.hideAvatars, customConfigParameters.hideAvatars) &&
        Objects.equals(this.hideCommentsUnderCountTextFormat, customConfigParameters.hideCommentsUnderCountTextFormat) &&
        Objects.equals(this.inputAfterComments, customConfigParameters.inputAfterComments) &&
        Objects.equals(this.limitCommentsByGroups, customConfigParameters.limitCommentsByGroups) &&
        Objects.equals(this.locale, customConfigParameters.locale) &&
        Objects.equals(this.maxCommentCharacterLength, customConfigParameters.maxCommentCharacterLength) &&
        Objects.equals(this.maxCommentCreatedCountPUPM, customConfigParameters.maxCommentCreatedCountPUPM) &&
        Objects.equals(this.noCustomConfig, customConfigParameters.noCustomConfig) &&
        Objects.equals(this.noImageUploads, customConfigParameters.noImageUploads) &&
        Objects.equals(this.noStyles, customConfigParameters.noStyles) &&
        Objects.equals(this.pageSize, customConfigParameters.pageSize) &&
        Objects.equals(this.readonly, customConfigParameters.readonly) &&
        Objects.equals(this.requireSSO, customConfigParameters.requireSSO) &&
        Objects.equals(this.restrictedLinkDomains, customConfigParameters.restrictedLinkDomains) &&
        Objects.equals(this.showCommentSaveSuccess, customConfigParameters.showCommentSaveSuccess) &&
        Objects.equals(this.showLiveRightAway, customConfigParameters.showLiveRightAway) &&
        Objects.equals(this.showQuestion, customConfigParameters.showQuestion) &&
        Objects.equals(this.spamRules, customConfigParameters.spamRules) &&
        Objects.equals(this.translations, customConfigParameters.translations) &&
        Objects.equals(this.useShowCommentsToggle, customConfigParameters.useShowCommentsToggle) &&
        Objects.equals(this.useSingleLineCommentInput, customConfigParameters.useSingleLineCommentInput) &&
        Objects.equals(this.voteStyle, customConfigParameters.voteStyle) &&
        Objects.equals(this.widgetQuestionId, customConfigParameters.widgetQuestionId) &&
        Objects.equals(this.widgetQuestionResultsStyle, customConfigParameters.widgetQuestionResultsStyle) &&
        Objects.equals(this.widgetQuestionStyle, customConfigParameters.widgetQuestionStyle) &&
        Objects.equals(this.widgetQuestionWhenToSave, customConfigParameters.widgetQuestionWhenToSave) &&
        Objects.equals(this.widgetQuestionsRequired, customConfigParameters.widgetQuestionsRequired) &&
        Objects.equals(this.widgetSubQuestionVisibility, customConfigParameters.widgetSubQuestionVisibility) &&
        Objects.equals(this.wrap, customConfigParameters.wrap);
  }

  @Override
  public int hashCode() {
    return Objects.hash(absoluteAndRelativeDates, absoluteDates, allowAnon, allowAnonFlag, allowAnonVotes, allowedLanguages, collapseReplies, commentCountFormat, commentHTMLRenderingMode, commentThreadDeleteMode, commenterNameFormat, countAboveToggle, customCSS, defaultAvatarSrc, defaultSortDirection, defaultUsername, disableAutoAdminMigration, disableAutoHashTagCreation, disableBlocking, disableCommenterCommentDelete, disableCommenterCommentEdit, disableEmailInputs, disableLiveCommenting, disableNotificationBell, disableProfiles, disableSuccessMessage, disableToolbar, disableUnverifiedLabel, disableVoting, enableCommenterLinks, enableSearch, enableSpoilers, enableThirdPartyCookieBypass, enableViewCounts, enableVoteList, enableWYSIWYG, gifRating, hasDarkBackground, headerHTML, hideAvatars, hideCommentsUnderCountTextFormat, inputAfterComments, limitCommentsByGroups, locale, maxCommentCharacterLength, maxCommentCreatedCountPUPM, noCustomConfig, noImageUploads, noStyles, pageSize, readonly, requireSSO, restrictedLinkDomains, showCommentSaveSuccess, showLiveRightAway, showQuestion, spamRules, translations, useShowCommentsToggle, useSingleLineCommentInput, voteStyle, widgetQuestionId, widgetQuestionResultsStyle, widgetQuestionStyle, widgetQuestionWhenToSave, widgetQuestionsRequired, widgetSubQuestionVisibility, wrap);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomConfigParameters {\n");
    sb.append("    absoluteAndRelativeDates: ").append(toIndentedString(absoluteAndRelativeDates)).append("\n");
    sb.append("    absoluteDates: ").append(toIndentedString(absoluteDates)).append("\n");
    sb.append("    allowAnon: ").append(toIndentedString(allowAnon)).append("\n");
    sb.append("    allowAnonFlag: ").append(toIndentedString(allowAnonFlag)).append("\n");
    sb.append("    allowAnonVotes: ").append(toIndentedString(allowAnonVotes)).append("\n");
    sb.append("    allowedLanguages: ").append(toIndentedString(allowedLanguages)).append("\n");
    sb.append("    collapseReplies: ").append(toIndentedString(collapseReplies)).append("\n");
    sb.append("    commentCountFormat: ").append(toIndentedString(commentCountFormat)).append("\n");
    sb.append("    commentHTMLRenderingMode: ").append(toIndentedString(commentHTMLRenderingMode)).append("\n");
    sb.append("    commentThreadDeleteMode: ").append(toIndentedString(commentThreadDeleteMode)).append("\n");
    sb.append("    commenterNameFormat: ").append(toIndentedString(commenterNameFormat)).append("\n");
    sb.append("    countAboveToggle: ").append(toIndentedString(countAboveToggle)).append("\n");
    sb.append("    customCSS: ").append(toIndentedString(customCSS)).append("\n");
    sb.append("    defaultAvatarSrc: ").append(toIndentedString(defaultAvatarSrc)).append("\n");
    sb.append("    defaultSortDirection: ").append(toIndentedString(defaultSortDirection)).append("\n");
    sb.append("    defaultUsername: ").append(toIndentedString(defaultUsername)).append("\n");
    sb.append("    disableAutoAdminMigration: ").append(toIndentedString(disableAutoAdminMigration)).append("\n");
    sb.append("    disableAutoHashTagCreation: ").append(toIndentedString(disableAutoHashTagCreation)).append("\n");
    sb.append("    disableBlocking: ").append(toIndentedString(disableBlocking)).append("\n");
    sb.append("    disableCommenterCommentDelete: ").append(toIndentedString(disableCommenterCommentDelete)).append("\n");
    sb.append("    disableCommenterCommentEdit: ").append(toIndentedString(disableCommenterCommentEdit)).append("\n");
    sb.append("    disableEmailInputs: ").append(toIndentedString(disableEmailInputs)).append("\n");
    sb.append("    disableLiveCommenting: ").append(toIndentedString(disableLiveCommenting)).append("\n");
    sb.append("    disableNotificationBell: ").append(toIndentedString(disableNotificationBell)).append("\n");
    sb.append("    disableProfiles: ").append(toIndentedString(disableProfiles)).append("\n");
    sb.append("    disableSuccessMessage: ").append(toIndentedString(disableSuccessMessage)).append("\n");
    sb.append("    disableToolbar: ").append(toIndentedString(disableToolbar)).append("\n");
    sb.append("    disableUnverifiedLabel: ").append(toIndentedString(disableUnverifiedLabel)).append("\n");
    sb.append("    disableVoting: ").append(toIndentedString(disableVoting)).append("\n");
    sb.append("    enableCommenterLinks: ").append(toIndentedString(enableCommenterLinks)).append("\n");
    sb.append("    enableSearch: ").append(toIndentedString(enableSearch)).append("\n");
    sb.append("    enableSpoilers: ").append(toIndentedString(enableSpoilers)).append("\n");
    sb.append("    enableThirdPartyCookieBypass: ").append(toIndentedString(enableThirdPartyCookieBypass)).append("\n");
    sb.append("    enableViewCounts: ").append(toIndentedString(enableViewCounts)).append("\n");
    sb.append("    enableVoteList: ").append(toIndentedString(enableVoteList)).append("\n");
    sb.append("    enableWYSIWYG: ").append(toIndentedString(enableWYSIWYG)).append("\n");
    sb.append("    gifRating: ").append(toIndentedString(gifRating)).append("\n");
    sb.append("    hasDarkBackground: ").append(toIndentedString(hasDarkBackground)).append("\n");
    sb.append("    headerHTML: ").append(toIndentedString(headerHTML)).append("\n");
    sb.append("    hideAvatars: ").append(toIndentedString(hideAvatars)).append("\n");
    sb.append("    hideCommentsUnderCountTextFormat: ").append(toIndentedString(hideCommentsUnderCountTextFormat)).append("\n");
    sb.append("    inputAfterComments: ").append(toIndentedString(inputAfterComments)).append("\n");
    sb.append("    limitCommentsByGroups: ").append(toIndentedString(limitCommentsByGroups)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    maxCommentCharacterLength: ").append(toIndentedString(maxCommentCharacterLength)).append("\n");
    sb.append("    maxCommentCreatedCountPUPM: ").append(toIndentedString(maxCommentCreatedCountPUPM)).append("\n");
    sb.append("    noCustomConfig: ").append(toIndentedString(noCustomConfig)).append("\n");
    sb.append("    noImageUploads: ").append(toIndentedString(noImageUploads)).append("\n");
    sb.append("    noStyles: ").append(toIndentedString(noStyles)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    readonly: ").append(toIndentedString(readonly)).append("\n");
    sb.append("    requireSSO: ").append(toIndentedString(requireSSO)).append("\n");
    sb.append("    restrictedLinkDomains: ").append(toIndentedString(restrictedLinkDomains)).append("\n");
    sb.append("    showCommentSaveSuccess: ").append(toIndentedString(showCommentSaveSuccess)).append("\n");
    sb.append("    showLiveRightAway: ").append(toIndentedString(showLiveRightAway)).append("\n");
    sb.append("    showQuestion: ").append(toIndentedString(showQuestion)).append("\n");
    sb.append("    spamRules: ").append(toIndentedString(spamRules)).append("\n");
    sb.append("    translations: ").append(toIndentedString(translations)).append("\n");
    sb.append("    useShowCommentsToggle: ").append(toIndentedString(useShowCommentsToggle)).append("\n");
    sb.append("    useSingleLineCommentInput: ").append(toIndentedString(useSingleLineCommentInput)).append("\n");
    sb.append("    voteStyle: ").append(toIndentedString(voteStyle)).append("\n");
    sb.append("    widgetQuestionId: ").append(toIndentedString(widgetQuestionId)).append("\n");
    sb.append("    widgetQuestionResultsStyle: ").append(toIndentedString(widgetQuestionResultsStyle)).append("\n");
    sb.append("    widgetQuestionStyle: ").append(toIndentedString(widgetQuestionStyle)).append("\n");
    sb.append("    widgetQuestionWhenToSave: ").append(toIndentedString(widgetQuestionWhenToSave)).append("\n");
    sb.append("    widgetQuestionsRequired: ").append(toIndentedString(widgetQuestionsRequired)).append("\n");
    sb.append("    widgetSubQuestionVisibility: ").append(toIndentedString(widgetSubQuestionVisibility)).append("\n");
    sb.append("    wrap: ").append(toIndentedString(wrap)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("absoluteAndRelativeDates");
    openapiFields.add("absoluteDates");
    openapiFields.add("allowAnon");
    openapiFields.add("allowAnonFlag");
    openapiFields.add("allowAnonVotes");
    openapiFields.add("allowedLanguages");
    openapiFields.add("collapseReplies");
    openapiFields.add("commentCountFormat");
    openapiFields.add("commentHTMLRenderingMode");
    openapiFields.add("commentThreadDeleteMode");
    openapiFields.add("commenterNameFormat");
    openapiFields.add("countAboveToggle");
    openapiFields.add("customCSS");
    openapiFields.add("defaultAvatarSrc");
    openapiFields.add("defaultSortDirection");
    openapiFields.add("defaultUsername");
    openapiFields.add("disableAutoAdminMigration");
    openapiFields.add("disableAutoHashTagCreation");
    openapiFields.add("disableBlocking");
    openapiFields.add("disableCommenterCommentDelete");
    openapiFields.add("disableCommenterCommentEdit");
    openapiFields.add("disableEmailInputs");
    openapiFields.add("disableLiveCommenting");
    openapiFields.add("disableNotificationBell");
    openapiFields.add("disableProfiles");
    openapiFields.add("disableSuccessMessage");
    openapiFields.add("disableToolbar");
    openapiFields.add("disableUnverifiedLabel");
    openapiFields.add("disableVoting");
    openapiFields.add("enableCommenterLinks");
    openapiFields.add("enableSearch");
    openapiFields.add("enableSpoilers");
    openapiFields.add("enableThirdPartyCookieBypass");
    openapiFields.add("enableViewCounts");
    openapiFields.add("enableVoteList");
    openapiFields.add("enableWYSIWYG");
    openapiFields.add("gifRating");
    openapiFields.add("hasDarkBackground");
    openapiFields.add("headerHTML");
    openapiFields.add("hideAvatars");
    openapiFields.add("hideCommentsUnderCountTextFormat");
    openapiFields.add("inputAfterComments");
    openapiFields.add("limitCommentsByGroups");
    openapiFields.add("locale");
    openapiFields.add("maxCommentCharacterLength");
    openapiFields.add("maxCommentCreatedCountPUPM");
    openapiFields.add("noCustomConfig");
    openapiFields.add("noImageUploads");
    openapiFields.add("noStyles");
    openapiFields.add("pageSize");
    openapiFields.add("readonly");
    openapiFields.add("requireSSO");
    openapiFields.add("restrictedLinkDomains");
    openapiFields.add("showCommentSaveSuccess");
    openapiFields.add("showLiveRightAway");
    openapiFields.add("showQuestion");
    openapiFields.add("spamRules");
    openapiFields.add("translations");
    openapiFields.add("useShowCommentsToggle");
    openapiFields.add("useSingleLineCommentInput");
    openapiFields.add("voteStyle");
    openapiFields.add("widgetQuestionId");
    openapiFields.add("widgetQuestionResultsStyle");
    openapiFields.add("widgetQuestionStyle");
    openapiFields.add("widgetQuestionWhenToSave");
    openapiFields.add("widgetQuestionsRequired");
    openapiFields.add("widgetSubQuestionVisibility");
    openapiFields.add("wrap");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CustomConfigParameters
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomConfigParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomConfigParameters is not found in the empty JSON string", CustomConfigParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomConfigParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomConfigParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowedLanguages") != null && !jsonObj.get("allowedLanguages").isJsonNull() && !jsonObj.get("allowedLanguages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowedLanguages` to be an array in the JSON string but got `%s`", jsonObj.get("allowedLanguages").toString()));
      }
      if ((jsonObj.get("commentCountFormat") != null && !jsonObj.get("commentCountFormat").isJsonNull()) && !jsonObj.get("commentCountFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commentCountFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commentCountFormat").toString()));
      }
      // validate the optional field `commentHTMLRenderingMode`
      if (jsonObj.get("commentHTMLRenderingMode") != null && !jsonObj.get("commentHTMLRenderingMode").isJsonNull()) {
        CommentHTMLRenderingMode.validateJsonElement(jsonObj.get("commentHTMLRenderingMode"));
      }
      // validate the optional field `commentThreadDeleteMode`
      if (jsonObj.get("commentThreadDeleteMode") != null && !jsonObj.get("commentThreadDeleteMode").isJsonNull()) {
        CommentThreadDeletionMode.validateJsonElement(jsonObj.get("commentThreadDeleteMode"));
      }
      // validate the optional field `commenterNameFormat`
      if (jsonObj.get("commenterNameFormat") != null && !jsonObj.get("commenterNameFormat").isJsonNull()) {
        CommenterNameFormats.validateJsonElement(jsonObj.get("commenterNameFormat"));
      }
      if ((jsonObj.get("customCSS") != null && !jsonObj.get("customCSS").isJsonNull()) && !jsonObj.get("customCSS").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customCSS` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customCSS").toString()));
      }
      if ((jsonObj.get("defaultAvatarSrc") != null && !jsonObj.get("defaultAvatarSrc").isJsonNull()) && !jsonObj.get("defaultAvatarSrc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultAvatarSrc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultAvatarSrc").toString()));
      }
      // validate the optional field `defaultSortDirection`
      if (jsonObj.get("defaultSortDirection") != null && !jsonObj.get("defaultSortDirection").isJsonNull()) {
        SortDirections.validateJsonElement(jsonObj.get("defaultSortDirection"));
      }
      if ((jsonObj.get("defaultUsername") != null && !jsonObj.get("defaultUsername").isJsonNull()) && !jsonObj.get("defaultUsername").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultUsername` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultUsername").toString()));
      }
      // validate the optional field `gifRating`
      if (jsonObj.get("gifRating") != null && !jsonObj.get("gifRating").isJsonNull()) {
        GifRating.validateJsonElement(jsonObj.get("gifRating"));
      }
      if ((jsonObj.get("headerHTML") != null && !jsonObj.get("headerHTML").isJsonNull()) && !jsonObj.get("headerHTML").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `headerHTML` to be a primitive type in the JSON string but got `%s`", jsonObj.get("headerHTML").toString()));
      }
      if ((jsonObj.get("hideCommentsUnderCountTextFormat") != null && !jsonObj.get("hideCommentsUnderCountTextFormat").isJsonNull()) && !jsonObj.get("hideCommentsUnderCountTextFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hideCommentsUnderCountTextFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hideCommentsUnderCountTextFormat").toString()));
      }
      if ((jsonObj.get("locale") != null && !jsonObj.get("locale").isJsonNull()) && !jsonObj.get("locale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locale").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("restrictedLinkDomains") != null && !jsonObj.get("restrictedLinkDomains").isJsonNull() && !jsonObj.get("restrictedLinkDomains").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `restrictedLinkDomains` to be an array in the JSON string but got `%s`", jsonObj.get("restrictedLinkDomains").toString()));
      }
      if (jsonObj.get("spamRules") != null && !jsonObj.get("spamRules").isJsonNull()) {
        JsonArray jsonArrayspamRules = jsonObj.getAsJsonArray("spamRules");
        if (jsonArrayspamRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("spamRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `spamRules` to be an array in the JSON string but got `%s`", jsonObj.get("spamRules").toString()));
          }

          // validate the optional field `spamRules` (array)
          for (int i = 0; i < jsonArrayspamRules.size(); i++) {
            SpamRule.validateJsonElement(jsonArrayspamRules.get(i));
          };
        }
      }
      // validate the optional field `voteStyle`
      if (jsonObj.get("voteStyle") != null && !jsonObj.get("voteStyle").isJsonNull()) {
        VoteStyle.validateJsonElement(jsonObj.get("voteStyle"));
      }
      if ((jsonObj.get("widgetQuestionId") != null && !jsonObj.get("widgetQuestionId").isJsonNull()) && !jsonObj.get("widgetQuestionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `widgetQuestionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("widgetQuestionId").toString()));
      }
      // validate the optional field `widgetQuestionResultsStyle`
      if (jsonObj.get("widgetQuestionResultsStyle") != null && !jsonObj.get("widgetQuestionResultsStyle").isJsonNull()) {
        CommentQuestionResultsRenderingType.validateJsonElement(jsonObj.get("widgetQuestionResultsStyle"));
      }
      // validate the optional field `widgetQuestionStyle`
      if (jsonObj.get("widgetQuestionStyle") != null && !jsonObj.get("widgetQuestionStyle").isJsonNull()) {
        QuestionRenderingType.validateJsonElement(jsonObj.get("widgetQuestionStyle"));
      }
      // validate the optional field `widgetQuestionWhenToSave`
      if (jsonObj.get("widgetQuestionWhenToSave") != null && !jsonObj.get("widgetQuestionWhenToSave").isJsonNull()) {
        QuestionWhenSave.validateJsonElement(jsonObj.get("widgetQuestionWhenToSave"));
      }
      // validate the optional field `widgetQuestionsRequired`
      if (jsonObj.get("widgetQuestionsRequired") != null && !jsonObj.get("widgetQuestionsRequired").isJsonNull()) {
        CommentQuestionsRequired.validateJsonElement(jsonObj.get("widgetQuestionsRequired"));
      }
      // validate the optional field `widgetSubQuestionVisibility`
      if (jsonObj.get("widgetSubQuestionVisibility") != null && !jsonObj.get("widgetSubQuestionVisibility").isJsonNull()) {
        QuestionSubQuestionVisibility.validateJsonElement(jsonObj.get("widgetSubQuestionVisibility"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomConfigParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomConfigParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomConfigParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomConfigParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomConfigParameters>() {
           @Override
           public void write(JsonWriter out, CustomConfigParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomConfigParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomConfigParameters given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomConfigParameters
  * @throws IOException if the JSON string is invalid with respect to CustomConfigParameters
  */
  public static CustomConfigParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomConfigParameters.class);
  }

 /**
  * Convert an instance of CustomConfigParameters to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


/*
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fastcomments.model;

import java.util.Objects;
import com.fastcomments.model.CommentUserBadgeInfo;
import com.fastcomments.model.CommentUserHashTagInfo;
import com.fastcomments.model.CommentUserMentionInfo;
import com.fastcomments.model.PickFCommentExcludeKeyofFCommentLogsOrTenantIdOrCommentOrHasLinksOrUrlIdOrApprovedMeta;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.fastcomments.invoker.JSON;

/**
 * PublicComment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-15T08:51:57.638293329-07:00[America/Los_Angeles]", comments = "Generator version: 7.11.0")
public class PublicComment {
  public static final String SERIALIZED_NAME_ID = "_id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nonnull
  private String id;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  @javax.annotation.Nonnull
  private String url;

  public static final String SERIALIZED_NAME_PAGE_TITLE = "pageTitle";
  @SerializedName(SERIALIZED_NAME_PAGE_TITLE)
  @javax.annotation.Nullable
  private String pageTitle;

  public static final String SERIALIZED_NAME_COMMENT_H_T_M_L = "commentHTML";
  @SerializedName(SERIALIZED_NAME_COMMENT_H_T_M_L)
  @javax.annotation.Nonnull
  private String commentHTML;

  public static final String SERIALIZED_NAME_URL_ID_RAW = "urlIdRaw";
  @SerializedName(SERIALIZED_NAME_URL_ID_RAW)
  @javax.annotation.Nullable
  private String urlIdRaw;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private String userId;

  public static final String SERIALIZED_NAME_ANON_USER_ID = "anonUserId";
  @SerializedName(SERIALIZED_NAME_ANON_USER_ID)
  @javax.annotation.Nullable
  private String anonUserId;

  public static final String SERIALIZED_NAME_COMMENTER_EMAIL = "commenterEmail";
  @SerializedName(SERIALIZED_NAME_COMMENTER_EMAIL)
  @javax.annotation.Nullable
  private String commenterEmail;

  public static final String SERIALIZED_NAME_COMMENTER_NAME = "commenterName";
  @SerializedName(SERIALIZED_NAME_COMMENTER_NAME)
  @javax.annotation.Nonnull
  private String commenterName;

  public static final String SERIALIZED_NAME_COMMENTER_LINK = "commenterLink";
  @SerializedName(SERIALIZED_NAME_COMMENTER_LINK)
  @javax.annotation.Nullable
  private String commenterLink;

  public static final String SERIALIZED_NAME_PARENT_ID = "parentId";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  @javax.annotation.Nullable
  private String parentId;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  @javax.annotation.Nonnull
  private OffsetDateTime date;

  public static final String SERIALIZED_NAME_LOCAL_DATE_STRING = "localDateString";
  @SerializedName(SERIALIZED_NAME_LOCAL_DATE_STRING)
  @javax.annotation.Nullable
  private String localDateString;

  public static final String SERIALIZED_NAME_LOCAL_DATE_HOURS = "localDateHours";
  @SerializedName(SERIALIZED_NAME_LOCAL_DATE_HOURS)
  @javax.annotation.Nullable
  private Integer localDateHours;

  public static final String SERIALIZED_NAME_VOTES = "votes";
  @SerializedName(SERIALIZED_NAME_VOTES)
  @javax.annotation.Nonnull
  private Integer votes;

  public static final String SERIALIZED_NAME_VOTES_UP = "votesUp";
  @SerializedName(SERIALIZED_NAME_VOTES_UP)
  @javax.annotation.Nonnull
  private Integer votesUp;

  public static final String SERIALIZED_NAME_VOTES_DOWN = "votesDown";
  @SerializedName(SERIALIZED_NAME_VOTES_DOWN)
  @javax.annotation.Nonnull
  private Integer votesDown;

  public static final String SERIALIZED_NAME_EXPIRE_AT = "expireAt";
  @SerializedName(SERIALIZED_NAME_EXPIRE_AT)
  @javax.annotation.Nullable
  private OffsetDateTime expireAt;

  public static final String SERIALIZED_NAME_VERIFIED = "verified";
  @SerializedName(SERIALIZED_NAME_VERIFIED)
  @javax.annotation.Nonnull
  private Boolean verified;

  public static final String SERIALIZED_NAME_VERIFIED_DATE = "verifiedDate";
  @SerializedName(SERIALIZED_NAME_VERIFIED_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime verifiedDate;

  public static final String SERIALIZED_NAME_VERIFICATION_ID = "verificationId";
  @SerializedName(SERIALIZED_NAME_VERIFICATION_ID)
  @javax.annotation.Nullable
  private String verificationId;

  public static final String SERIALIZED_NAME_NOTIFICATION_SENT_FOR_PARENT = "notificationSentForParent";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_SENT_FOR_PARENT)
  @javax.annotation.Nullable
  private Boolean notificationSentForParent;

  public static final String SERIALIZED_NAME_NOTIFICATION_SENT_FOR_PARENT_TENANT = "notificationSentForParentTenant";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_SENT_FOR_PARENT_TENANT)
  @javax.annotation.Nullable
  private Boolean notificationSentForParentTenant;

  public static final String SERIALIZED_NAME_REVIEWED = "reviewed";
  @SerializedName(SERIALIZED_NAME_REVIEWED)
  @javax.annotation.Nullable
  private Boolean reviewed;

  public static final String SERIALIZED_NAME_IMPORTED = "imported";
  @SerializedName(SERIALIZED_NAME_IMPORTED)
  @javax.annotation.Nullable
  private Boolean imported;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "externalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  @javax.annotation.Nullable
  private String externalId;

  public static final String SERIALIZED_NAME_EXTERNAL_PARENT_ID = "externalParentId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_PARENT_ID)
  @javax.annotation.Nullable
  private String externalParentId;

  public static final String SERIALIZED_NAME_AVATAR_SRC = "avatarSrc";
  @SerializedName(SERIALIZED_NAME_AVATAR_SRC)
  @javax.annotation.Nullable
  private String avatarSrc;

  public static final String SERIALIZED_NAME_IS_SPAM = "isSpam";
  @SerializedName(SERIALIZED_NAME_IS_SPAM)
  @javax.annotation.Nullable
  private Boolean isSpam;

  public static final String SERIALIZED_NAME_AI_DETERMINED_SPAM = "aiDeterminedSpam";
  @SerializedName(SERIALIZED_NAME_AI_DETERMINED_SPAM)
  @javax.annotation.Nullable
  private Boolean aiDeterminedSpam;

  public static final String SERIALIZED_NAME_HAS_IMAGES = "hasImages";
  @SerializedName(SERIALIZED_NAME_HAS_IMAGES)
  @javax.annotation.Nullable
  private Boolean hasImages;

  public static final String SERIALIZED_NAME_PAGE_NUMBER = "pageNumber";
  @SerializedName(SERIALIZED_NAME_PAGE_NUMBER)
  @javax.annotation.Nullable
  private Integer pageNumber;

  public static final String SERIALIZED_NAME_PAGE_NUMBER_O_F = "pageNumberOF";
  @SerializedName(SERIALIZED_NAME_PAGE_NUMBER_O_F)
  @javax.annotation.Nullable
  private Integer pageNumberOF;

  public static final String SERIALIZED_NAME_PAGE_NUMBER_N_F = "pageNumberNF";
  @SerializedName(SERIALIZED_NAME_PAGE_NUMBER_N_F)
  @javax.annotation.Nullable
  private Integer pageNumberNF;

  public static final String SERIALIZED_NAME_HAS_CODE = "hasCode";
  @SerializedName(SERIALIZED_NAME_HAS_CODE)
  @javax.annotation.Nullable
  private Boolean hasCode;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  @javax.annotation.Nonnull
  private String locale;

  public static final String SERIALIZED_NAME_IS_DELETED = "isDeleted";
  @SerializedName(SERIALIZED_NAME_IS_DELETED)
  @javax.annotation.Nullable
  private Boolean isDeleted;

  public static final String SERIALIZED_NAME_IS_DELETED_USER = "isDeletedUser";
  @SerializedName(SERIALIZED_NAME_IS_DELETED_USER)
  @javax.annotation.Nullable
  private Boolean isDeletedUser;

  public static final String SERIALIZED_NAME_IS_BANNED_USER = "isBannedUser";
  @SerializedName(SERIALIZED_NAME_IS_BANNED_USER)
  @javax.annotation.Nullable
  private Boolean isBannedUser;

  public static final String SERIALIZED_NAME_IS_BY_ADMIN = "isByAdmin";
  @SerializedName(SERIALIZED_NAME_IS_BY_ADMIN)
  @javax.annotation.Nullable
  private Boolean isByAdmin;

  public static final String SERIALIZED_NAME_IS_BY_MODERATOR = "isByModerator";
  @SerializedName(SERIALIZED_NAME_IS_BY_MODERATOR)
  @javax.annotation.Nullable
  private Boolean isByModerator;

  public static final String SERIALIZED_NAME_IS_PINNED = "isPinned";
  @SerializedName(SERIALIZED_NAME_IS_PINNED)
  @javax.annotation.Nullable
  private Boolean isPinned;

  public static final String SERIALIZED_NAME_IS_LOCKED = "isLocked";
  @SerializedName(SERIALIZED_NAME_IS_LOCKED)
  @javax.annotation.Nullable
  private Boolean isLocked;

  public static final String SERIALIZED_NAME_FLAG_COUNT = "flagCount";
  @SerializedName(SERIALIZED_NAME_FLAG_COUNT)
  @javax.annotation.Nullable
  private Integer flagCount;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  @javax.annotation.Nullable
  private Double rating;

  public static final String SERIALIZED_NAME_DISPLAY_LABEL = "displayLabel";
  @SerializedName(SERIALIZED_NAME_DISPLAY_LABEL)
  @javax.annotation.Nullable
  private String displayLabel;

  public static final String SERIALIZED_NAME_FROM_PRODUCT_ID = "fromProductId";
  @SerializedName(SERIALIZED_NAME_FROM_PRODUCT_ID)
  @javax.annotation.Nullable
  private Integer fromProductId;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  @javax.annotation.Nullable
  private PickFCommentExcludeKeyofFCommentLogsOrTenantIdOrCommentOrHasLinksOrUrlIdOrApprovedMeta meta;

  public static final String SERIALIZED_NAME_IP_HASH = "ipHash";
  @SerializedName(SERIALIZED_NAME_IP_HASH)
  @javax.annotation.Nullable
  private String ipHash;

  public static final String SERIALIZED_NAME_MENTIONS = "mentions";
  @SerializedName(SERIALIZED_NAME_MENTIONS)
  @javax.annotation.Nullable
  private List<CommentUserMentionInfo> mentions = new ArrayList<>();

  public static final String SERIALIZED_NAME_HASH_TAGS = "hashTags";
  @SerializedName(SERIALIZED_NAME_HASH_TAGS)
  @javax.annotation.Nullable
  private List<CommentUserHashTagInfo> hashTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_BADGES = "badges";
  @SerializedName(SERIALIZED_NAME_BADGES)
  @javax.annotation.Nullable
  private List<CommentUserBadgeInfo> badges = new ArrayList<>();

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  @javax.annotation.Nullable
  private String domain;

  public static final String SERIALIZED_NAME_VETERAN_BADGE_PROCESSED = "veteranBadgeProcessed";
  @SerializedName(SERIALIZED_NAME_VETERAN_BADGE_PROCESSED)
  @javax.annotation.Nullable
  private String veteranBadgeProcessed;

  public static final String SERIALIZED_NAME_MODERATION_GROUP_IDS = "moderationGroupIds";
  @SerializedName(SERIALIZED_NAME_MODERATION_GROUP_IDS)
  @javax.annotation.Nullable
  private List<String> moderationGroupIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_DID_PROCESS_BADGES = "didProcessBadges";
  @SerializedName(SERIALIZED_NAME_DID_PROCESS_BADGES)
  @javax.annotation.Nullable
  private Boolean didProcessBadges;

  public static final String SERIALIZED_NAME_FROM_OFFLINE_RESTORE = "fromOfflineRestore";
  @SerializedName(SERIALIZED_NAME_FROM_OFFLINE_RESTORE)
  @javax.annotation.Nullable
  private Boolean fromOfflineRestore;

  public static final String SERIALIZED_NAME_AUTOPLAY_JOB_ID = "autoplayJobId";
  @SerializedName(SERIALIZED_NAME_AUTOPLAY_JOB_ID)
  @javax.annotation.Nullable
  private String autoplayJobId;

  public static final String SERIALIZED_NAME_AUTOPLAY_DELAY_M_S = "autoplayDelayMS";
  @SerializedName(SERIALIZED_NAME_AUTOPLAY_DELAY_M_S)
  @javax.annotation.Nullable
  private Long autoplayDelayMS;

  public static final String SERIALIZED_NAME_FEEDBACK_IDS = "feedbackIds";
  @SerializedName(SERIALIZED_NAME_FEEDBACK_IDS)
  @javax.annotation.Nullable
  private List<String> feedbackIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_GROUP_IDS = "groupIds";
  @SerializedName(SERIALIZED_NAME_GROUP_IDS)
  @javax.annotation.Nullable
  private List<String> groupIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_VIEW_COUNT = "viewCount";
  @SerializedName(SERIALIZED_NAME_VIEW_COUNT)
  @javax.annotation.Nullable
  private Double viewCount;

  public static final String SERIALIZED_NAME_IS_UNREAD = "isUnread";
  @SerializedName(SERIALIZED_NAME_IS_UNREAD)
  @javax.annotation.Nullable
  private Boolean isUnread;

  public static final String SERIALIZED_NAME_MY_VOTE_ID = "myVoteId";
  @SerializedName(SERIALIZED_NAME_MY_VOTE_ID)
  @javax.annotation.Nullable
  private String myVoteId;

  public static final String SERIALIZED_NAME_IS_VOTED_DOWN = "isVotedDown";
  @SerializedName(SERIALIZED_NAME_IS_VOTED_DOWN)
  @javax.annotation.Nullable
  private Boolean isVotedDown;

  public static final String SERIALIZED_NAME_IS_VOTED_UP = "isVotedUp";
  @SerializedName(SERIALIZED_NAME_IS_VOTED_UP)
  @javax.annotation.Nullable
  private Boolean isVotedUp;

  public static final String SERIALIZED_NAME_HAS_CHILDREN = "hasChildren";
  @SerializedName(SERIALIZED_NAME_HAS_CHILDREN)
  @javax.annotation.Nullable
  private Boolean hasChildren;

  public static final String SERIALIZED_NAME_NESTED_CHILDREN_COUNT = "nestedChildrenCount";
  @SerializedName(SERIALIZED_NAME_NESTED_CHILDREN_COUNT)
  @javax.annotation.Nullable
  private Integer nestedChildrenCount;

  public static final String SERIALIZED_NAME_CHILD_COUNT = "childCount";
  @SerializedName(SERIALIZED_NAME_CHILD_COUNT)
  @javax.annotation.Nullable
  private Integer childCount;

  public static final String SERIALIZED_NAME_CHILDREN = "children";
  @SerializedName(SERIALIZED_NAME_CHILDREN)
  @javax.annotation.Nullable
  private List<PublicComment> children = new ArrayList<>();

  public static final String SERIALIZED_NAME_IS_FLAGGED = "isFlagged";
  @SerializedName(SERIALIZED_NAME_IS_FLAGGED)
  @javax.annotation.Nullable
  private Boolean isFlagged;

  public static final String SERIALIZED_NAME_IS_BLOCKED = "isBlocked";
  @SerializedName(SERIALIZED_NAME_IS_BLOCKED)
  @javax.annotation.Nullable
  private Boolean isBlocked;

  public PublicComment() {
  }

  public PublicComment id(@javax.annotation.Nonnull String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }


  public PublicComment url(@javax.annotation.Nonnull String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nonnull
  public String getUrl() {
    return url;
  }

  public void setUrl(@javax.annotation.Nonnull String url) {
    this.url = url;
  }


  public PublicComment pageTitle(@javax.annotation.Nullable String pageTitle) {
    this.pageTitle = pageTitle;
    return this;
  }

  /**
   * Get pageTitle
   * @return pageTitle
   */
  @javax.annotation.Nullable
  public String getPageTitle() {
    return pageTitle;
  }

  public void setPageTitle(@javax.annotation.Nullable String pageTitle) {
    this.pageTitle = pageTitle;
  }


  public PublicComment commentHTML(@javax.annotation.Nonnull String commentHTML) {
    this.commentHTML = commentHTML;
    return this;
  }

  /**
   * Get commentHTML
   * @return commentHTML
   */
  @javax.annotation.Nonnull
  public String getCommentHTML() {
    return commentHTML;
  }

  public void setCommentHTML(@javax.annotation.Nonnull String commentHTML) {
    this.commentHTML = commentHTML;
  }


  public PublicComment urlIdRaw(@javax.annotation.Nullable String urlIdRaw) {
    this.urlIdRaw = urlIdRaw;
    return this;
  }

  /**
   * Get urlIdRaw
   * @return urlIdRaw
   */
  @javax.annotation.Nullable
  public String getUrlIdRaw() {
    return urlIdRaw;
  }

  public void setUrlIdRaw(@javax.annotation.Nullable String urlIdRaw) {
    this.urlIdRaw = urlIdRaw;
  }


  public PublicComment userId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
  }


  public PublicComment anonUserId(@javax.annotation.Nullable String anonUserId) {
    this.anonUserId = anonUserId;
    return this;
  }

  /**
   * Get anonUserId
   * @return anonUserId
   */
  @javax.annotation.Nullable
  public String getAnonUserId() {
    return anonUserId;
  }

  public void setAnonUserId(@javax.annotation.Nullable String anonUserId) {
    this.anonUserId = anonUserId;
  }


  public PublicComment commenterEmail(@javax.annotation.Nullable String commenterEmail) {
    this.commenterEmail = commenterEmail;
    return this;
  }

  /**
   * Get commenterEmail
   * @return commenterEmail
   */
  @javax.annotation.Nullable
  public String getCommenterEmail() {
    return commenterEmail;
  }

  public void setCommenterEmail(@javax.annotation.Nullable String commenterEmail) {
    this.commenterEmail = commenterEmail;
  }


  public PublicComment commenterName(@javax.annotation.Nonnull String commenterName) {
    this.commenterName = commenterName;
    return this;
  }

  /**
   * Get commenterName
   * @return commenterName
   */
  @javax.annotation.Nonnull
  public String getCommenterName() {
    return commenterName;
  }

  public void setCommenterName(@javax.annotation.Nonnull String commenterName) {
    this.commenterName = commenterName;
  }


  public PublicComment commenterLink(@javax.annotation.Nullable String commenterLink) {
    this.commenterLink = commenterLink;
    return this;
  }

  /**
   * Get commenterLink
   * @return commenterLink
   */
  @javax.annotation.Nullable
  public String getCommenterLink() {
    return commenterLink;
  }

  public void setCommenterLink(@javax.annotation.Nullable String commenterLink) {
    this.commenterLink = commenterLink;
  }


  public PublicComment parentId(@javax.annotation.Nullable String parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * Get parentId
   * @return parentId
   */
  @javax.annotation.Nullable
  public String getParentId() {
    return parentId;
  }

  public void setParentId(@javax.annotation.Nullable String parentId) {
    this.parentId = parentId;
  }


  public PublicComment date(@javax.annotation.Nonnull OffsetDateTime date) {
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(@javax.annotation.Nonnull OffsetDateTime date) {
    this.date = date;
  }


  public PublicComment localDateString(@javax.annotation.Nullable String localDateString) {
    this.localDateString = localDateString;
    return this;
  }

  /**
   * Get localDateString
   * @return localDateString
   */
  @javax.annotation.Nullable
  public String getLocalDateString() {
    return localDateString;
  }

  public void setLocalDateString(@javax.annotation.Nullable String localDateString) {
    this.localDateString = localDateString;
  }


  public PublicComment localDateHours(@javax.annotation.Nullable Integer localDateHours) {
    this.localDateHours = localDateHours;
    return this;
  }

  /**
   * Get localDateHours
   * @return localDateHours
   */
  @javax.annotation.Nullable
  public Integer getLocalDateHours() {
    return localDateHours;
  }

  public void setLocalDateHours(@javax.annotation.Nullable Integer localDateHours) {
    this.localDateHours = localDateHours;
  }


  public PublicComment votes(@javax.annotation.Nonnull Integer votes) {
    this.votes = votes;
    return this;
  }

  /**
   * Get votes
   * @return votes
   */
  @javax.annotation.Nonnull
  public Integer getVotes() {
    return votes;
  }

  public void setVotes(@javax.annotation.Nonnull Integer votes) {
    this.votes = votes;
  }


  public PublicComment votesUp(@javax.annotation.Nonnull Integer votesUp) {
    this.votesUp = votesUp;
    return this;
  }

  /**
   * Get votesUp
   * @return votesUp
   */
  @javax.annotation.Nonnull
  public Integer getVotesUp() {
    return votesUp;
  }

  public void setVotesUp(@javax.annotation.Nonnull Integer votesUp) {
    this.votesUp = votesUp;
  }


  public PublicComment votesDown(@javax.annotation.Nonnull Integer votesDown) {
    this.votesDown = votesDown;
    return this;
  }

  /**
   * Get votesDown
   * @return votesDown
   */
  @javax.annotation.Nonnull
  public Integer getVotesDown() {
    return votesDown;
  }

  public void setVotesDown(@javax.annotation.Nonnull Integer votesDown) {
    this.votesDown = votesDown;
  }


  public PublicComment expireAt(@javax.annotation.Nullable OffsetDateTime expireAt) {
    this.expireAt = expireAt;
    return this;
  }

  /**
   * Get expireAt
   * @return expireAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpireAt() {
    return expireAt;
  }

  public void setExpireAt(@javax.annotation.Nullable OffsetDateTime expireAt) {
    this.expireAt = expireAt;
  }


  public PublicComment verified(@javax.annotation.Nonnull Boolean verified) {
    this.verified = verified;
    return this;
  }

  /**
   * Get verified
   * @return verified
   */
  @javax.annotation.Nonnull
  public Boolean getVerified() {
    return verified;
  }

  public void setVerified(@javax.annotation.Nonnull Boolean verified) {
    this.verified = verified;
  }


  public PublicComment verifiedDate(@javax.annotation.Nullable OffsetDateTime verifiedDate) {
    this.verifiedDate = verifiedDate;
    return this;
  }

  /**
   * Get verifiedDate
   * @return verifiedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getVerifiedDate() {
    return verifiedDate;
  }

  public void setVerifiedDate(@javax.annotation.Nullable OffsetDateTime verifiedDate) {
    this.verifiedDate = verifiedDate;
  }


  public PublicComment verificationId(@javax.annotation.Nullable String verificationId) {
    this.verificationId = verificationId;
    return this;
  }

  /**
   * Get verificationId
   * @return verificationId
   */
  @javax.annotation.Nullable
  public String getVerificationId() {
    return verificationId;
  }

  public void setVerificationId(@javax.annotation.Nullable String verificationId) {
    this.verificationId = verificationId;
  }


  public PublicComment notificationSentForParent(@javax.annotation.Nullable Boolean notificationSentForParent) {
    this.notificationSentForParent = notificationSentForParent;
    return this;
  }

  /**
   * Get notificationSentForParent
   * @return notificationSentForParent
   */
  @javax.annotation.Nullable
  public Boolean getNotificationSentForParent() {
    return notificationSentForParent;
  }

  public void setNotificationSentForParent(@javax.annotation.Nullable Boolean notificationSentForParent) {
    this.notificationSentForParent = notificationSentForParent;
  }


  public PublicComment notificationSentForParentTenant(@javax.annotation.Nullable Boolean notificationSentForParentTenant) {
    this.notificationSentForParentTenant = notificationSentForParentTenant;
    return this;
  }

  /**
   * Get notificationSentForParentTenant
   * @return notificationSentForParentTenant
   */
  @javax.annotation.Nullable
  public Boolean getNotificationSentForParentTenant() {
    return notificationSentForParentTenant;
  }

  public void setNotificationSentForParentTenant(@javax.annotation.Nullable Boolean notificationSentForParentTenant) {
    this.notificationSentForParentTenant = notificationSentForParentTenant;
  }


  public PublicComment reviewed(@javax.annotation.Nullable Boolean reviewed) {
    this.reviewed = reviewed;
    return this;
  }

  /**
   * Get reviewed
   * @return reviewed
   */
  @javax.annotation.Nullable
  public Boolean getReviewed() {
    return reviewed;
  }

  public void setReviewed(@javax.annotation.Nullable Boolean reviewed) {
    this.reviewed = reviewed;
  }


  public PublicComment imported(@javax.annotation.Nullable Boolean imported) {
    this.imported = imported;
    return this;
  }

  /**
   * Get imported
   * @return imported
   */
  @javax.annotation.Nullable
  public Boolean getImported() {
    return imported;
  }

  public void setImported(@javax.annotation.Nullable Boolean imported) {
    this.imported = imported;
  }


  public PublicComment externalId(@javax.annotation.Nullable String externalId) {
    this.externalId = externalId;
    return this;
  }

  /**
   * Get externalId
   * @return externalId
   */
  @javax.annotation.Nullable
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(@javax.annotation.Nullable String externalId) {
    this.externalId = externalId;
  }


  public PublicComment externalParentId(@javax.annotation.Nullable String externalParentId) {
    this.externalParentId = externalParentId;
    return this;
  }

  /**
   * Get externalParentId
   * @return externalParentId
   */
  @javax.annotation.Nullable
  public String getExternalParentId() {
    return externalParentId;
  }

  public void setExternalParentId(@javax.annotation.Nullable String externalParentId) {
    this.externalParentId = externalParentId;
  }


  public PublicComment avatarSrc(@javax.annotation.Nullable String avatarSrc) {
    this.avatarSrc = avatarSrc;
    return this;
  }

  /**
   * Get avatarSrc
   * @return avatarSrc
   */
  @javax.annotation.Nullable
  public String getAvatarSrc() {
    return avatarSrc;
  }

  public void setAvatarSrc(@javax.annotation.Nullable String avatarSrc) {
    this.avatarSrc = avatarSrc;
  }


  public PublicComment isSpam(@javax.annotation.Nullable Boolean isSpam) {
    this.isSpam = isSpam;
    return this;
  }

  /**
   * Get isSpam
   * @return isSpam
   */
  @javax.annotation.Nullable
  public Boolean getIsSpam() {
    return isSpam;
  }

  public void setIsSpam(@javax.annotation.Nullable Boolean isSpam) {
    this.isSpam = isSpam;
  }


  public PublicComment aiDeterminedSpam(@javax.annotation.Nullable Boolean aiDeterminedSpam) {
    this.aiDeterminedSpam = aiDeterminedSpam;
    return this;
  }

  /**
   * Get aiDeterminedSpam
   * @return aiDeterminedSpam
   */
  @javax.annotation.Nullable
  public Boolean getAiDeterminedSpam() {
    return aiDeterminedSpam;
  }

  public void setAiDeterminedSpam(@javax.annotation.Nullable Boolean aiDeterminedSpam) {
    this.aiDeterminedSpam = aiDeterminedSpam;
  }


  public PublicComment hasImages(@javax.annotation.Nullable Boolean hasImages) {
    this.hasImages = hasImages;
    return this;
  }

  /**
   * Get hasImages
   * @return hasImages
   */
  @javax.annotation.Nullable
  public Boolean getHasImages() {
    return hasImages;
  }

  public void setHasImages(@javax.annotation.Nullable Boolean hasImages) {
    this.hasImages = hasImages;
  }


  public PublicComment pageNumber(@javax.annotation.Nullable Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

  /**
   * Get pageNumber
   * @return pageNumber
   */
  @javax.annotation.Nullable
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(@javax.annotation.Nullable Integer pageNumber) {
    this.pageNumber = pageNumber;
  }


  public PublicComment pageNumberOF(@javax.annotation.Nullable Integer pageNumberOF) {
    this.pageNumberOF = pageNumberOF;
    return this;
  }

  /**
   * Get pageNumberOF
   * @return pageNumberOF
   */
  @javax.annotation.Nullable
  public Integer getPageNumberOF() {
    return pageNumberOF;
  }

  public void setPageNumberOF(@javax.annotation.Nullable Integer pageNumberOF) {
    this.pageNumberOF = pageNumberOF;
  }


  public PublicComment pageNumberNF(@javax.annotation.Nullable Integer pageNumberNF) {
    this.pageNumberNF = pageNumberNF;
    return this;
  }

  /**
   * Get pageNumberNF
   * @return pageNumberNF
   */
  @javax.annotation.Nullable
  public Integer getPageNumberNF() {
    return pageNumberNF;
  }

  public void setPageNumberNF(@javax.annotation.Nullable Integer pageNumberNF) {
    this.pageNumberNF = pageNumberNF;
  }


  public PublicComment hasCode(@javax.annotation.Nullable Boolean hasCode) {
    this.hasCode = hasCode;
    return this;
  }

  /**
   * Get hasCode
   * @return hasCode
   */
  @javax.annotation.Nullable
  public Boolean getHasCode() {
    return hasCode;
  }

  public void setHasCode(@javax.annotation.Nullable Boolean hasCode) {
    this.hasCode = hasCode;
  }


  public PublicComment locale(@javax.annotation.Nonnull String locale) {
    this.locale = locale;
    return this;
  }

  /**
   * Get locale
   * @return locale
   */
  @javax.annotation.Nonnull
  public String getLocale() {
    return locale;
  }

  public void setLocale(@javax.annotation.Nonnull String locale) {
    this.locale = locale;
  }


  public PublicComment isDeleted(@javax.annotation.Nullable Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Get isDeleted
   * @return isDeleted
   */
  @javax.annotation.Nullable
  public Boolean getIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(@javax.annotation.Nullable Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public PublicComment isDeletedUser(@javax.annotation.Nullable Boolean isDeletedUser) {
    this.isDeletedUser = isDeletedUser;
    return this;
  }

  /**
   * Get isDeletedUser
   * @return isDeletedUser
   */
  @javax.annotation.Nullable
  public Boolean getIsDeletedUser() {
    return isDeletedUser;
  }

  public void setIsDeletedUser(@javax.annotation.Nullable Boolean isDeletedUser) {
    this.isDeletedUser = isDeletedUser;
  }


  public PublicComment isBannedUser(@javax.annotation.Nullable Boolean isBannedUser) {
    this.isBannedUser = isBannedUser;
    return this;
  }

  /**
   * Get isBannedUser
   * @return isBannedUser
   */
  @javax.annotation.Nullable
  public Boolean getIsBannedUser() {
    return isBannedUser;
  }

  public void setIsBannedUser(@javax.annotation.Nullable Boolean isBannedUser) {
    this.isBannedUser = isBannedUser;
  }


  public PublicComment isByAdmin(@javax.annotation.Nullable Boolean isByAdmin) {
    this.isByAdmin = isByAdmin;
    return this;
  }

  /**
   * Get isByAdmin
   * @return isByAdmin
   */
  @javax.annotation.Nullable
  public Boolean getIsByAdmin() {
    return isByAdmin;
  }

  public void setIsByAdmin(@javax.annotation.Nullable Boolean isByAdmin) {
    this.isByAdmin = isByAdmin;
  }


  public PublicComment isByModerator(@javax.annotation.Nullable Boolean isByModerator) {
    this.isByModerator = isByModerator;
    return this;
  }

  /**
   * Get isByModerator
   * @return isByModerator
   */
  @javax.annotation.Nullable
  public Boolean getIsByModerator() {
    return isByModerator;
  }

  public void setIsByModerator(@javax.annotation.Nullable Boolean isByModerator) {
    this.isByModerator = isByModerator;
  }


  public PublicComment isPinned(@javax.annotation.Nullable Boolean isPinned) {
    this.isPinned = isPinned;
    return this;
  }

  /**
   * Get isPinned
   * @return isPinned
   */
  @javax.annotation.Nullable
  public Boolean getIsPinned() {
    return isPinned;
  }

  public void setIsPinned(@javax.annotation.Nullable Boolean isPinned) {
    this.isPinned = isPinned;
  }


  public PublicComment isLocked(@javax.annotation.Nullable Boolean isLocked) {
    this.isLocked = isLocked;
    return this;
  }

  /**
   * Get isLocked
   * @return isLocked
   */
  @javax.annotation.Nullable
  public Boolean getIsLocked() {
    return isLocked;
  }

  public void setIsLocked(@javax.annotation.Nullable Boolean isLocked) {
    this.isLocked = isLocked;
  }


  public PublicComment flagCount(@javax.annotation.Nullable Integer flagCount) {
    this.flagCount = flagCount;
    return this;
  }

  /**
   * Get flagCount
   * @return flagCount
   */
  @javax.annotation.Nullable
  public Integer getFlagCount() {
    return flagCount;
  }

  public void setFlagCount(@javax.annotation.Nullable Integer flagCount) {
    this.flagCount = flagCount;
  }


  public PublicComment rating(@javax.annotation.Nullable Double rating) {
    this.rating = rating;
    return this;
  }

  /**
   * Get rating
   * @return rating
   */
  @javax.annotation.Nullable
  public Double getRating() {
    return rating;
  }

  public void setRating(@javax.annotation.Nullable Double rating) {
    this.rating = rating;
  }


  public PublicComment displayLabel(@javax.annotation.Nullable String displayLabel) {
    this.displayLabel = displayLabel;
    return this;
  }

  /**
   * Get displayLabel
   * @return displayLabel
   */
  @javax.annotation.Nullable
  public String getDisplayLabel() {
    return displayLabel;
  }

  public void setDisplayLabel(@javax.annotation.Nullable String displayLabel) {
    this.displayLabel = displayLabel;
  }


  public PublicComment fromProductId(@javax.annotation.Nullable Integer fromProductId) {
    this.fromProductId = fromProductId;
    return this;
  }

  /**
   * Get fromProductId
   * @return fromProductId
   */
  @javax.annotation.Nullable
  public Integer getFromProductId() {
    return fromProductId;
  }

  public void setFromProductId(@javax.annotation.Nullable Integer fromProductId) {
    this.fromProductId = fromProductId;
  }


  public PublicComment meta(@javax.annotation.Nullable PickFCommentExcludeKeyofFCommentLogsOrTenantIdOrCommentOrHasLinksOrUrlIdOrApprovedMeta meta) {
    this.meta = meta;
    return this;
  }

  /**
   * Get meta
   * @return meta
   */
  @javax.annotation.Nullable
  public PickFCommentExcludeKeyofFCommentLogsOrTenantIdOrCommentOrHasLinksOrUrlIdOrApprovedMeta getMeta() {
    return meta;
  }

  public void setMeta(@javax.annotation.Nullable PickFCommentExcludeKeyofFCommentLogsOrTenantIdOrCommentOrHasLinksOrUrlIdOrApprovedMeta meta) {
    this.meta = meta;
  }


  public PublicComment ipHash(@javax.annotation.Nullable String ipHash) {
    this.ipHash = ipHash;
    return this;
  }

  /**
   * Get ipHash
   * @return ipHash
   */
  @javax.annotation.Nullable
  public String getIpHash() {
    return ipHash;
  }

  public void setIpHash(@javax.annotation.Nullable String ipHash) {
    this.ipHash = ipHash;
  }


  public PublicComment mentions(@javax.annotation.Nullable List<CommentUserMentionInfo> mentions) {
    this.mentions = mentions;
    return this;
  }

  public PublicComment addMentionsItem(CommentUserMentionInfo mentionsItem) {
    if (this.mentions == null) {
      this.mentions = new ArrayList<>();
    }
    this.mentions.add(mentionsItem);
    return this;
  }

  /**
   * Get mentions
   * @return mentions
   */
  @javax.annotation.Nullable
  public List<CommentUserMentionInfo> getMentions() {
    return mentions;
  }

  public void setMentions(@javax.annotation.Nullable List<CommentUserMentionInfo> mentions) {
    this.mentions = mentions;
  }


  public PublicComment hashTags(@javax.annotation.Nullable List<CommentUserHashTagInfo> hashTags) {
    this.hashTags = hashTags;
    return this;
  }

  public PublicComment addHashTagsItem(CommentUserHashTagInfo hashTagsItem) {
    if (this.hashTags == null) {
      this.hashTags = new ArrayList<>();
    }
    this.hashTags.add(hashTagsItem);
    return this;
  }

  /**
   * Get hashTags
   * @return hashTags
   */
  @javax.annotation.Nullable
  public List<CommentUserHashTagInfo> getHashTags() {
    return hashTags;
  }

  public void setHashTags(@javax.annotation.Nullable List<CommentUserHashTagInfo> hashTags) {
    this.hashTags = hashTags;
  }


  public PublicComment badges(@javax.annotation.Nullable List<CommentUserBadgeInfo> badges) {
    this.badges = badges;
    return this;
  }

  public PublicComment addBadgesItem(CommentUserBadgeInfo badgesItem) {
    if (this.badges == null) {
      this.badges = new ArrayList<>();
    }
    this.badges.add(badgesItem);
    return this;
  }

  /**
   * Get badges
   * @return badges
   */
  @javax.annotation.Nullable
  public List<CommentUserBadgeInfo> getBadges() {
    return badges;
  }

  public void setBadges(@javax.annotation.Nullable List<CommentUserBadgeInfo> badges) {
    this.badges = badges;
  }


  public PublicComment domain(@javax.annotation.Nullable String domain) {
    this.domain = domain;
    return this;
  }

  /**
   * Get domain
   * @return domain
   */
  @javax.annotation.Nullable
  public String getDomain() {
    return domain;
  }

  public void setDomain(@javax.annotation.Nullable String domain) {
    this.domain = domain;
  }


  public PublicComment veteranBadgeProcessed(@javax.annotation.Nullable String veteranBadgeProcessed) {
    this.veteranBadgeProcessed = veteranBadgeProcessed;
    return this;
  }

  /**
   * Get veteranBadgeProcessed
   * @return veteranBadgeProcessed
   */
  @javax.annotation.Nullable
  public String getVeteranBadgeProcessed() {
    return veteranBadgeProcessed;
  }

  public void setVeteranBadgeProcessed(@javax.annotation.Nullable String veteranBadgeProcessed) {
    this.veteranBadgeProcessed = veteranBadgeProcessed;
  }


  public PublicComment moderationGroupIds(@javax.annotation.Nullable List<String> moderationGroupIds) {
    this.moderationGroupIds = moderationGroupIds;
    return this;
  }

  public PublicComment addModerationGroupIdsItem(String moderationGroupIdsItem) {
    if (this.moderationGroupIds == null) {
      this.moderationGroupIds = new ArrayList<>();
    }
    this.moderationGroupIds.add(moderationGroupIdsItem);
    return this;
  }

  /**
   * Get moderationGroupIds
   * @return moderationGroupIds
   */
  @javax.annotation.Nullable
  public List<String> getModerationGroupIds() {
    return moderationGroupIds;
  }

  public void setModerationGroupIds(@javax.annotation.Nullable List<String> moderationGroupIds) {
    this.moderationGroupIds = moderationGroupIds;
  }


  public PublicComment didProcessBadges(@javax.annotation.Nullable Boolean didProcessBadges) {
    this.didProcessBadges = didProcessBadges;
    return this;
  }

  /**
   * Get didProcessBadges
   * @return didProcessBadges
   */
  @javax.annotation.Nullable
  public Boolean getDidProcessBadges() {
    return didProcessBadges;
  }

  public void setDidProcessBadges(@javax.annotation.Nullable Boolean didProcessBadges) {
    this.didProcessBadges = didProcessBadges;
  }


  public PublicComment fromOfflineRestore(@javax.annotation.Nullable Boolean fromOfflineRestore) {
    this.fromOfflineRestore = fromOfflineRestore;
    return this;
  }

  /**
   * Get fromOfflineRestore
   * @return fromOfflineRestore
   */
  @javax.annotation.Nullable
  public Boolean getFromOfflineRestore() {
    return fromOfflineRestore;
  }

  public void setFromOfflineRestore(@javax.annotation.Nullable Boolean fromOfflineRestore) {
    this.fromOfflineRestore = fromOfflineRestore;
  }


  public PublicComment autoplayJobId(@javax.annotation.Nullable String autoplayJobId) {
    this.autoplayJobId = autoplayJobId;
    return this;
  }

  /**
   * Get autoplayJobId
   * @return autoplayJobId
   */
  @javax.annotation.Nullable
  public String getAutoplayJobId() {
    return autoplayJobId;
  }

  public void setAutoplayJobId(@javax.annotation.Nullable String autoplayJobId) {
    this.autoplayJobId = autoplayJobId;
  }


  public PublicComment autoplayDelayMS(@javax.annotation.Nullable Long autoplayDelayMS) {
    this.autoplayDelayMS = autoplayDelayMS;
    return this;
  }

  /**
   * Get autoplayDelayMS
   * @return autoplayDelayMS
   */
  @javax.annotation.Nullable
  public Long getAutoplayDelayMS() {
    return autoplayDelayMS;
  }

  public void setAutoplayDelayMS(@javax.annotation.Nullable Long autoplayDelayMS) {
    this.autoplayDelayMS = autoplayDelayMS;
  }


  public PublicComment feedbackIds(@javax.annotation.Nullable List<String> feedbackIds) {
    this.feedbackIds = feedbackIds;
    return this;
  }

  public PublicComment addFeedbackIdsItem(String feedbackIdsItem) {
    if (this.feedbackIds == null) {
      this.feedbackIds = new ArrayList<>();
    }
    this.feedbackIds.add(feedbackIdsItem);
    return this;
  }

  /**
   * Get feedbackIds
   * @return feedbackIds
   */
  @javax.annotation.Nullable
  public List<String> getFeedbackIds() {
    return feedbackIds;
  }

  public void setFeedbackIds(@javax.annotation.Nullable List<String> feedbackIds) {
    this.feedbackIds = feedbackIds;
  }


  public PublicComment groupIds(@javax.annotation.Nullable List<String> groupIds) {
    this.groupIds = groupIds;
    return this;
  }

  public PublicComment addGroupIdsItem(String groupIdsItem) {
    if (this.groupIds == null) {
      this.groupIds = new ArrayList<>();
    }
    this.groupIds.add(groupIdsItem);
    return this;
  }

  /**
   * Get groupIds
   * @return groupIds
   */
  @javax.annotation.Nullable
  public List<String> getGroupIds() {
    return groupIds;
  }

  public void setGroupIds(@javax.annotation.Nullable List<String> groupIds) {
    this.groupIds = groupIds;
  }


  public PublicComment viewCount(@javax.annotation.Nullable Double viewCount) {
    this.viewCount = viewCount;
    return this;
  }

  /**
   * Get viewCount
   * @return viewCount
   */
  @javax.annotation.Nullable
  public Double getViewCount() {
    return viewCount;
  }

  public void setViewCount(@javax.annotation.Nullable Double viewCount) {
    this.viewCount = viewCount;
  }


  public PublicComment isUnread(@javax.annotation.Nullable Boolean isUnread) {
    this.isUnread = isUnread;
    return this;
  }

  /**
   * Get isUnread
   * @return isUnread
   */
  @javax.annotation.Nullable
  public Boolean getIsUnread() {
    return isUnread;
  }

  public void setIsUnread(@javax.annotation.Nullable Boolean isUnread) {
    this.isUnread = isUnread;
  }


  public PublicComment myVoteId(@javax.annotation.Nullable String myVoteId) {
    this.myVoteId = myVoteId;
    return this;
  }

  /**
   * Get myVoteId
   * @return myVoteId
   */
  @javax.annotation.Nullable
  public String getMyVoteId() {
    return myVoteId;
  }

  public void setMyVoteId(@javax.annotation.Nullable String myVoteId) {
    this.myVoteId = myVoteId;
  }


  public PublicComment isVotedDown(@javax.annotation.Nullable Boolean isVotedDown) {
    this.isVotedDown = isVotedDown;
    return this;
  }

  /**
   * Get isVotedDown
   * @return isVotedDown
   */
  @javax.annotation.Nullable
  public Boolean getIsVotedDown() {
    return isVotedDown;
  }

  public void setIsVotedDown(@javax.annotation.Nullable Boolean isVotedDown) {
    this.isVotedDown = isVotedDown;
  }


  public PublicComment isVotedUp(@javax.annotation.Nullable Boolean isVotedUp) {
    this.isVotedUp = isVotedUp;
    return this;
  }

  /**
   * Get isVotedUp
   * @return isVotedUp
   */
  @javax.annotation.Nullable
  public Boolean getIsVotedUp() {
    return isVotedUp;
  }

  public void setIsVotedUp(@javax.annotation.Nullable Boolean isVotedUp) {
    this.isVotedUp = isVotedUp;
  }


  public PublicComment hasChildren(@javax.annotation.Nullable Boolean hasChildren) {
    this.hasChildren = hasChildren;
    return this;
  }

  /**
   * This is always set when asTree&#x3D;true
   * @return hasChildren
   */
  @javax.annotation.Nullable
  public Boolean getHasChildren() {
    return hasChildren;
  }

  public void setHasChildren(@javax.annotation.Nullable Boolean hasChildren) {
    this.hasChildren = hasChildren;
  }


  public PublicComment nestedChildrenCount(@javax.annotation.Nullable Integer nestedChildrenCount) {
    this.nestedChildrenCount = nestedChildrenCount;
    return this;
  }

  /**
   * The total nested child count included in this response (may be more available w/ pagination) Only set with asTree&#x3D;true, otherwise this will be null.
   * @return nestedChildrenCount
   */
  @javax.annotation.Nullable
  public Integer getNestedChildrenCount() {
    return nestedChildrenCount;
  }

  public void setNestedChildrenCount(@javax.annotation.Nullable Integer nestedChildrenCount) {
    this.nestedChildrenCount = nestedChildrenCount;
  }


  public PublicComment childCount(@javax.annotation.Nullable Integer childCount) {
    this.childCount = childCount;
    return this;
  }

  /**
   * You must ask the API to count children (with asTree&#x3D;true&amp;countChildren&#x3D;true), otherwise this will be null. This will be the complete direct child count, whereas children may only contain a subset based on pagination.
   * @return childCount
   */
  @javax.annotation.Nullable
  public Integer getChildCount() {
    return childCount;
  }

  public void setChildCount(@javax.annotation.Nullable Integer childCount) {
    this.childCount = childCount;
  }


  public PublicComment children(@javax.annotation.Nullable List<PublicComment> children) {
    this.children = children;
    return this;
  }

  public PublicComment addChildrenItem(PublicComment childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<>();
    }
    this.children.add(childrenItem);
    return this;
  }

  /**
   * Get children
   * @return children
   */
  @javax.annotation.Nullable
  public List<PublicComment> getChildren() {
    return children;
  }

  public void setChildren(@javax.annotation.Nullable List<PublicComment> children) {
    this.children = children;
  }


  public PublicComment isFlagged(@javax.annotation.Nullable Boolean isFlagged) {
    this.isFlagged = isFlagged;
    return this;
  }

  /**
   * Get isFlagged
   * @return isFlagged
   */
  @javax.annotation.Nullable
  public Boolean getIsFlagged() {
    return isFlagged;
  }

  public void setIsFlagged(@javax.annotation.Nullable Boolean isFlagged) {
    this.isFlagged = isFlagged;
  }


  public PublicComment isBlocked(@javax.annotation.Nullable Boolean isBlocked) {
    this.isBlocked = isBlocked;
    return this;
  }

  /**
   * Get isBlocked
   * @return isBlocked
   */
  @javax.annotation.Nullable
  public Boolean getIsBlocked() {
    return isBlocked;
  }

  public void setIsBlocked(@javax.annotation.Nullable Boolean isBlocked) {
    this.isBlocked = isBlocked;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublicComment publicComment = (PublicComment) o;
    return Objects.equals(this.id, publicComment.id) &&
        Objects.equals(this.url, publicComment.url) &&
        Objects.equals(this.pageTitle, publicComment.pageTitle) &&
        Objects.equals(this.commentHTML, publicComment.commentHTML) &&
        Objects.equals(this.urlIdRaw, publicComment.urlIdRaw) &&
        Objects.equals(this.userId, publicComment.userId) &&
        Objects.equals(this.anonUserId, publicComment.anonUserId) &&
        Objects.equals(this.commenterEmail, publicComment.commenterEmail) &&
        Objects.equals(this.commenterName, publicComment.commenterName) &&
        Objects.equals(this.commenterLink, publicComment.commenterLink) &&
        Objects.equals(this.parentId, publicComment.parentId) &&
        Objects.equals(this.date, publicComment.date) &&
        Objects.equals(this.localDateString, publicComment.localDateString) &&
        Objects.equals(this.localDateHours, publicComment.localDateHours) &&
        Objects.equals(this.votes, publicComment.votes) &&
        Objects.equals(this.votesUp, publicComment.votesUp) &&
        Objects.equals(this.votesDown, publicComment.votesDown) &&
        Objects.equals(this.expireAt, publicComment.expireAt) &&
        Objects.equals(this.verified, publicComment.verified) &&
        Objects.equals(this.verifiedDate, publicComment.verifiedDate) &&
        Objects.equals(this.verificationId, publicComment.verificationId) &&
        Objects.equals(this.notificationSentForParent, publicComment.notificationSentForParent) &&
        Objects.equals(this.notificationSentForParentTenant, publicComment.notificationSentForParentTenant) &&
        Objects.equals(this.reviewed, publicComment.reviewed) &&
        Objects.equals(this.imported, publicComment.imported) &&
        Objects.equals(this.externalId, publicComment.externalId) &&
        Objects.equals(this.externalParentId, publicComment.externalParentId) &&
        Objects.equals(this.avatarSrc, publicComment.avatarSrc) &&
        Objects.equals(this.isSpam, publicComment.isSpam) &&
        Objects.equals(this.aiDeterminedSpam, publicComment.aiDeterminedSpam) &&
        Objects.equals(this.hasImages, publicComment.hasImages) &&
        Objects.equals(this.pageNumber, publicComment.pageNumber) &&
        Objects.equals(this.pageNumberOF, publicComment.pageNumberOF) &&
        Objects.equals(this.pageNumberNF, publicComment.pageNumberNF) &&
        Objects.equals(this.hasCode, publicComment.hasCode) &&
        Objects.equals(this.locale, publicComment.locale) &&
        Objects.equals(this.isDeleted, publicComment.isDeleted) &&
        Objects.equals(this.isDeletedUser, publicComment.isDeletedUser) &&
        Objects.equals(this.isBannedUser, publicComment.isBannedUser) &&
        Objects.equals(this.isByAdmin, publicComment.isByAdmin) &&
        Objects.equals(this.isByModerator, publicComment.isByModerator) &&
        Objects.equals(this.isPinned, publicComment.isPinned) &&
        Objects.equals(this.isLocked, publicComment.isLocked) &&
        Objects.equals(this.flagCount, publicComment.flagCount) &&
        Objects.equals(this.rating, publicComment.rating) &&
        Objects.equals(this.displayLabel, publicComment.displayLabel) &&
        Objects.equals(this.fromProductId, publicComment.fromProductId) &&
        Objects.equals(this.meta, publicComment.meta) &&
        Objects.equals(this.ipHash, publicComment.ipHash) &&
        Objects.equals(this.mentions, publicComment.mentions) &&
        Objects.equals(this.hashTags, publicComment.hashTags) &&
        Objects.equals(this.badges, publicComment.badges) &&
        Objects.equals(this.domain, publicComment.domain) &&
        Objects.equals(this.veteranBadgeProcessed, publicComment.veteranBadgeProcessed) &&
        Objects.equals(this.moderationGroupIds, publicComment.moderationGroupIds) &&
        Objects.equals(this.didProcessBadges, publicComment.didProcessBadges) &&
        Objects.equals(this.fromOfflineRestore, publicComment.fromOfflineRestore) &&
        Objects.equals(this.autoplayJobId, publicComment.autoplayJobId) &&
        Objects.equals(this.autoplayDelayMS, publicComment.autoplayDelayMS) &&
        Objects.equals(this.feedbackIds, publicComment.feedbackIds) &&
        Objects.equals(this.groupIds, publicComment.groupIds) &&
        Objects.equals(this.viewCount, publicComment.viewCount) &&
        Objects.equals(this.isUnread, publicComment.isUnread) &&
        Objects.equals(this.myVoteId, publicComment.myVoteId) &&
        Objects.equals(this.isVotedDown, publicComment.isVotedDown) &&
        Objects.equals(this.isVotedUp, publicComment.isVotedUp) &&
        Objects.equals(this.hasChildren, publicComment.hasChildren) &&
        Objects.equals(this.nestedChildrenCount, publicComment.nestedChildrenCount) &&
        Objects.equals(this.childCount, publicComment.childCount) &&
        Objects.equals(this.children, publicComment.children) &&
        Objects.equals(this.isFlagged, publicComment.isFlagged) &&
        Objects.equals(this.isBlocked, publicComment.isBlocked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, pageTitle, commentHTML, urlIdRaw, userId, anonUserId, commenterEmail, commenterName, commenterLink, parentId, date, localDateString, localDateHours, votes, votesUp, votesDown, expireAt, verified, verifiedDate, verificationId, notificationSentForParent, notificationSentForParentTenant, reviewed, imported, externalId, externalParentId, avatarSrc, isSpam, aiDeterminedSpam, hasImages, pageNumber, pageNumberOF, pageNumberNF, hasCode, locale, isDeleted, isDeletedUser, isBannedUser, isByAdmin, isByModerator, isPinned, isLocked, flagCount, rating, displayLabel, fromProductId, meta, ipHash, mentions, hashTags, badges, domain, veteranBadgeProcessed, moderationGroupIds, didProcessBadges, fromOfflineRestore, autoplayJobId, autoplayDelayMS, feedbackIds, groupIds, viewCount, isUnread, myVoteId, isVotedDown, isVotedUp, hasChildren, nestedChildrenCount, childCount, children, isFlagged, isBlocked);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublicComment {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    pageTitle: ").append(toIndentedString(pageTitle)).append("\n");
    sb.append("    commentHTML: ").append(toIndentedString(commentHTML)).append("\n");
    sb.append("    urlIdRaw: ").append(toIndentedString(urlIdRaw)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    anonUserId: ").append(toIndentedString(anonUserId)).append("\n");
    sb.append("    commenterEmail: ").append(toIndentedString(commenterEmail)).append("\n");
    sb.append("    commenterName: ").append(toIndentedString(commenterName)).append("\n");
    sb.append("    commenterLink: ").append(toIndentedString(commenterLink)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    localDateString: ").append(toIndentedString(localDateString)).append("\n");
    sb.append("    localDateHours: ").append(toIndentedString(localDateHours)).append("\n");
    sb.append("    votes: ").append(toIndentedString(votes)).append("\n");
    sb.append("    votesUp: ").append(toIndentedString(votesUp)).append("\n");
    sb.append("    votesDown: ").append(toIndentedString(votesDown)).append("\n");
    sb.append("    expireAt: ").append(toIndentedString(expireAt)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("    verifiedDate: ").append(toIndentedString(verifiedDate)).append("\n");
    sb.append("    verificationId: ").append(toIndentedString(verificationId)).append("\n");
    sb.append("    notificationSentForParent: ").append(toIndentedString(notificationSentForParent)).append("\n");
    sb.append("    notificationSentForParentTenant: ").append(toIndentedString(notificationSentForParentTenant)).append("\n");
    sb.append("    reviewed: ").append(toIndentedString(reviewed)).append("\n");
    sb.append("    imported: ").append(toIndentedString(imported)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    externalParentId: ").append(toIndentedString(externalParentId)).append("\n");
    sb.append("    avatarSrc: ").append(toIndentedString(avatarSrc)).append("\n");
    sb.append("    isSpam: ").append(toIndentedString(isSpam)).append("\n");
    sb.append("    aiDeterminedSpam: ").append(toIndentedString(aiDeterminedSpam)).append("\n");
    sb.append("    hasImages: ").append(toIndentedString(hasImages)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageNumberOF: ").append(toIndentedString(pageNumberOF)).append("\n");
    sb.append("    pageNumberNF: ").append(toIndentedString(pageNumberNF)).append("\n");
    sb.append("    hasCode: ").append(toIndentedString(hasCode)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    isDeletedUser: ").append(toIndentedString(isDeletedUser)).append("\n");
    sb.append("    isBannedUser: ").append(toIndentedString(isBannedUser)).append("\n");
    sb.append("    isByAdmin: ").append(toIndentedString(isByAdmin)).append("\n");
    sb.append("    isByModerator: ").append(toIndentedString(isByModerator)).append("\n");
    sb.append("    isPinned: ").append(toIndentedString(isPinned)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("    flagCount: ").append(toIndentedString(flagCount)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    displayLabel: ").append(toIndentedString(displayLabel)).append("\n");
    sb.append("    fromProductId: ").append(toIndentedString(fromProductId)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    ipHash: ").append(toIndentedString(ipHash)).append("\n");
    sb.append("    mentions: ").append(toIndentedString(mentions)).append("\n");
    sb.append("    hashTags: ").append(toIndentedString(hashTags)).append("\n");
    sb.append("    badges: ").append(toIndentedString(badges)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    veteranBadgeProcessed: ").append(toIndentedString(veteranBadgeProcessed)).append("\n");
    sb.append("    moderationGroupIds: ").append(toIndentedString(moderationGroupIds)).append("\n");
    sb.append("    didProcessBadges: ").append(toIndentedString(didProcessBadges)).append("\n");
    sb.append("    fromOfflineRestore: ").append(toIndentedString(fromOfflineRestore)).append("\n");
    sb.append("    autoplayJobId: ").append(toIndentedString(autoplayJobId)).append("\n");
    sb.append("    autoplayDelayMS: ").append(toIndentedString(autoplayDelayMS)).append("\n");
    sb.append("    feedbackIds: ").append(toIndentedString(feedbackIds)).append("\n");
    sb.append("    groupIds: ").append(toIndentedString(groupIds)).append("\n");
    sb.append("    viewCount: ").append(toIndentedString(viewCount)).append("\n");
    sb.append("    isUnread: ").append(toIndentedString(isUnread)).append("\n");
    sb.append("    myVoteId: ").append(toIndentedString(myVoteId)).append("\n");
    sb.append("    isVotedDown: ").append(toIndentedString(isVotedDown)).append("\n");
    sb.append("    isVotedUp: ").append(toIndentedString(isVotedUp)).append("\n");
    sb.append("    hasChildren: ").append(toIndentedString(hasChildren)).append("\n");
    sb.append("    nestedChildrenCount: ").append(toIndentedString(nestedChildrenCount)).append("\n");
    sb.append("    childCount: ").append(toIndentedString(childCount)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    isFlagged: ").append(toIndentedString(isFlagged)).append("\n");
    sb.append("    isBlocked: ").append(toIndentedString(isBlocked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_id");
    openapiFields.add("url");
    openapiFields.add("pageTitle");
    openapiFields.add("commentHTML");
    openapiFields.add("urlIdRaw");
    openapiFields.add("userId");
    openapiFields.add("anonUserId");
    openapiFields.add("commenterEmail");
    openapiFields.add("commenterName");
    openapiFields.add("commenterLink");
    openapiFields.add("parentId");
    openapiFields.add("date");
    openapiFields.add("localDateString");
    openapiFields.add("localDateHours");
    openapiFields.add("votes");
    openapiFields.add("votesUp");
    openapiFields.add("votesDown");
    openapiFields.add("expireAt");
    openapiFields.add("verified");
    openapiFields.add("verifiedDate");
    openapiFields.add("verificationId");
    openapiFields.add("notificationSentForParent");
    openapiFields.add("notificationSentForParentTenant");
    openapiFields.add("reviewed");
    openapiFields.add("imported");
    openapiFields.add("externalId");
    openapiFields.add("externalParentId");
    openapiFields.add("avatarSrc");
    openapiFields.add("isSpam");
    openapiFields.add("aiDeterminedSpam");
    openapiFields.add("hasImages");
    openapiFields.add("pageNumber");
    openapiFields.add("pageNumberOF");
    openapiFields.add("pageNumberNF");
    openapiFields.add("hasCode");
    openapiFields.add("locale");
    openapiFields.add("isDeleted");
    openapiFields.add("isDeletedUser");
    openapiFields.add("isBannedUser");
    openapiFields.add("isByAdmin");
    openapiFields.add("isByModerator");
    openapiFields.add("isPinned");
    openapiFields.add("isLocked");
    openapiFields.add("flagCount");
    openapiFields.add("rating");
    openapiFields.add("displayLabel");
    openapiFields.add("fromProductId");
    openapiFields.add("meta");
    openapiFields.add("ipHash");
    openapiFields.add("mentions");
    openapiFields.add("hashTags");
    openapiFields.add("badges");
    openapiFields.add("domain");
    openapiFields.add("veteranBadgeProcessed");
    openapiFields.add("moderationGroupIds");
    openapiFields.add("didProcessBadges");
    openapiFields.add("fromOfflineRestore");
    openapiFields.add("autoplayJobId");
    openapiFields.add("autoplayDelayMS");
    openapiFields.add("feedbackIds");
    openapiFields.add("groupIds");
    openapiFields.add("viewCount");
    openapiFields.add("isUnread");
    openapiFields.add("myVoteId");
    openapiFields.add("isVotedDown");
    openapiFields.add("isVotedUp");
    openapiFields.add("hasChildren");
    openapiFields.add("nestedChildrenCount");
    openapiFields.add("childCount");
    openapiFields.add("children");
    openapiFields.add("isFlagged");
    openapiFields.add("isBlocked");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("_id");
    openapiRequiredFields.add("url");
    openapiRequiredFields.add("commentHTML");
    openapiRequiredFields.add("commenterName");
    openapiRequiredFields.add("date");
    openapiRequiredFields.add("votes");
    openapiRequiredFields.add("votesUp");
    openapiRequiredFields.add("votesDown");
    openapiRequiredFields.add("verified");
    openapiRequiredFields.add("locale");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PublicComment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PublicComment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PublicComment is not found in the empty JSON string", PublicComment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PublicComment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PublicComment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PublicComment.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_id").toString()));
      }
      if (!jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("pageTitle") != null && !jsonObj.get("pageTitle").isJsonNull()) && !jsonObj.get("pageTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageTitle").toString()));
      }
      if (!jsonObj.get("commentHTML").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commentHTML` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commentHTML").toString()));
      }
      if ((jsonObj.get("urlIdRaw") != null && !jsonObj.get("urlIdRaw").isJsonNull()) && !jsonObj.get("urlIdRaw").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlIdRaw` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urlIdRaw").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("anonUserId") != null && !jsonObj.get("anonUserId").isJsonNull()) && !jsonObj.get("anonUserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `anonUserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("anonUserId").toString()));
      }
      if ((jsonObj.get("commenterEmail") != null && !jsonObj.get("commenterEmail").isJsonNull()) && !jsonObj.get("commenterEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commenterEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commenterEmail").toString()));
      }
      if (!jsonObj.get("commenterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commenterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commenterName").toString()));
      }
      if ((jsonObj.get("commenterLink") != null && !jsonObj.get("commenterLink").isJsonNull()) && !jsonObj.get("commenterLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commenterLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commenterLink").toString()));
      }
      if ((jsonObj.get("parentId") != null && !jsonObj.get("parentId").isJsonNull()) && !jsonObj.get("parentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentId").toString()));
      }
      if ((jsonObj.get("localDateString") != null && !jsonObj.get("localDateString").isJsonNull()) && !jsonObj.get("localDateString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localDateString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localDateString").toString()));
      }
      if ((jsonObj.get("verificationId") != null && !jsonObj.get("verificationId").isJsonNull()) && !jsonObj.get("verificationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verificationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verificationId").toString()));
      }
      if ((jsonObj.get("externalId") != null && !jsonObj.get("externalId").isJsonNull()) && !jsonObj.get("externalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalId").toString()));
      }
      if ((jsonObj.get("externalParentId") != null && !jsonObj.get("externalParentId").isJsonNull()) && !jsonObj.get("externalParentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalParentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalParentId").toString()));
      }
      if ((jsonObj.get("avatarSrc") != null && !jsonObj.get("avatarSrc").isJsonNull()) && !jsonObj.get("avatarSrc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatarSrc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatarSrc").toString()));
      }
      if (!jsonObj.get("locale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locale").toString()));
      }
      if ((jsonObj.get("displayLabel") != null && !jsonObj.get("displayLabel").isJsonNull()) && !jsonObj.get("displayLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayLabel").toString()));
      }
      if ((jsonObj.get("ipHash") != null && !jsonObj.get("ipHash").isJsonNull()) && !jsonObj.get("ipHash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ipHash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ipHash").toString()));
      }
      if (jsonObj.get("mentions") != null && !jsonObj.get("mentions").isJsonNull()) {
        JsonArray jsonArraymentions = jsonObj.getAsJsonArray("mentions");
        if (jsonArraymentions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("mentions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `mentions` to be an array in the JSON string but got `%s`", jsonObj.get("mentions").toString()));
          }

          // validate the optional field `mentions` (array)
          for (int i = 0; i < jsonArraymentions.size(); i++) {
            CommentUserMentionInfo.validateJsonElement(jsonArraymentions.get(i));
          };
        }
      }
      if (jsonObj.get("hashTags") != null && !jsonObj.get("hashTags").isJsonNull()) {
        JsonArray jsonArrayhashTags = jsonObj.getAsJsonArray("hashTags");
        if (jsonArrayhashTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("hashTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `hashTags` to be an array in the JSON string but got `%s`", jsonObj.get("hashTags").toString()));
          }

          // validate the optional field `hashTags` (array)
          for (int i = 0; i < jsonArrayhashTags.size(); i++) {
            CommentUserHashTagInfo.validateJsonElement(jsonArrayhashTags.get(i));
          };
        }
      }
      if (jsonObj.get("badges") != null && !jsonObj.get("badges").isJsonNull()) {
        JsonArray jsonArraybadges = jsonObj.getAsJsonArray("badges");
        if (jsonArraybadges != null) {
          // ensure the json data is an array
          if (!jsonObj.get("badges").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `badges` to be an array in the JSON string but got `%s`", jsonObj.get("badges").toString()));
          }

          // validate the optional field `badges` (array)
          for (int i = 0; i < jsonArraybadges.size(); i++) {
            CommentUserBadgeInfo.validateJsonElement(jsonArraybadges.get(i));
          };
        }
      }
      if ((jsonObj.get("domain") != null && !jsonObj.get("domain").isJsonNull()) && !jsonObj.get("domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain").toString()));
      }
      if ((jsonObj.get("veteranBadgeProcessed") != null && !jsonObj.get("veteranBadgeProcessed").isJsonNull()) && !jsonObj.get("veteranBadgeProcessed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `veteranBadgeProcessed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("veteranBadgeProcessed").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("moderationGroupIds") != null && !jsonObj.get("moderationGroupIds").isJsonNull() && !jsonObj.get("moderationGroupIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `moderationGroupIds` to be an array in the JSON string but got `%s`", jsonObj.get("moderationGroupIds").toString()));
      }
      if ((jsonObj.get("autoplayJobId") != null && !jsonObj.get("autoplayJobId").isJsonNull()) && !jsonObj.get("autoplayJobId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `autoplayJobId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("autoplayJobId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("feedbackIds") != null && !jsonObj.get("feedbackIds").isJsonNull() && !jsonObj.get("feedbackIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `feedbackIds` to be an array in the JSON string but got `%s`", jsonObj.get("feedbackIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("groupIds") != null && !jsonObj.get("groupIds").isJsonNull() && !jsonObj.get("groupIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `groupIds` to be an array in the JSON string but got `%s`", jsonObj.get("groupIds").toString()));
      }
      if ((jsonObj.get("myVoteId") != null && !jsonObj.get("myVoteId").isJsonNull()) && !jsonObj.get("myVoteId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `myVoteId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("myVoteId").toString()));
      }
      if (jsonObj.get("children") != null && !jsonObj.get("children").isJsonNull()) {
        JsonArray jsonArraychildren = jsonObj.getAsJsonArray("children");
        if (jsonArraychildren != null) {
          // ensure the json data is an array
          if (!jsonObj.get("children").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `children` to be an array in the JSON string but got `%s`", jsonObj.get("children").toString()));
          }

          // validate the optional field `children` (array)
          for (int i = 0; i < jsonArraychildren.size(); i++) {
            PublicComment.validateJsonElement(jsonArraychildren.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PublicComment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PublicComment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PublicComment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PublicComment.class));

       return (TypeAdapter<T>) new TypeAdapter<PublicComment>() {
           @Override
           public void write(JsonWriter out, PublicComment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PublicComment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PublicComment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PublicComment
   * @throws IOException if the JSON string is invalid with respect to PublicComment
   */
  public static PublicComment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PublicComment.class);
  }

  /**
   * Convert an instance of PublicComment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


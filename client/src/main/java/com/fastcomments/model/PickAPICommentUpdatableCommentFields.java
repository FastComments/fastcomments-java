/*
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fastcomments.model;

import java.util.Objects;
import com.fastcomments.model.PickFCommentAPICommentFieldsKeysMeta;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.fastcomments.invoker.JSON;

/**
 * From T, pick a set of properties whose keys are in the union K
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-25T10:12:49.770182242-07:00[America/Los_Angeles]", comments = "Generator version: 7.11.0")
public class PickAPICommentUpdatableCommentFields {
  public static final String SERIALIZED_NAME_URL_ID = "urlId";
  @SerializedName(SERIALIZED_NAME_URL_ID)
  @javax.annotation.Nonnull
  private String urlId;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  @javax.annotation.Nonnull
  private String url;

  public static final String SERIALIZED_NAME_PAGE_TITLE = "pageTitle";
  @SerializedName(SERIALIZED_NAME_PAGE_TITLE)
  @javax.annotation.Nullable
  private String pageTitle;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  @javax.annotation.Nonnull
  private OffsetDateTime date;

  public static final String SERIALIZED_NAME_URL_ID_RAW = "urlIdRaw";
  @SerializedName(SERIALIZED_NAME_URL_ID_RAW)
  @javax.annotation.Nullable
  private String urlIdRaw;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private String userId;

  public static final String SERIALIZED_NAME_COMMENTER_EMAIL = "commenterEmail";
  @SerializedName(SERIALIZED_NAME_COMMENTER_EMAIL)
  @javax.annotation.Nullable
  private String commenterEmail;

  public static final String SERIALIZED_NAME_COMMENTER_NAME = "commenterName";
  @SerializedName(SERIALIZED_NAME_COMMENTER_NAME)
  @javax.annotation.Nonnull
  private String commenterName;

  public static final String SERIALIZED_NAME_COMMENTER_LINK = "commenterLink";
  @SerializedName(SERIALIZED_NAME_COMMENTER_LINK)
  @javax.annotation.Nullable
  private String commenterLink;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  @javax.annotation.Nonnull
  private String comment;

  public static final String SERIALIZED_NAME_COMMENT_H_T_M_L = "commentHTML";
  @SerializedName(SERIALIZED_NAME_COMMENT_H_T_M_L)
  @javax.annotation.Nonnull
  private String commentHTML;

  public static final String SERIALIZED_NAME_PARENT_ID = "parentId";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  @javax.annotation.Nullable
  private String parentId;

  public static final String SERIALIZED_NAME_LOCAL_DATE_STRING = "localDateString";
  @SerializedName(SERIALIZED_NAME_LOCAL_DATE_STRING)
  @javax.annotation.Nullable
  private String localDateString;

  public static final String SERIALIZED_NAME_LOCAL_DATE_HOURS = "localDateHours";
  @SerializedName(SERIALIZED_NAME_LOCAL_DATE_HOURS)
  @javax.annotation.Nullable
  private Integer localDateHours;

  public static final String SERIALIZED_NAME_VOTES = "votes";
  @SerializedName(SERIALIZED_NAME_VOTES)
  @javax.annotation.Nullable
  private Integer votes;

  public static final String SERIALIZED_NAME_VOTES_UP = "votesUp";
  @SerializedName(SERIALIZED_NAME_VOTES_UP)
  @javax.annotation.Nullable
  private Integer votesUp;

  public static final String SERIALIZED_NAME_VOTES_DOWN = "votesDown";
  @SerializedName(SERIALIZED_NAME_VOTES_DOWN)
  @javax.annotation.Nullable
  private Integer votesDown;

  public static final String SERIALIZED_NAME_EXPIRE_AT = "expireAt";
  @SerializedName(SERIALIZED_NAME_EXPIRE_AT)
  @javax.annotation.Nullable
  private OffsetDateTime expireAt;

  public static final String SERIALIZED_NAME_VERIFIED = "verified";
  @SerializedName(SERIALIZED_NAME_VERIFIED)
  @javax.annotation.Nonnull
  private Boolean verified;

  public static final String SERIALIZED_NAME_VERIFIED_DATE = "verifiedDate";
  @SerializedName(SERIALIZED_NAME_VERIFIED_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime verifiedDate;

  public static final String SERIALIZED_NAME_NOTIFICATION_SENT_FOR_PARENT = "notificationSentForParent";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_SENT_FOR_PARENT)
  @javax.annotation.Nullable
  private Boolean notificationSentForParent;

  public static final String SERIALIZED_NAME_NOTIFICATION_SENT_FOR_PARENT_TENANT = "notificationSentForParentTenant";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_SENT_FOR_PARENT_TENANT)
  @javax.annotation.Nullable
  private Boolean notificationSentForParentTenant;

  public static final String SERIALIZED_NAME_REVIEWED = "reviewed";
  @SerializedName(SERIALIZED_NAME_REVIEWED)
  @javax.annotation.Nullable
  private Boolean reviewed;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "externalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  @javax.annotation.Nullable
  private String externalId;

  public static final String SERIALIZED_NAME_EXTERNAL_PARENT_ID = "externalParentId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_PARENT_ID)
  @javax.annotation.Nullable
  private String externalParentId;

  public static final String SERIALIZED_NAME_AVATAR_SRC = "avatarSrc";
  @SerializedName(SERIALIZED_NAME_AVATAR_SRC)
  @javax.annotation.Nullable
  private String avatarSrc;

  public static final String SERIALIZED_NAME_IS_SPAM = "isSpam";
  @SerializedName(SERIALIZED_NAME_IS_SPAM)
  @javax.annotation.Nullable
  private Boolean isSpam;

  public static final String SERIALIZED_NAME_APPROVED = "approved";
  @SerializedName(SERIALIZED_NAME_APPROVED)
  @javax.annotation.Nonnull
  private Boolean approved;

  public static final String SERIALIZED_NAME_IS_DELETED = "isDeleted";
  @SerializedName(SERIALIZED_NAME_IS_DELETED)
  @javax.annotation.Nullable
  private Boolean isDeleted;

  public static final String SERIALIZED_NAME_IS_DELETED_USER = "isDeletedUser";
  @SerializedName(SERIALIZED_NAME_IS_DELETED_USER)
  @javax.annotation.Nullable
  private Boolean isDeletedUser;

  public static final String SERIALIZED_NAME_IS_BY_ADMIN = "isByAdmin";
  @SerializedName(SERIALIZED_NAME_IS_BY_ADMIN)
  @javax.annotation.Nullable
  private Boolean isByAdmin;

  public static final String SERIALIZED_NAME_IS_BY_MODERATOR = "isByModerator";
  @SerializedName(SERIALIZED_NAME_IS_BY_MODERATOR)
  @javax.annotation.Nullable
  private Boolean isByModerator;

  public static final String SERIALIZED_NAME_IS_PINNED = "isPinned";
  @SerializedName(SERIALIZED_NAME_IS_PINNED)
  @javax.annotation.Nullable
  private Boolean isPinned;

  public static final String SERIALIZED_NAME_IS_LOCKED = "isLocked";
  @SerializedName(SERIALIZED_NAME_IS_LOCKED)
  @javax.annotation.Nullable
  private Boolean isLocked;

  public static final String SERIALIZED_NAME_FLAG_COUNT = "flagCount";
  @SerializedName(SERIALIZED_NAME_FLAG_COUNT)
  @javax.annotation.Nullable
  private Integer flagCount;

  public static final String SERIALIZED_NAME_DISPLAY_LABEL = "displayLabel";
  @SerializedName(SERIALIZED_NAME_DISPLAY_LABEL)
  @javax.annotation.Nullable
  private String displayLabel;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  @javax.annotation.Nullable
  private PickFCommentAPICommentFieldsKeysMeta meta;

  public static final String SERIALIZED_NAME_MODERATION_GROUP_IDS = "moderationGroupIds";
  @SerializedName(SERIALIZED_NAME_MODERATION_GROUP_IDS)
  @javax.annotation.Nullable
  private List<String> moderationGroupIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_FEEDBACK_IDS = "feedbackIds";
  @SerializedName(SERIALIZED_NAME_FEEDBACK_IDS)
  @javax.annotation.Nullable
  private List<String> feedbackIds = new ArrayList<>();

  public PickAPICommentUpdatableCommentFields() {
  }

  public PickAPICommentUpdatableCommentFields urlId(@javax.annotation.Nonnull String urlId) {
    this.urlId = urlId;
    return this;
  }

  /**
   * Get urlId
   * @return urlId
   */
  @javax.annotation.Nonnull
  public String getUrlId() {
    return urlId;
  }

  public void setUrlId(@javax.annotation.Nonnull String urlId) {
    this.urlId = urlId;
  }


  public PickAPICommentUpdatableCommentFields url(@javax.annotation.Nonnull String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nonnull
  public String getUrl() {
    return url;
  }

  public void setUrl(@javax.annotation.Nonnull String url) {
    this.url = url;
  }


  public PickAPICommentUpdatableCommentFields pageTitle(@javax.annotation.Nullable String pageTitle) {
    this.pageTitle = pageTitle;
    return this;
  }

  /**
   * Get pageTitle
   * @return pageTitle
   */
  @javax.annotation.Nullable
  public String getPageTitle() {
    return pageTitle;
  }

  public void setPageTitle(@javax.annotation.Nullable String pageTitle) {
    this.pageTitle = pageTitle;
  }


  public PickAPICommentUpdatableCommentFields date(@javax.annotation.Nonnull OffsetDateTime date) {
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(@javax.annotation.Nonnull OffsetDateTime date) {
    this.date = date;
  }


  public PickAPICommentUpdatableCommentFields urlIdRaw(@javax.annotation.Nullable String urlIdRaw) {
    this.urlIdRaw = urlIdRaw;
    return this;
  }

  /**
   * Get urlIdRaw
   * @return urlIdRaw
   */
  @javax.annotation.Nullable
  public String getUrlIdRaw() {
    return urlIdRaw;
  }

  public void setUrlIdRaw(@javax.annotation.Nullable String urlIdRaw) {
    this.urlIdRaw = urlIdRaw;
  }


  public PickAPICommentUpdatableCommentFields userId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
  }


  public PickAPICommentUpdatableCommentFields commenterEmail(@javax.annotation.Nullable String commenterEmail) {
    this.commenterEmail = commenterEmail;
    return this;
  }

  /**
   * Get commenterEmail
   * @return commenterEmail
   */
  @javax.annotation.Nullable
  public String getCommenterEmail() {
    return commenterEmail;
  }

  public void setCommenterEmail(@javax.annotation.Nullable String commenterEmail) {
    this.commenterEmail = commenterEmail;
  }


  public PickAPICommentUpdatableCommentFields commenterName(@javax.annotation.Nonnull String commenterName) {
    this.commenterName = commenterName;
    return this;
  }

  /**
   * Get commenterName
   * @return commenterName
   */
  @javax.annotation.Nonnull
  public String getCommenterName() {
    return commenterName;
  }

  public void setCommenterName(@javax.annotation.Nonnull String commenterName) {
    this.commenterName = commenterName;
  }


  public PickAPICommentUpdatableCommentFields commenterLink(@javax.annotation.Nullable String commenterLink) {
    this.commenterLink = commenterLink;
    return this;
  }

  /**
   * Get commenterLink
   * @return commenterLink
   */
  @javax.annotation.Nullable
  public String getCommenterLink() {
    return commenterLink;
  }

  public void setCommenterLink(@javax.annotation.Nullable String commenterLink) {
    this.commenterLink = commenterLink;
  }


  public PickAPICommentUpdatableCommentFields comment(@javax.annotation.Nonnull String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nonnull
  public String getComment() {
    return comment;
  }

  public void setComment(@javax.annotation.Nonnull String comment) {
    this.comment = comment;
  }


  public PickAPICommentUpdatableCommentFields commentHTML(@javax.annotation.Nonnull String commentHTML) {
    this.commentHTML = commentHTML;
    return this;
  }

  /**
   * Get commentHTML
   * @return commentHTML
   */
  @javax.annotation.Nonnull
  public String getCommentHTML() {
    return commentHTML;
  }

  public void setCommentHTML(@javax.annotation.Nonnull String commentHTML) {
    this.commentHTML = commentHTML;
  }


  public PickAPICommentUpdatableCommentFields parentId(@javax.annotation.Nullable String parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * Get parentId
   * @return parentId
   */
  @javax.annotation.Nullable
  public String getParentId() {
    return parentId;
  }

  public void setParentId(@javax.annotation.Nullable String parentId) {
    this.parentId = parentId;
  }


  public PickAPICommentUpdatableCommentFields localDateString(@javax.annotation.Nullable String localDateString) {
    this.localDateString = localDateString;
    return this;
  }

  /**
   * Get localDateString
   * @return localDateString
   */
  @javax.annotation.Nullable
  public String getLocalDateString() {
    return localDateString;
  }

  public void setLocalDateString(@javax.annotation.Nullable String localDateString) {
    this.localDateString = localDateString;
  }


  public PickAPICommentUpdatableCommentFields localDateHours(@javax.annotation.Nullable Integer localDateHours) {
    this.localDateHours = localDateHours;
    return this;
  }

  /**
   * Get localDateHours
   * @return localDateHours
   */
  @javax.annotation.Nullable
  public Integer getLocalDateHours() {
    return localDateHours;
  }

  public void setLocalDateHours(@javax.annotation.Nullable Integer localDateHours) {
    this.localDateHours = localDateHours;
  }


  public PickAPICommentUpdatableCommentFields votes(@javax.annotation.Nullable Integer votes) {
    this.votes = votes;
    return this;
  }

  /**
   * Get votes
   * @return votes
   */
  @javax.annotation.Nullable
  public Integer getVotes() {
    return votes;
  }

  public void setVotes(@javax.annotation.Nullable Integer votes) {
    this.votes = votes;
  }


  public PickAPICommentUpdatableCommentFields votesUp(@javax.annotation.Nullable Integer votesUp) {
    this.votesUp = votesUp;
    return this;
  }

  /**
   * Get votesUp
   * @return votesUp
   */
  @javax.annotation.Nullable
  public Integer getVotesUp() {
    return votesUp;
  }

  public void setVotesUp(@javax.annotation.Nullable Integer votesUp) {
    this.votesUp = votesUp;
  }


  public PickAPICommentUpdatableCommentFields votesDown(@javax.annotation.Nullable Integer votesDown) {
    this.votesDown = votesDown;
    return this;
  }

  /**
   * Get votesDown
   * @return votesDown
   */
  @javax.annotation.Nullable
  public Integer getVotesDown() {
    return votesDown;
  }

  public void setVotesDown(@javax.annotation.Nullable Integer votesDown) {
    this.votesDown = votesDown;
  }


  public PickAPICommentUpdatableCommentFields expireAt(@javax.annotation.Nullable OffsetDateTime expireAt) {
    this.expireAt = expireAt;
    return this;
  }

  /**
   * Get expireAt
   * @return expireAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpireAt() {
    return expireAt;
  }

  public void setExpireAt(@javax.annotation.Nullable OffsetDateTime expireAt) {
    this.expireAt = expireAt;
  }


  public PickAPICommentUpdatableCommentFields verified(@javax.annotation.Nonnull Boolean verified) {
    this.verified = verified;
    return this;
  }

  /**
   * Get verified
   * @return verified
   */
  @javax.annotation.Nonnull
  public Boolean getVerified() {
    return verified;
  }

  public void setVerified(@javax.annotation.Nonnull Boolean verified) {
    this.verified = verified;
  }


  public PickAPICommentUpdatableCommentFields verifiedDate(@javax.annotation.Nullable OffsetDateTime verifiedDate) {
    this.verifiedDate = verifiedDate;
    return this;
  }

  /**
   * Get verifiedDate
   * @return verifiedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getVerifiedDate() {
    return verifiedDate;
  }

  public void setVerifiedDate(@javax.annotation.Nullable OffsetDateTime verifiedDate) {
    this.verifiedDate = verifiedDate;
  }


  public PickAPICommentUpdatableCommentFields notificationSentForParent(@javax.annotation.Nullable Boolean notificationSentForParent) {
    this.notificationSentForParent = notificationSentForParent;
    return this;
  }

  /**
   * Get notificationSentForParent
   * @return notificationSentForParent
   */
  @javax.annotation.Nullable
  public Boolean getNotificationSentForParent() {
    return notificationSentForParent;
  }

  public void setNotificationSentForParent(@javax.annotation.Nullable Boolean notificationSentForParent) {
    this.notificationSentForParent = notificationSentForParent;
  }


  public PickAPICommentUpdatableCommentFields notificationSentForParentTenant(@javax.annotation.Nullable Boolean notificationSentForParentTenant) {
    this.notificationSentForParentTenant = notificationSentForParentTenant;
    return this;
  }

  /**
   * Get notificationSentForParentTenant
   * @return notificationSentForParentTenant
   */
  @javax.annotation.Nullable
  public Boolean getNotificationSentForParentTenant() {
    return notificationSentForParentTenant;
  }

  public void setNotificationSentForParentTenant(@javax.annotation.Nullable Boolean notificationSentForParentTenant) {
    this.notificationSentForParentTenant = notificationSentForParentTenant;
  }


  public PickAPICommentUpdatableCommentFields reviewed(@javax.annotation.Nullable Boolean reviewed) {
    this.reviewed = reviewed;
    return this;
  }

  /**
   * Get reviewed
   * @return reviewed
   */
  @javax.annotation.Nullable
  public Boolean getReviewed() {
    return reviewed;
  }

  public void setReviewed(@javax.annotation.Nullable Boolean reviewed) {
    this.reviewed = reviewed;
  }


  public PickAPICommentUpdatableCommentFields externalId(@javax.annotation.Nullable String externalId) {
    this.externalId = externalId;
    return this;
  }

  /**
   * Get externalId
   * @return externalId
   */
  @javax.annotation.Nullable
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(@javax.annotation.Nullable String externalId) {
    this.externalId = externalId;
  }


  public PickAPICommentUpdatableCommentFields externalParentId(@javax.annotation.Nullable String externalParentId) {
    this.externalParentId = externalParentId;
    return this;
  }

  /**
   * Get externalParentId
   * @return externalParentId
   */
  @javax.annotation.Nullable
  public String getExternalParentId() {
    return externalParentId;
  }

  public void setExternalParentId(@javax.annotation.Nullable String externalParentId) {
    this.externalParentId = externalParentId;
  }


  public PickAPICommentUpdatableCommentFields avatarSrc(@javax.annotation.Nullable String avatarSrc) {
    this.avatarSrc = avatarSrc;
    return this;
  }

  /**
   * Get avatarSrc
   * @return avatarSrc
   */
  @javax.annotation.Nullable
  public String getAvatarSrc() {
    return avatarSrc;
  }

  public void setAvatarSrc(@javax.annotation.Nullable String avatarSrc) {
    this.avatarSrc = avatarSrc;
  }


  public PickAPICommentUpdatableCommentFields isSpam(@javax.annotation.Nullable Boolean isSpam) {
    this.isSpam = isSpam;
    return this;
  }

  /**
   * Get isSpam
   * @return isSpam
   */
  @javax.annotation.Nullable
  public Boolean getIsSpam() {
    return isSpam;
  }

  public void setIsSpam(@javax.annotation.Nullable Boolean isSpam) {
    this.isSpam = isSpam;
  }


  public PickAPICommentUpdatableCommentFields approved(@javax.annotation.Nonnull Boolean approved) {
    this.approved = approved;
    return this;
  }

  /**
   * Get approved
   * @return approved
   */
  @javax.annotation.Nonnull
  public Boolean getApproved() {
    return approved;
  }

  public void setApproved(@javax.annotation.Nonnull Boolean approved) {
    this.approved = approved;
  }


  public PickAPICommentUpdatableCommentFields isDeleted(@javax.annotation.Nullable Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Get isDeleted
   * @return isDeleted
   */
  @javax.annotation.Nullable
  public Boolean getIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(@javax.annotation.Nullable Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public PickAPICommentUpdatableCommentFields isDeletedUser(@javax.annotation.Nullable Boolean isDeletedUser) {
    this.isDeletedUser = isDeletedUser;
    return this;
  }

  /**
   * Get isDeletedUser
   * @return isDeletedUser
   */
  @javax.annotation.Nullable
  public Boolean getIsDeletedUser() {
    return isDeletedUser;
  }

  public void setIsDeletedUser(@javax.annotation.Nullable Boolean isDeletedUser) {
    this.isDeletedUser = isDeletedUser;
  }


  public PickAPICommentUpdatableCommentFields isByAdmin(@javax.annotation.Nullable Boolean isByAdmin) {
    this.isByAdmin = isByAdmin;
    return this;
  }

  /**
   * Get isByAdmin
   * @return isByAdmin
   */
  @javax.annotation.Nullable
  public Boolean getIsByAdmin() {
    return isByAdmin;
  }

  public void setIsByAdmin(@javax.annotation.Nullable Boolean isByAdmin) {
    this.isByAdmin = isByAdmin;
  }


  public PickAPICommentUpdatableCommentFields isByModerator(@javax.annotation.Nullable Boolean isByModerator) {
    this.isByModerator = isByModerator;
    return this;
  }

  /**
   * Get isByModerator
   * @return isByModerator
   */
  @javax.annotation.Nullable
  public Boolean getIsByModerator() {
    return isByModerator;
  }

  public void setIsByModerator(@javax.annotation.Nullable Boolean isByModerator) {
    this.isByModerator = isByModerator;
  }


  public PickAPICommentUpdatableCommentFields isPinned(@javax.annotation.Nullable Boolean isPinned) {
    this.isPinned = isPinned;
    return this;
  }

  /**
   * Get isPinned
   * @return isPinned
   */
  @javax.annotation.Nullable
  public Boolean getIsPinned() {
    return isPinned;
  }

  public void setIsPinned(@javax.annotation.Nullable Boolean isPinned) {
    this.isPinned = isPinned;
  }


  public PickAPICommentUpdatableCommentFields isLocked(@javax.annotation.Nullable Boolean isLocked) {
    this.isLocked = isLocked;
    return this;
  }

  /**
   * Get isLocked
   * @return isLocked
   */
  @javax.annotation.Nullable
  public Boolean getIsLocked() {
    return isLocked;
  }

  public void setIsLocked(@javax.annotation.Nullable Boolean isLocked) {
    this.isLocked = isLocked;
  }


  public PickAPICommentUpdatableCommentFields flagCount(@javax.annotation.Nullable Integer flagCount) {
    this.flagCount = flagCount;
    return this;
  }

  /**
   * Get flagCount
   * @return flagCount
   */
  @javax.annotation.Nullable
  public Integer getFlagCount() {
    return flagCount;
  }

  public void setFlagCount(@javax.annotation.Nullable Integer flagCount) {
    this.flagCount = flagCount;
  }


  public PickAPICommentUpdatableCommentFields displayLabel(@javax.annotation.Nullable String displayLabel) {
    this.displayLabel = displayLabel;
    return this;
  }

  /**
   * Get displayLabel
   * @return displayLabel
   */
  @javax.annotation.Nullable
  public String getDisplayLabel() {
    return displayLabel;
  }

  public void setDisplayLabel(@javax.annotation.Nullable String displayLabel) {
    this.displayLabel = displayLabel;
  }


  public PickAPICommentUpdatableCommentFields meta(@javax.annotation.Nullable PickFCommentAPICommentFieldsKeysMeta meta) {
    this.meta = meta;
    return this;
  }

  /**
   * Get meta
   * @return meta
   */
  @javax.annotation.Nullable
  public PickFCommentAPICommentFieldsKeysMeta getMeta() {
    return meta;
  }

  public void setMeta(@javax.annotation.Nullable PickFCommentAPICommentFieldsKeysMeta meta) {
    this.meta = meta;
  }


  public PickAPICommentUpdatableCommentFields moderationGroupIds(@javax.annotation.Nullable List<String> moderationGroupIds) {
    this.moderationGroupIds = moderationGroupIds;
    return this;
  }

  public PickAPICommentUpdatableCommentFields addModerationGroupIdsItem(String moderationGroupIdsItem) {
    if (this.moderationGroupIds == null) {
      this.moderationGroupIds = new ArrayList<>();
    }
    this.moderationGroupIds.add(moderationGroupIdsItem);
    return this;
  }

  /**
   * Get moderationGroupIds
   * @return moderationGroupIds
   */
  @javax.annotation.Nullable
  public List<String> getModerationGroupIds() {
    return moderationGroupIds;
  }

  public void setModerationGroupIds(@javax.annotation.Nullable List<String> moderationGroupIds) {
    this.moderationGroupIds = moderationGroupIds;
  }


  public PickAPICommentUpdatableCommentFields feedbackIds(@javax.annotation.Nullable List<String> feedbackIds) {
    this.feedbackIds = feedbackIds;
    return this;
  }

  public PickAPICommentUpdatableCommentFields addFeedbackIdsItem(String feedbackIdsItem) {
    if (this.feedbackIds == null) {
      this.feedbackIds = new ArrayList<>();
    }
    this.feedbackIds.add(feedbackIdsItem);
    return this;
  }

  /**
   * Get feedbackIds
   * @return feedbackIds
   */
  @javax.annotation.Nullable
  public List<String> getFeedbackIds() {
    return feedbackIds;
  }

  public void setFeedbackIds(@javax.annotation.Nullable List<String> feedbackIds) {
    this.feedbackIds = feedbackIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PickAPICommentUpdatableCommentFields pickAPICommentUpdatableCommentFields = (PickAPICommentUpdatableCommentFields) o;
    return Objects.equals(this.urlId, pickAPICommentUpdatableCommentFields.urlId) &&
        Objects.equals(this.url, pickAPICommentUpdatableCommentFields.url) &&
        Objects.equals(this.pageTitle, pickAPICommentUpdatableCommentFields.pageTitle) &&
        Objects.equals(this.date, pickAPICommentUpdatableCommentFields.date) &&
        Objects.equals(this.urlIdRaw, pickAPICommentUpdatableCommentFields.urlIdRaw) &&
        Objects.equals(this.userId, pickAPICommentUpdatableCommentFields.userId) &&
        Objects.equals(this.commenterEmail, pickAPICommentUpdatableCommentFields.commenterEmail) &&
        Objects.equals(this.commenterName, pickAPICommentUpdatableCommentFields.commenterName) &&
        Objects.equals(this.commenterLink, pickAPICommentUpdatableCommentFields.commenterLink) &&
        Objects.equals(this.comment, pickAPICommentUpdatableCommentFields.comment) &&
        Objects.equals(this.commentHTML, pickAPICommentUpdatableCommentFields.commentHTML) &&
        Objects.equals(this.parentId, pickAPICommentUpdatableCommentFields.parentId) &&
        Objects.equals(this.localDateString, pickAPICommentUpdatableCommentFields.localDateString) &&
        Objects.equals(this.localDateHours, pickAPICommentUpdatableCommentFields.localDateHours) &&
        Objects.equals(this.votes, pickAPICommentUpdatableCommentFields.votes) &&
        Objects.equals(this.votesUp, pickAPICommentUpdatableCommentFields.votesUp) &&
        Objects.equals(this.votesDown, pickAPICommentUpdatableCommentFields.votesDown) &&
        Objects.equals(this.expireAt, pickAPICommentUpdatableCommentFields.expireAt) &&
        Objects.equals(this.verified, pickAPICommentUpdatableCommentFields.verified) &&
        Objects.equals(this.verifiedDate, pickAPICommentUpdatableCommentFields.verifiedDate) &&
        Objects.equals(this.notificationSentForParent, pickAPICommentUpdatableCommentFields.notificationSentForParent) &&
        Objects.equals(this.notificationSentForParentTenant, pickAPICommentUpdatableCommentFields.notificationSentForParentTenant) &&
        Objects.equals(this.reviewed, pickAPICommentUpdatableCommentFields.reviewed) &&
        Objects.equals(this.externalId, pickAPICommentUpdatableCommentFields.externalId) &&
        Objects.equals(this.externalParentId, pickAPICommentUpdatableCommentFields.externalParentId) &&
        Objects.equals(this.avatarSrc, pickAPICommentUpdatableCommentFields.avatarSrc) &&
        Objects.equals(this.isSpam, pickAPICommentUpdatableCommentFields.isSpam) &&
        Objects.equals(this.approved, pickAPICommentUpdatableCommentFields.approved) &&
        Objects.equals(this.isDeleted, pickAPICommentUpdatableCommentFields.isDeleted) &&
        Objects.equals(this.isDeletedUser, pickAPICommentUpdatableCommentFields.isDeletedUser) &&
        Objects.equals(this.isByAdmin, pickAPICommentUpdatableCommentFields.isByAdmin) &&
        Objects.equals(this.isByModerator, pickAPICommentUpdatableCommentFields.isByModerator) &&
        Objects.equals(this.isPinned, pickAPICommentUpdatableCommentFields.isPinned) &&
        Objects.equals(this.isLocked, pickAPICommentUpdatableCommentFields.isLocked) &&
        Objects.equals(this.flagCount, pickAPICommentUpdatableCommentFields.flagCount) &&
        Objects.equals(this.displayLabel, pickAPICommentUpdatableCommentFields.displayLabel) &&
        Objects.equals(this.meta, pickAPICommentUpdatableCommentFields.meta) &&
        Objects.equals(this.moderationGroupIds, pickAPICommentUpdatableCommentFields.moderationGroupIds) &&
        Objects.equals(this.feedbackIds, pickAPICommentUpdatableCommentFields.feedbackIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(urlId, url, pageTitle, date, urlIdRaw, userId, commenterEmail, commenterName, commenterLink, comment, commentHTML, parentId, localDateString, localDateHours, votes, votesUp, votesDown, expireAt, verified, verifiedDate, notificationSentForParent, notificationSentForParentTenant, reviewed, externalId, externalParentId, avatarSrc, isSpam, approved, isDeleted, isDeletedUser, isByAdmin, isByModerator, isPinned, isLocked, flagCount, displayLabel, meta, moderationGroupIds, feedbackIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PickAPICommentUpdatableCommentFields {\n");
    sb.append("    urlId: ").append(toIndentedString(urlId)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    pageTitle: ").append(toIndentedString(pageTitle)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    urlIdRaw: ").append(toIndentedString(urlIdRaw)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    commenterEmail: ").append(toIndentedString(commenterEmail)).append("\n");
    sb.append("    commenterName: ").append(toIndentedString(commenterName)).append("\n");
    sb.append("    commenterLink: ").append(toIndentedString(commenterLink)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    commentHTML: ").append(toIndentedString(commentHTML)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    localDateString: ").append(toIndentedString(localDateString)).append("\n");
    sb.append("    localDateHours: ").append(toIndentedString(localDateHours)).append("\n");
    sb.append("    votes: ").append(toIndentedString(votes)).append("\n");
    sb.append("    votesUp: ").append(toIndentedString(votesUp)).append("\n");
    sb.append("    votesDown: ").append(toIndentedString(votesDown)).append("\n");
    sb.append("    expireAt: ").append(toIndentedString(expireAt)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("    verifiedDate: ").append(toIndentedString(verifiedDate)).append("\n");
    sb.append("    notificationSentForParent: ").append(toIndentedString(notificationSentForParent)).append("\n");
    sb.append("    notificationSentForParentTenant: ").append(toIndentedString(notificationSentForParentTenant)).append("\n");
    sb.append("    reviewed: ").append(toIndentedString(reviewed)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    externalParentId: ").append(toIndentedString(externalParentId)).append("\n");
    sb.append("    avatarSrc: ").append(toIndentedString(avatarSrc)).append("\n");
    sb.append("    isSpam: ").append(toIndentedString(isSpam)).append("\n");
    sb.append("    approved: ").append(toIndentedString(approved)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    isDeletedUser: ").append(toIndentedString(isDeletedUser)).append("\n");
    sb.append("    isByAdmin: ").append(toIndentedString(isByAdmin)).append("\n");
    sb.append("    isByModerator: ").append(toIndentedString(isByModerator)).append("\n");
    sb.append("    isPinned: ").append(toIndentedString(isPinned)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("    flagCount: ").append(toIndentedString(flagCount)).append("\n");
    sb.append("    displayLabel: ").append(toIndentedString(displayLabel)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    moderationGroupIds: ").append(toIndentedString(moderationGroupIds)).append("\n");
    sb.append("    feedbackIds: ").append(toIndentedString(feedbackIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("urlId");
    openapiFields.add("url");
    openapiFields.add("pageTitle");
    openapiFields.add("date");
    openapiFields.add("urlIdRaw");
    openapiFields.add("userId");
    openapiFields.add("commenterEmail");
    openapiFields.add("commenterName");
    openapiFields.add("commenterLink");
    openapiFields.add("comment");
    openapiFields.add("commentHTML");
    openapiFields.add("parentId");
    openapiFields.add("localDateString");
    openapiFields.add("localDateHours");
    openapiFields.add("votes");
    openapiFields.add("votesUp");
    openapiFields.add("votesDown");
    openapiFields.add("expireAt");
    openapiFields.add("verified");
    openapiFields.add("verifiedDate");
    openapiFields.add("notificationSentForParent");
    openapiFields.add("notificationSentForParentTenant");
    openapiFields.add("reviewed");
    openapiFields.add("externalId");
    openapiFields.add("externalParentId");
    openapiFields.add("avatarSrc");
    openapiFields.add("isSpam");
    openapiFields.add("approved");
    openapiFields.add("isDeleted");
    openapiFields.add("isDeletedUser");
    openapiFields.add("isByAdmin");
    openapiFields.add("isByModerator");
    openapiFields.add("isPinned");
    openapiFields.add("isLocked");
    openapiFields.add("flagCount");
    openapiFields.add("displayLabel");
    openapiFields.add("meta");
    openapiFields.add("moderationGroupIds");
    openapiFields.add("feedbackIds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("urlId");
    openapiRequiredFields.add("url");
    openapiRequiredFields.add("date");
    openapiRequiredFields.add("commenterName");
    openapiRequiredFields.add("comment");
    openapiRequiredFields.add("commentHTML");
    openapiRequiredFields.add("verified");
    openapiRequiredFields.add("approved");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PickAPICommentUpdatableCommentFields
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PickAPICommentUpdatableCommentFields.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PickAPICommentUpdatableCommentFields is not found in the empty JSON string", PickAPICommentUpdatableCommentFields.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PickAPICommentUpdatableCommentFields.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PickAPICommentUpdatableCommentFields` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PickAPICommentUpdatableCommentFields.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("urlId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urlId").toString()));
      }
      if (!jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("pageTitle") != null && !jsonObj.get("pageTitle").isJsonNull()) && !jsonObj.get("pageTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageTitle").toString()));
      }
      if ((jsonObj.get("urlIdRaw") != null && !jsonObj.get("urlIdRaw").isJsonNull()) && !jsonObj.get("urlIdRaw").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlIdRaw` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urlIdRaw").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("commenterEmail") != null && !jsonObj.get("commenterEmail").isJsonNull()) && !jsonObj.get("commenterEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commenterEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commenterEmail").toString()));
      }
      if (!jsonObj.get("commenterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commenterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commenterName").toString()));
      }
      if ((jsonObj.get("commenterLink") != null && !jsonObj.get("commenterLink").isJsonNull()) && !jsonObj.get("commenterLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commenterLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commenterLink").toString()));
      }
      if (!jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if (!jsonObj.get("commentHTML").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commentHTML` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commentHTML").toString()));
      }
      if ((jsonObj.get("parentId") != null && !jsonObj.get("parentId").isJsonNull()) && !jsonObj.get("parentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentId").toString()));
      }
      if ((jsonObj.get("localDateString") != null && !jsonObj.get("localDateString").isJsonNull()) && !jsonObj.get("localDateString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localDateString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localDateString").toString()));
      }
      if ((jsonObj.get("externalId") != null && !jsonObj.get("externalId").isJsonNull()) && !jsonObj.get("externalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalId").toString()));
      }
      if ((jsonObj.get("externalParentId") != null && !jsonObj.get("externalParentId").isJsonNull()) && !jsonObj.get("externalParentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalParentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalParentId").toString()));
      }
      if ((jsonObj.get("avatarSrc") != null && !jsonObj.get("avatarSrc").isJsonNull()) && !jsonObj.get("avatarSrc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatarSrc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatarSrc").toString()));
      }
      if ((jsonObj.get("displayLabel") != null && !jsonObj.get("displayLabel").isJsonNull()) && !jsonObj.get("displayLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayLabel").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("moderationGroupIds") != null && !jsonObj.get("moderationGroupIds").isJsonNull() && !jsonObj.get("moderationGroupIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `moderationGroupIds` to be an array in the JSON string but got `%s`", jsonObj.get("moderationGroupIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("feedbackIds") != null && !jsonObj.get("feedbackIds").isJsonNull() && !jsonObj.get("feedbackIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `feedbackIds` to be an array in the JSON string but got `%s`", jsonObj.get("feedbackIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PickAPICommentUpdatableCommentFields.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PickAPICommentUpdatableCommentFields' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PickAPICommentUpdatableCommentFields> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PickAPICommentUpdatableCommentFields.class));

       return (TypeAdapter<T>) new TypeAdapter<PickAPICommentUpdatableCommentFields>() {
           @Override
           public void write(JsonWriter out, PickAPICommentUpdatableCommentFields value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PickAPICommentUpdatableCommentFields read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PickAPICommentUpdatableCommentFields given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PickAPICommentUpdatableCommentFields
   * @throws IOException if the JSON string is invalid with respect to PickAPICommentUpdatableCommentFields
   */
  public static PickAPICommentUpdatableCommentFields fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PickAPICommentUpdatableCommentFields.class);
  }

  /**
   * Convert an instance of PickAPICommentUpdatableCommentFields to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


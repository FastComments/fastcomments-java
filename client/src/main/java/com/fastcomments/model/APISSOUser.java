/*
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@fastcomments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fastcomments.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.fastcomments.invoker.JSON;

/**
 * APISSOUser
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class APISSOUser {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nonnull
  private String id;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  @javax.annotation.Nonnull
  private String username;

  public static final String SERIALIZED_NAME_WEBSITE_URL = "websiteUrl";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL)
  @javax.annotation.Nonnull
  private String websiteUrl;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  @javax.annotation.Nonnull
  private String email;

  public static final String SERIALIZED_NAME_SIGN_UP_DATE = "signUpDate";
  @SerializedName(SERIALIZED_NAME_SIGN_UP_DATE)
  @javax.annotation.Nonnull
  private Long signUpDate;

  public static final String SERIALIZED_NAME_CREATED_FROM_URL_ID = "createdFromUrlId";
  @SerializedName(SERIALIZED_NAME_CREATED_FROM_URL_ID)
  @javax.annotation.Nonnull
  private String createdFromUrlId;

  public static final String SERIALIZED_NAME_LOGIN_COUNT = "loginCount";
  @SerializedName(SERIALIZED_NAME_LOGIN_COUNT)
  @javax.annotation.Nonnull
  private Integer loginCount;

  public static final String SERIALIZED_NAME_AVATAR_SRC = "avatarSrc";
  @SerializedName(SERIALIZED_NAME_AVATAR_SRC)
  @javax.annotation.Nonnull
  private String avatarSrc;

  public static final String SERIALIZED_NAME_OPTED_IN_NOTIFICATIONS = "optedInNotifications";
  @SerializedName(SERIALIZED_NAME_OPTED_IN_NOTIFICATIONS)
  @javax.annotation.Nonnull
  private Boolean optedInNotifications;

  public static final String SERIALIZED_NAME_OPTED_IN_SUBSCRIPTION_NOTIFICATIONS = "optedInSubscriptionNotifications";
  @SerializedName(SERIALIZED_NAME_OPTED_IN_SUBSCRIPTION_NOTIFICATIONS)
  @javax.annotation.Nonnull
  private Boolean optedInSubscriptionNotifications;

  public static final String SERIALIZED_NAME_DISPLAY_LABEL = "displayLabel";
  @SerializedName(SERIALIZED_NAME_DISPLAY_LABEL)
  @javax.annotation.Nonnull
  private String displayLabel;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  @javax.annotation.Nonnull
  private String displayName;

  public static final String SERIALIZED_NAME_IS_ACCOUNT_OWNER = "isAccountOwner";
  @SerializedName(SERIALIZED_NAME_IS_ACCOUNT_OWNER)
  @javax.annotation.Nullable
  private Boolean isAccountOwner;

  public static final String SERIALIZED_NAME_IS_ADMIN_ADMIN = "isAdminAdmin";
  @SerializedName(SERIALIZED_NAME_IS_ADMIN_ADMIN)
  @javax.annotation.Nullable
  private Boolean isAdminAdmin;

  public static final String SERIALIZED_NAME_IS_COMMENT_MODERATOR_ADMIN = "isCommentModeratorAdmin";
  @SerializedName(SERIALIZED_NAME_IS_COMMENT_MODERATOR_ADMIN)
  @javax.annotation.Nullable
  private Boolean isCommentModeratorAdmin;

  public static final String SERIALIZED_NAME_IS_PROFILE_ACTIVITY_PRIVATE = "isProfileActivityPrivate";
  @SerializedName(SERIALIZED_NAME_IS_PROFILE_ACTIVITY_PRIVATE)
  @javax.annotation.Nullable
  private Boolean isProfileActivityPrivate;

  public static final String SERIALIZED_NAME_IS_PROFILE_COMMENTS_PRIVATE = "isProfileCommentsPrivate";
  @SerializedName(SERIALIZED_NAME_IS_PROFILE_COMMENTS_PRIVATE)
  @javax.annotation.Nullable
  private Boolean isProfileCommentsPrivate;

  public static final String SERIALIZED_NAME_IS_PROFILE_D_M_DISABLED = "isProfileDMDisabled";
  @SerializedName(SERIALIZED_NAME_IS_PROFILE_D_M_DISABLED)
  @javax.annotation.Nullable
  private Boolean isProfileDMDisabled;

  public static final String SERIALIZED_NAME_HAS_BLOCKED_USERS = "hasBlockedUsers";
  @SerializedName(SERIALIZED_NAME_HAS_BLOCKED_USERS)
  @javax.annotation.Nullable
  private Boolean hasBlockedUsers;

  public static final String SERIALIZED_NAME_GROUP_IDS = "groupIds";
  @SerializedName(SERIALIZED_NAME_GROUP_IDS)
  @javax.annotation.Nullable
  private List<String> groupIds = new ArrayList<>();

  public APISSOUser() {
  }

  public APISSOUser id(@javax.annotation.Nonnull String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }


  public APISSOUser username(@javax.annotation.Nonnull String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nonnull
  public String getUsername() {
    return username;
  }

  public void setUsername(@javax.annotation.Nonnull String username) {
    this.username = username;
  }


  public APISSOUser websiteUrl(@javax.annotation.Nonnull String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

  /**
   * Get websiteUrl
   * @return websiteUrl
   */
  @javax.annotation.Nonnull
  public String getWebsiteUrl() {
    return websiteUrl;
  }

  public void setWebsiteUrl(@javax.annotation.Nonnull String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }


  public APISSOUser email(@javax.annotation.Nonnull String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nonnull
  public String getEmail() {
    return email;
  }

  public void setEmail(@javax.annotation.Nonnull String email) {
    this.email = email;
  }


  public APISSOUser signUpDate(@javax.annotation.Nonnull Long signUpDate) {
    this.signUpDate = signUpDate;
    return this;
  }

  /**
   * Get signUpDate
   * @return signUpDate
   */
  @javax.annotation.Nonnull
  public Long getSignUpDate() {
    return signUpDate;
  }

  public void setSignUpDate(@javax.annotation.Nonnull Long signUpDate) {
    this.signUpDate = signUpDate;
  }


  public APISSOUser createdFromUrlId(@javax.annotation.Nonnull String createdFromUrlId) {
    this.createdFromUrlId = createdFromUrlId;
    return this;
  }

  /**
   * Get createdFromUrlId
   * @return createdFromUrlId
   */
  @javax.annotation.Nonnull
  public String getCreatedFromUrlId() {
    return createdFromUrlId;
  }

  public void setCreatedFromUrlId(@javax.annotation.Nonnull String createdFromUrlId) {
    this.createdFromUrlId = createdFromUrlId;
  }


  public APISSOUser loginCount(@javax.annotation.Nonnull Integer loginCount) {
    this.loginCount = loginCount;
    return this;
  }

  /**
   * Get loginCount
   * @return loginCount
   */
  @javax.annotation.Nonnull
  public Integer getLoginCount() {
    return loginCount;
  }

  public void setLoginCount(@javax.annotation.Nonnull Integer loginCount) {
    this.loginCount = loginCount;
  }


  public APISSOUser avatarSrc(@javax.annotation.Nonnull String avatarSrc) {
    this.avatarSrc = avatarSrc;
    return this;
  }

  /**
   * Get avatarSrc
   * @return avatarSrc
   */
  @javax.annotation.Nonnull
  public String getAvatarSrc() {
    return avatarSrc;
  }

  public void setAvatarSrc(@javax.annotation.Nonnull String avatarSrc) {
    this.avatarSrc = avatarSrc;
  }


  public APISSOUser optedInNotifications(@javax.annotation.Nonnull Boolean optedInNotifications) {
    this.optedInNotifications = optedInNotifications;
    return this;
  }

  /**
   * Get optedInNotifications
   * @return optedInNotifications
   */
  @javax.annotation.Nonnull
  public Boolean getOptedInNotifications() {
    return optedInNotifications;
  }

  public void setOptedInNotifications(@javax.annotation.Nonnull Boolean optedInNotifications) {
    this.optedInNotifications = optedInNotifications;
  }


  public APISSOUser optedInSubscriptionNotifications(@javax.annotation.Nonnull Boolean optedInSubscriptionNotifications) {
    this.optedInSubscriptionNotifications = optedInSubscriptionNotifications;
    return this;
  }

  /**
   * Get optedInSubscriptionNotifications
   * @return optedInSubscriptionNotifications
   */
  @javax.annotation.Nonnull
  public Boolean getOptedInSubscriptionNotifications() {
    return optedInSubscriptionNotifications;
  }

  public void setOptedInSubscriptionNotifications(@javax.annotation.Nonnull Boolean optedInSubscriptionNotifications) {
    this.optedInSubscriptionNotifications = optedInSubscriptionNotifications;
  }


  public APISSOUser displayLabel(@javax.annotation.Nonnull String displayLabel) {
    this.displayLabel = displayLabel;
    return this;
  }

  /**
   * Get displayLabel
   * @return displayLabel
   */
  @javax.annotation.Nonnull
  public String getDisplayLabel() {
    return displayLabel;
  }

  public void setDisplayLabel(@javax.annotation.Nonnull String displayLabel) {
    this.displayLabel = displayLabel;
  }


  public APISSOUser displayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nonnull
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
  }


  public APISSOUser isAccountOwner(@javax.annotation.Nullable Boolean isAccountOwner) {
    this.isAccountOwner = isAccountOwner;
    return this;
  }

  /**
   * Get isAccountOwner
   * @return isAccountOwner
   */
  @javax.annotation.Nullable
  public Boolean getIsAccountOwner() {
    return isAccountOwner;
  }

  public void setIsAccountOwner(@javax.annotation.Nullable Boolean isAccountOwner) {
    this.isAccountOwner = isAccountOwner;
  }


  public APISSOUser isAdminAdmin(@javax.annotation.Nullable Boolean isAdminAdmin) {
    this.isAdminAdmin = isAdminAdmin;
    return this;
  }

  /**
   * Get isAdminAdmin
   * @return isAdminAdmin
   */
  @javax.annotation.Nullable
  public Boolean getIsAdminAdmin() {
    return isAdminAdmin;
  }

  public void setIsAdminAdmin(@javax.annotation.Nullable Boolean isAdminAdmin) {
    this.isAdminAdmin = isAdminAdmin;
  }


  public APISSOUser isCommentModeratorAdmin(@javax.annotation.Nullable Boolean isCommentModeratorAdmin) {
    this.isCommentModeratorAdmin = isCommentModeratorAdmin;
    return this;
  }

  /**
   * Get isCommentModeratorAdmin
   * @return isCommentModeratorAdmin
   */
  @javax.annotation.Nullable
  public Boolean getIsCommentModeratorAdmin() {
    return isCommentModeratorAdmin;
  }

  public void setIsCommentModeratorAdmin(@javax.annotation.Nullable Boolean isCommentModeratorAdmin) {
    this.isCommentModeratorAdmin = isCommentModeratorAdmin;
  }


  public APISSOUser isProfileActivityPrivate(@javax.annotation.Nullable Boolean isProfileActivityPrivate) {
    this.isProfileActivityPrivate = isProfileActivityPrivate;
    return this;
  }

  /**
   * Get isProfileActivityPrivate
   * @return isProfileActivityPrivate
   */
  @javax.annotation.Nullable
  public Boolean getIsProfileActivityPrivate() {
    return isProfileActivityPrivate;
  }

  public void setIsProfileActivityPrivate(@javax.annotation.Nullable Boolean isProfileActivityPrivate) {
    this.isProfileActivityPrivate = isProfileActivityPrivate;
  }


  public APISSOUser isProfileCommentsPrivate(@javax.annotation.Nullable Boolean isProfileCommentsPrivate) {
    this.isProfileCommentsPrivate = isProfileCommentsPrivate;
    return this;
  }

  /**
   * Get isProfileCommentsPrivate
   * @return isProfileCommentsPrivate
   */
  @javax.annotation.Nullable
  public Boolean getIsProfileCommentsPrivate() {
    return isProfileCommentsPrivate;
  }

  public void setIsProfileCommentsPrivate(@javax.annotation.Nullable Boolean isProfileCommentsPrivate) {
    this.isProfileCommentsPrivate = isProfileCommentsPrivate;
  }


  public APISSOUser isProfileDMDisabled(@javax.annotation.Nullable Boolean isProfileDMDisabled) {
    this.isProfileDMDisabled = isProfileDMDisabled;
    return this;
  }

  /**
   * Get isProfileDMDisabled
   * @return isProfileDMDisabled
   */
  @javax.annotation.Nullable
  public Boolean getIsProfileDMDisabled() {
    return isProfileDMDisabled;
  }

  public void setIsProfileDMDisabled(@javax.annotation.Nullable Boolean isProfileDMDisabled) {
    this.isProfileDMDisabled = isProfileDMDisabled;
  }


  public APISSOUser hasBlockedUsers(@javax.annotation.Nullable Boolean hasBlockedUsers) {
    this.hasBlockedUsers = hasBlockedUsers;
    return this;
  }

  /**
   * Get hasBlockedUsers
   * @return hasBlockedUsers
   */
  @javax.annotation.Nullable
  public Boolean getHasBlockedUsers() {
    return hasBlockedUsers;
  }

  public void setHasBlockedUsers(@javax.annotation.Nullable Boolean hasBlockedUsers) {
    this.hasBlockedUsers = hasBlockedUsers;
  }


  public APISSOUser groupIds(@javax.annotation.Nullable List<String> groupIds) {
    this.groupIds = groupIds;
    return this;
  }

  public APISSOUser addGroupIdsItem(String groupIdsItem) {
    if (this.groupIds == null) {
      this.groupIds = new ArrayList<>();
    }
    this.groupIds.add(groupIdsItem);
    return this;
  }

  /**
   * Get groupIds
   * @return groupIds
   */
  @javax.annotation.Nullable
  public List<String> getGroupIds() {
    return groupIds;
  }

  public void setGroupIds(@javax.annotation.Nullable List<String> groupIds) {
    this.groupIds = groupIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APISSOUser apISSOUser = (APISSOUser) o;
    return Objects.equals(this.id, apISSOUser.id) &&
        Objects.equals(this.username, apISSOUser.username) &&
        Objects.equals(this.websiteUrl, apISSOUser.websiteUrl) &&
        Objects.equals(this.email, apISSOUser.email) &&
        Objects.equals(this.signUpDate, apISSOUser.signUpDate) &&
        Objects.equals(this.createdFromUrlId, apISSOUser.createdFromUrlId) &&
        Objects.equals(this.loginCount, apISSOUser.loginCount) &&
        Objects.equals(this.avatarSrc, apISSOUser.avatarSrc) &&
        Objects.equals(this.optedInNotifications, apISSOUser.optedInNotifications) &&
        Objects.equals(this.optedInSubscriptionNotifications, apISSOUser.optedInSubscriptionNotifications) &&
        Objects.equals(this.displayLabel, apISSOUser.displayLabel) &&
        Objects.equals(this.displayName, apISSOUser.displayName) &&
        Objects.equals(this.isAccountOwner, apISSOUser.isAccountOwner) &&
        Objects.equals(this.isAdminAdmin, apISSOUser.isAdminAdmin) &&
        Objects.equals(this.isCommentModeratorAdmin, apISSOUser.isCommentModeratorAdmin) &&
        Objects.equals(this.isProfileActivityPrivate, apISSOUser.isProfileActivityPrivate) &&
        Objects.equals(this.isProfileCommentsPrivate, apISSOUser.isProfileCommentsPrivate) &&
        Objects.equals(this.isProfileDMDisabled, apISSOUser.isProfileDMDisabled) &&
        Objects.equals(this.hasBlockedUsers, apISSOUser.hasBlockedUsers) &&
        Objects.equals(this.groupIds, apISSOUser.groupIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, username, websiteUrl, email, signUpDate, createdFromUrlId, loginCount, avatarSrc, optedInNotifications, optedInSubscriptionNotifications, displayLabel, displayName, isAccountOwner, isAdminAdmin, isCommentModeratorAdmin, isProfileActivityPrivate, isProfileCommentsPrivate, isProfileDMDisabled, hasBlockedUsers, groupIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APISSOUser {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    signUpDate: ").append(toIndentedString(signUpDate)).append("\n");
    sb.append("    createdFromUrlId: ").append(toIndentedString(createdFromUrlId)).append("\n");
    sb.append("    loginCount: ").append(toIndentedString(loginCount)).append("\n");
    sb.append("    avatarSrc: ").append(toIndentedString(avatarSrc)).append("\n");
    sb.append("    optedInNotifications: ").append(toIndentedString(optedInNotifications)).append("\n");
    sb.append("    optedInSubscriptionNotifications: ").append(toIndentedString(optedInSubscriptionNotifications)).append("\n");
    sb.append("    displayLabel: ").append(toIndentedString(displayLabel)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    isAccountOwner: ").append(toIndentedString(isAccountOwner)).append("\n");
    sb.append("    isAdminAdmin: ").append(toIndentedString(isAdminAdmin)).append("\n");
    sb.append("    isCommentModeratorAdmin: ").append(toIndentedString(isCommentModeratorAdmin)).append("\n");
    sb.append("    isProfileActivityPrivate: ").append(toIndentedString(isProfileActivityPrivate)).append("\n");
    sb.append("    isProfileCommentsPrivate: ").append(toIndentedString(isProfileCommentsPrivate)).append("\n");
    sb.append("    isProfileDMDisabled: ").append(toIndentedString(isProfileDMDisabled)).append("\n");
    sb.append("    hasBlockedUsers: ").append(toIndentedString(hasBlockedUsers)).append("\n");
    sb.append("    groupIds: ").append(toIndentedString(groupIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("username");
    openapiFields.add("websiteUrl");
    openapiFields.add("email");
    openapiFields.add("signUpDate");
    openapiFields.add("createdFromUrlId");
    openapiFields.add("loginCount");
    openapiFields.add("avatarSrc");
    openapiFields.add("optedInNotifications");
    openapiFields.add("optedInSubscriptionNotifications");
    openapiFields.add("displayLabel");
    openapiFields.add("displayName");
    openapiFields.add("isAccountOwner");
    openapiFields.add("isAdminAdmin");
    openapiFields.add("isCommentModeratorAdmin");
    openapiFields.add("isProfileActivityPrivate");
    openapiFields.add("isProfileCommentsPrivate");
    openapiFields.add("isProfileDMDisabled");
    openapiFields.add("hasBlockedUsers");
    openapiFields.add("groupIds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("username");
    openapiRequiredFields.add("websiteUrl");
    openapiRequiredFields.add("email");
    openapiRequiredFields.add("signUpDate");
    openapiRequiredFields.add("createdFromUrlId");
    openapiRequiredFields.add("loginCount");
    openapiRequiredFields.add("avatarSrc");
    openapiRequiredFields.add("optedInNotifications");
    openapiRequiredFields.add("optedInSubscriptionNotifications");
    openapiRequiredFields.add("displayLabel");
    openapiRequiredFields.add("displayName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to APISSOUser
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!APISSOUser.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in APISSOUser is not found in the empty JSON string", APISSOUser.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!APISSOUser.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `APISSOUser` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : APISSOUser.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
      if (!jsonObj.get("websiteUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `websiteUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("websiteUrl").toString()));
      }
      if (!jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (!jsonObj.get("createdFromUrlId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdFromUrlId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdFromUrlId").toString()));
      }
      if (!jsonObj.get("avatarSrc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatarSrc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatarSrc").toString()));
      }
      if (!jsonObj.get("displayLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayLabel").toString()));
      }
      if (!jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("groupIds") != null && !jsonObj.get("groupIds").isJsonNull() && !jsonObj.get("groupIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `groupIds` to be an array in the JSON string but got `%s`", jsonObj.get("groupIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!APISSOUser.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'APISSOUser' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<APISSOUser> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(APISSOUser.class));

       return (TypeAdapter<T>) new TypeAdapter<APISSOUser>() {
           @Override
           public void write(JsonWriter out, APISSOUser value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public APISSOUser read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of APISSOUser given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of APISSOUser
   * @throws IOException if the JSON string is invalid with respect to APISSOUser
   */
  public static APISSOUser fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, APISSOUser.class);
  }

  /**
   * Convert an instance of APISSOUser to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


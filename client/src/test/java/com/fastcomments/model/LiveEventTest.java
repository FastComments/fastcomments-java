/*
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fastcomments.model;

import com.fastcomments.model.CommentUserBadgeInfo;
import com.fastcomments.model.LiveEventExtraInfo;
import com.fastcomments.model.LiveEventType;
import com.fastcomments.model.PubSubComment;
import com.fastcomments.model.PubSubVote;
import com.fastcomments.model.UserNotification;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for LiveEvent
 */
public class LiveEventTest {
    private final LiveEvent model = new LiveEvent();

    /**
     * Model tests for LiveEvent
     */
    @Test
    public void testLiveEvent() {
        // TODO: test LiveEvent
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'ts'
     */
    @Test
    public void tsTest() {
        // TODO: test ts
    }

    /**
     * Test the property 'broadcastId'
     */
    @Test
    public void broadcastIdTest() {
        // TODO: test broadcastId
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

    /**
     * Test the property 'badges'
     */
    @Test
    public void badgesTest() {
        // TODO: test badges
    }

    /**
     * Test the property 'notification'
     */
    @Test
    public void notificationTest() {
        // TODO: test notification
    }

    /**
     * Test the property 'vote'
     */
    @Test
    public void voteTest() {
        // TODO: test vote
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'extraInfo'
     */
    @Test
    public void extraInfoTest() {
        // TODO: test extraInfo
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'isClosed'
     */
    @Test
    public void isClosedTest() {
        // TODO: test isClosed
    }

    /**
     * Test the property 'uj'
     */
    @Test
    public void ujTest() {
        // TODO: test uj
    }

    /**
     * Test the property 'ul'
     */
    @Test
    public void ulTest() {
        // TODO: test ul
    }

    /**
     * Test the property 'changes'
     */
    @Test
    public void changesTest() {
        // TODO: test changes
    }

}

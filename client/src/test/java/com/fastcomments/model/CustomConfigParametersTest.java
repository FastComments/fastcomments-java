/*
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@fastcomments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fastcomments.model;

import com.fastcomments.model.CommentHTMLRenderingMode;
import com.fastcomments.model.CommentQuestionResultsRenderingType;
import com.fastcomments.model.CommentQuestionsRequired;
import com.fastcomments.model.CommentThreadDeletionMode;
import com.fastcomments.model.CommenterNameFormats;
import com.fastcomments.model.GifRating;
import com.fastcomments.model.ImageContentProfanityLevel;
import com.fastcomments.model.QuestionRenderingType;
import com.fastcomments.model.QuestionSubQuestionVisibility;
import com.fastcomments.model.QuestionWhenSave;
import com.fastcomments.model.SSOSecurityLevel;
import com.fastcomments.model.SortDirections;
import com.fastcomments.model.SpamRule;
import com.fastcomments.model.VoteStyle;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CustomConfigParameters
 */
public class CustomConfigParametersTest {
    private final CustomConfigParameters model = new CustomConfigParameters();

    /**
     * Model tests for CustomConfigParameters
     */
    @Test
    public void testCustomConfigParameters() {
        // TODO: test CustomConfigParameters
    }

    /**
     * Test the property 'absoluteAndRelativeDates'
     */
    @Test
    public void absoluteAndRelativeDatesTest() {
        // TODO: test absoluteAndRelativeDates
    }

    /**
     * Test the property 'absoluteDates'
     */
    @Test
    public void absoluteDatesTest() {
        // TODO: test absoluteDates
    }

    /**
     * Test the property 'allowAnon'
     */
    @Test
    public void allowAnonTest() {
        // TODO: test allowAnon
    }

    /**
     * Test the property 'allowAnonFlag'
     */
    @Test
    public void allowAnonFlagTest() {
        // TODO: test allowAnonFlag
    }

    /**
     * Test the property 'allowAnonVotes'
     */
    @Test
    public void allowAnonVotesTest() {
        // TODO: test allowAnonVotes
    }

    /**
     * Test the property 'allowedLanguages'
     */
    @Test
    public void allowedLanguagesTest() {
        // TODO: test allowedLanguages
    }

    /**
     * Test the property 'collapseReplies'
     */
    @Test
    public void collapseRepliesTest() {
        // TODO: test collapseReplies
    }

    /**
     * Test the property 'commentCountFormat'
     */
    @Test
    public void commentCountFormatTest() {
        // TODO: test commentCountFormat
    }

    /**
     * Test the property 'commentHTMLRenderingMode'
     */
    @Test
    public void commentHTMLRenderingModeTest() {
        // TODO: test commentHTMLRenderingMode
    }

    /**
     * Test the property 'commentThreadDeleteMode'
     */
    @Test
    public void commentThreadDeleteModeTest() {
        // TODO: test commentThreadDeleteMode
    }

    /**
     * Test the property 'commenterNameFormat'
     */
    @Test
    public void commenterNameFormatTest() {
        // TODO: test commenterNameFormat
    }

    /**
     * Test the property 'countAboveToggle'
     */
    @Test
    public void countAboveToggleTest() {
        // TODO: test countAboveToggle
    }

    /**
     * Test the property 'customCSS'
     */
    @Test
    public void customCSSTest() {
        // TODO: test customCSS
    }

    /**
     * Test the property 'defaultAvatarSrc'
     */
    @Test
    public void defaultAvatarSrcTest() {
        // TODO: test defaultAvatarSrc
    }

    /**
     * Test the property 'defaultSortDirection'
     */
    @Test
    public void defaultSortDirectionTest() {
        // TODO: test defaultSortDirection
    }

    /**
     * Test the property 'defaultUsername'
     */
    @Test
    public void defaultUsernameTest() {
        // TODO: test defaultUsername
    }

    /**
     * Test the property 'disableAutoAdminMigration'
     */
    @Test
    public void disableAutoAdminMigrationTest() {
        // TODO: test disableAutoAdminMigration
    }

    /**
     * Test the property 'disableAutoHashTagCreation'
     */
    @Test
    public void disableAutoHashTagCreationTest() {
        // TODO: test disableAutoHashTagCreation
    }

    /**
     * Test the property 'disableBlocking'
     */
    @Test
    public void disableBlockingTest() {
        // TODO: test disableBlocking
    }

    /**
     * Test the property 'disableCommenterCommentDelete'
     */
    @Test
    public void disableCommenterCommentDeleteTest() {
        // TODO: test disableCommenterCommentDelete
    }

    /**
     * Test the property 'disableCommenterCommentEdit'
     */
    @Test
    public void disableCommenterCommentEditTest() {
        // TODO: test disableCommenterCommentEdit
    }

    /**
     * Test the property 'disableEmailInputs'
     */
    @Test
    public void disableEmailInputsTest() {
        // TODO: test disableEmailInputs
    }

    /**
     * Test the property 'disableLiveCommenting'
     */
    @Test
    public void disableLiveCommentingTest() {
        // TODO: test disableLiveCommenting
    }

    /**
     * Test the property 'disableNotificationBell'
     */
    @Test
    public void disableNotificationBellTest() {
        // TODO: test disableNotificationBell
    }

    /**
     * Test the property 'disableProfiles'
     */
    @Test
    public void disableProfilesTest() {
        // TODO: test disableProfiles
    }

    /**
     * Test the property 'disableSuccessMessage'
     */
    @Test
    public void disableSuccessMessageTest() {
        // TODO: test disableSuccessMessage
    }

    /**
     * Test the property 'disableToolbar'
     */
    @Test
    public void disableToolbarTest() {
        // TODO: test disableToolbar
    }

    /**
     * Test the property 'disableUnverifiedLabel'
     */
    @Test
    public void disableUnverifiedLabelTest() {
        // TODO: test disableUnverifiedLabel
    }

    /**
     * Test the property 'disableVoting'
     */
    @Test
    public void disableVotingTest() {
        // TODO: test disableVoting
    }

    /**
     * Test the property 'enableCommenterLinks'
     */
    @Test
    public void enableCommenterLinksTest() {
        // TODO: test enableCommenterLinks
    }

    /**
     * Test the property 'enableSearch'
     */
    @Test
    public void enableSearchTest() {
        // TODO: test enableSearch
    }

    /**
     * Test the property 'enableSpoilers'
     */
    @Test
    public void enableSpoilersTest() {
        // TODO: test enableSpoilers
    }

    /**
     * Test the property 'enableThirdPartyCookieBypass'
     */
    @Test
    public void enableThirdPartyCookieBypassTest() {
        // TODO: test enableThirdPartyCookieBypass
    }

    /**
     * Test the property 'enableViewCounts'
     */
    @Test
    public void enableViewCountsTest() {
        // TODO: test enableViewCounts
    }

    /**
     * Test the property 'enableVoteList'
     */
    @Test
    public void enableVoteListTest() {
        // TODO: test enableVoteList
    }

    /**
     * Test the property 'enableWYSIWYG'
     */
    @Test
    public void enableWYSIWYGTest() {
        // TODO: test enableWYSIWYG
    }

    /**
     * Test the property 'gifRating'
     */
    @Test
    public void gifRatingTest() {
        // TODO: test gifRating
    }

    /**
     * Test the property 'hasDarkBackground'
     */
    @Test
    public void hasDarkBackgroundTest() {
        // TODO: test hasDarkBackground
    }

    /**
     * Test the property 'headerHTML'
     */
    @Test
    public void headerHTMLTest() {
        // TODO: test headerHTML
    }

    /**
     * Test the property 'hideAvatars'
     */
    @Test
    public void hideAvatarsTest() {
        // TODO: test hideAvatars
    }

    /**
     * Test the property 'hideCommentsUnderCountTextFormat'
     */
    @Test
    public void hideCommentsUnderCountTextFormatTest() {
        // TODO: test hideCommentsUnderCountTextFormat
    }

    /**
     * Test the property 'imageContentProfanityLevel'
     */
    @Test
    public void imageContentProfanityLevelTest() {
        // TODO: test imageContentProfanityLevel
    }

    /**
     * Test the property 'inputAfterComments'
     */
    @Test
    public void inputAfterCommentsTest() {
        // TODO: test inputAfterComments
    }

    /**
     * Test the property 'limitCommentsByGroups'
     */
    @Test
    public void limitCommentsByGroupsTest() {
        // TODO: test limitCommentsByGroups
    }

    /**
     * Test the property 'locale'
     */
    @Test
    public void localeTest() {
        // TODO: test locale
    }

    /**
     * Test the property 'maxCommentCharacterLength'
     */
    @Test
    public void maxCommentCharacterLengthTest() {
        // TODO: test maxCommentCharacterLength
    }

    /**
     * Test the property 'maxCommentCreatedCountPUPM'
     */
    @Test
    public void maxCommentCreatedCountPUPMTest() {
        // TODO: test maxCommentCreatedCountPUPM
    }

    /**
     * Test the property 'noCustomConfig'
     */
    @Test
    public void noCustomConfigTest() {
        // TODO: test noCustomConfig
    }

    /**
     * Test the property 'noImageUploads'
     */
    @Test
    public void noImageUploadsTest() {
        // TODO: test noImageUploads
    }

    /**
     * Test the property 'noStyles'
     */
    @Test
    public void noStylesTest() {
        // TODO: test noStyles
    }

    /**
     * Test the property 'pageSize'
     */
    @Test
    public void pageSizeTest() {
        // TODO: test pageSize
    }

    /**
     * Test the property 'readonly'
     */
    @Test
    public void readonlyTest() {
        // TODO: test readonly
    }

    /**
     * Test the property 'requireSSO'
     */
    @Test
    public void requireSSOTest() {
        // TODO: test requireSSO
    }

    /**
     * Test the property 'restrictedLinkDomains'
     */
    @Test
    public void restrictedLinkDomainsTest() {
        // TODO: test restrictedLinkDomains
    }

    /**
     * Test the property 'showCommentSaveSuccess'
     */
    @Test
    public void showCommentSaveSuccessTest() {
        // TODO: test showCommentSaveSuccess
    }

    /**
     * Test the property 'showLiveRightAway'
     */
    @Test
    public void showLiveRightAwayTest() {
        // TODO: test showLiveRightAway
    }

    /**
     * Test the property 'showQuestion'
     */
    @Test
    public void showQuestionTest() {
        // TODO: test showQuestion
    }

    /**
     * Test the property 'spamRules'
     */
    @Test
    public void spamRulesTest() {
        // TODO: test spamRules
    }

    /**
     * Test the property 'ssoSecLvl'
     */
    @Test
    public void ssoSecLvlTest() {
        // TODO: test ssoSecLvl
    }

    /**
     * Test the property 'translations'
     */
    @Test
    public void translationsTest() {
        // TODO: test translations
    }

    /**
     * Test the property 'useShowCommentsToggle'
     */
    @Test
    public void useShowCommentsToggleTest() {
        // TODO: test useShowCommentsToggle
    }

    /**
     * Test the property 'useSingleLineCommentInput'
     */
    @Test
    public void useSingleLineCommentInputTest() {
        // TODO: test useSingleLineCommentInput
    }

    /**
     * Test the property 'voteStyle'
     */
    @Test
    public void voteStyleTest() {
        // TODO: test voteStyle
    }

    /**
     * Test the property 'widgetQuestionId'
     */
    @Test
    public void widgetQuestionIdTest() {
        // TODO: test widgetQuestionId
    }

    /**
     * Test the property 'widgetQuestionResultsStyle'
     */
    @Test
    public void widgetQuestionResultsStyleTest() {
        // TODO: test widgetQuestionResultsStyle
    }

    /**
     * Test the property 'widgetQuestionStyle'
     */
    @Test
    public void widgetQuestionStyleTest() {
        // TODO: test widgetQuestionStyle
    }

    /**
     * Test the property 'widgetQuestionWhenToSave'
     */
    @Test
    public void widgetQuestionWhenToSaveTest() {
        // TODO: test widgetQuestionWhenToSave
    }

    /**
     * Test the property 'widgetQuestionsRequired'
     */
    @Test
    public void widgetQuestionsRequiredTest() {
        // TODO: test widgetQuestionsRequired
    }

    /**
     * Test the property 'widgetSubQuestionVisibility'
     */
    @Test
    public void widgetSubQuestionVisibilityTest() {
        // TODO: test widgetSubQuestionVisibility
    }

    /**
     * Test the property 'wrap'
     */
    @Test
    public void wrapTest() {
        // TODO: test wrap
    }

}

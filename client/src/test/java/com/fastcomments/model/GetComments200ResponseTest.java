/*
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fastcomments.model;

import com.fastcomments.model.APICommentFCommentOptimized;
import com.fastcomments.model.APIError;
import com.fastcomments.model.CustomConfigParameters;
import com.fastcomments.model.GetCommentsResponseWithPresenceFCommentOptimized;
import com.fastcomments.model.ImportedAPIStatusFAILED;
import com.fastcomments.model.UserSessionInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetComments200Response
 */
public class GetComments200ResponseTest {
    private final GetComments200Response model = new GetComments200Response();

    /**
     * Model tests for GetComments200Response
     */
    @Test
    public void testGetComments200Response() {
        // TODO: test GetComments200Response
    }

    /**
     * Test the property 'statusCode'
     */
    @Test
    public void statusCodeTest() {
        // TODO: test statusCode
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'reason'
     */
    @Test
    public void reasonTest() {
        // TODO: test reason
    }

    /**
     * Test the property 'comments'
     */
    @Test
    public void commentsTest() {
        // TODO: test comments
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'urlIdClean'
     */
    @Test
    public void urlIdCleanTest() {
        // TODO: test urlIdClean
    }

    /**
     * Test the property 'lastGenDate'
     */
    @Test
    public void lastGenDateTest() {
        // TODO: test lastGenDate
    }

    /**
     * Test the property 'includesPastPages'
     */
    @Test
    public void includesPastPagesTest() {
        // TODO: test includesPastPages
    }

    /**
     * Test the property 'isDemo'
     */
    @Test
    public void isDemoTest() {
        // TODO: test isDemo
    }

    /**
     * Test the property 'commentCount'
     */
    @Test
    public void commentCountTest() {
        // TODO: test commentCount
    }

    /**
     * Test the property 'isSiteAdmin'
     */
    @Test
    public void isSiteAdminTest() {
        // TODO: test isSiteAdmin
    }

    /**
     * Test the property 'hasBillingIssue'
     */
    @Test
    public void hasBillingIssueTest() {
        // TODO: test hasBillingIssue
    }

    /**
     * Test the property 'isCommentsHidden'
     */
    @Test
    public void isCommentsHiddenTest() {
        // TODO: test isCommentsHidden
    }

    /**
     * Test the property 'moduleData'
     */
    @Test
    public void moduleDataTest() {
        // TODO: test moduleData
    }

    /**
     * Test the property 'pageNumber'
     */
    @Test
    public void pageNumberTest() {
        // TODO: test pageNumber
    }

    /**
     * Test the property 'isWhiteLabeled'
     */
    @Test
    public void isWhiteLabeledTest() {
        // TODO: test isWhiteLabeled
    }

    /**
     * Test the property 'isProd'
     */
    @Test
    public void isProdTest() {
        // TODO: test isProd
    }

    /**
     * Test the property 'isCrawler'
     */
    @Test
    public void isCrawlerTest() {
        // TODO: test isCrawler
    }

    /**
     * Test the property 'notificationCount'
     */
    @Test
    public void notificationCountTest() {
        // TODO: test notificationCount
    }

    /**
     * Test the property 'hasMore'
     */
    @Test
    public void hasMoreTest() {
        // TODO: test hasMore
    }

    /**
     * Test the property 'isClosed'
     */
    @Test
    public void isClosedTest() {
        // TODO: test isClosed
    }

    /**
     * Test the property 'presencePollState'
     */
    @Test
    public void presencePollStateTest() {
        // TODO: test presencePollState
    }

    /**
     * Test the property 'customConfig'
     */
    @Test
    public void customConfigTest() {
        // TODO: test customConfig
    }

    /**
     * Test the property 'urlIdWS'
     */
    @Test
    public void urlIdWSTest() {
        // TODO: test urlIdWS
    }

    /**
     * Test the property 'userIdWS'
     */
    @Test
    public void userIdWSTest() {
        // TODO: test userIdWS
    }

    /**
     * Test the property 'tenantIdWS'
     */
    @Test
    public void tenantIdWSTest() {
        // TODO: test tenantIdWS
    }

    /**
     * Test the property 'secondaryCode'
     */
    @Test
    public void secondaryCodeTest() {
        // TODO: test secondaryCode
    }

    /**
     * Test the property 'bannedUntil'
     */
    @Test
    public void bannedUntilTest() {
        // TODO: test bannedUntil
    }

    /**
     * Test the property 'maxCharacterLength'
     */
    @Test
    public void maxCharacterLengthTest() {
        // TODO: test maxCharacterLength
    }

    /**
     * Test the property 'translatedError'
     */
    @Test
    public void translatedErrorTest() {
        // TODO: test translatedError
    }

}

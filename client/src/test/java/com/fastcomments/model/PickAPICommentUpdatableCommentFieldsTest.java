/*
 * fastcomments
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@fastcomments.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fastcomments.model;

import com.fastcomments.model.PickFCommentAPICommentFieldsKeysMeta;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PickAPICommentUpdatableCommentFields
 */
public class PickAPICommentUpdatableCommentFieldsTest {
    private final PickAPICommentUpdatableCommentFields model = new PickAPICommentUpdatableCommentFields();

    /**
     * Model tests for PickAPICommentUpdatableCommentFields
     */
    @Test
    public void testPickAPICommentUpdatableCommentFields() {
        // TODO: test PickAPICommentUpdatableCommentFields
    }

    /**
     * Test the property 'date'
     */
    @Test
    public void dateTest() {
        // TODO: test date
    }

    /**
     * Test the property 'urlId'
     */
    @Test
    public void urlIdTest() {
        // TODO: test urlId
    }

    /**
     * Test the property 'urlIdRaw'
     */
    @Test
    public void urlIdRawTest() {
        // TODO: test urlIdRaw
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'pageTitle'
     */
    @Test
    public void pageTitleTest() {
        // TODO: test pageTitle
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

    /**
     * Test the property 'commenterEmail'
     */
    @Test
    public void commenterEmailTest() {
        // TODO: test commenterEmail
    }

    /**
     * Test the property 'commenterName'
     */
    @Test
    public void commenterNameTest() {
        // TODO: test commenterName
    }

    /**
     * Test the property 'commenterLink'
     */
    @Test
    public void commenterLinkTest() {
        // TODO: test commenterLink
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'commentHTML'
     */
    @Test
    public void commentHTMLTest() {
        // TODO: test commentHTML
    }

    /**
     * Test the property 'parentId'
     */
    @Test
    public void parentIdTest() {
        // TODO: test parentId
    }

    /**
     * Test the property 'localDateString'
     */
    @Test
    public void localDateStringTest() {
        // TODO: test localDateString
    }

    /**
     * Test the property 'localDateHours'
     */
    @Test
    public void localDateHoursTest() {
        // TODO: test localDateHours
    }

    /**
     * Test the property 'votes'
     */
    @Test
    public void votesTest() {
        // TODO: test votes
    }

    /**
     * Test the property 'votesUp'
     */
    @Test
    public void votesUpTest() {
        // TODO: test votesUp
    }

    /**
     * Test the property 'votesDown'
     */
    @Test
    public void votesDownTest() {
        // TODO: test votesDown
    }

    /**
     * Test the property 'expireAt'
     */
    @Test
    public void expireAtTest() {
        // TODO: test expireAt
    }

    /**
     * Test the property 'verified'
     */
    @Test
    public void verifiedTest() {
        // TODO: test verified
    }

    /**
     * Test the property 'verifiedDate'
     */
    @Test
    public void verifiedDateTest() {
        // TODO: test verifiedDate
    }

    /**
     * Test the property 'notificationSentForParent'
     */
    @Test
    public void notificationSentForParentTest() {
        // TODO: test notificationSentForParent
    }

    /**
     * Test the property 'notificationSentForParentTenant'
     */
    @Test
    public void notificationSentForParentTenantTest() {
        // TODO: test notificationSentForParentTenant
    }

    /**
     * Test the property 'reviewed'
     */
    @Test
    public void reviewedTest() {
        // TODO: test reviewed
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'externalParentId'
     */
    @Test
    public void externalParentIdTest() {
        // TODO: test externalParentId
    }

    /**
     * Test the property 'avatarSrc'
     */
    @Test
    public void avatarSrcTest() {
        // TODO: test avatarSrc
    }

    /**
     * Test the property 'isSpam'
     */
    @Test
    public void isSpamTest() {
        // TODO: test isSpam
    }

    /**
     * Test the property 'approved'
     */
    @Test
    public void approvedTest() {
        // TODO: test approved
    }

    /**
     * Test the property 'isDeleted'
     */
    @Test
    public void isDeletedTest() {
        // TODO: test isDeleted
    }

    /**
     * Test the property 'isDeletedUser'
     */
    @Test
    public void isDeletedUserTest() {
        // TODO: test isDeletedUser
    }

    /**
     * Test the property 'isByAdmin'
     */
    @Test
    public void isByAdminTest() {
        // TODO: test isByAdmin
    }

    /**
     * Test the property 'isByModerator'
     */
    @Test
    public void isByModeratorTest() {
        // TODO: test isByModerator
    }

    /**
     * Test the property 'isPinned'
     */
    @Test
    public void isPinnedTest() {
        // TODO: test isPinned
    }

    /**
     * Test the property 'isLocked'
     */
    @Test
    public void isLockedTest() {
        // TODO: test isLocked
    }

    /**
     * Test the property 'flagCount'
     */
    @Test
    public void flagCountTest() {
        // TODO: test flagCount
    }

    /**
     * Test the property 'displayLabel'
     */
    @Test
    public void displayLabelTest() {
        // TODO: test displayLabel
    }

    /**
     * Test the property 'meta'
     */
    @Test
    public void metaTest() {
        // TODO: test meta
    }

    /**
     * Test the property 'moderationGroupIds'
     */
    @Test
    public void moderationGroupIdsTest() {
        // TODO: test moderationGroupIds
    }

    /**
     * Test the property 'feedbackIds'
     */
    @Test
    public void feedbackIdsTest() {
        // TODO: test feedbackIds
    }

}

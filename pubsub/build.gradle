apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'com.diffplug.spotless'
apply plugin: 'maven-publish'

group = 'com.fastcomments'
version = project.findProperty('releaseVersion') ?: '0.0.1-SNAPSHOT'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.+'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.diffplug.spotless:spotless-plugin-gradle:6.11.0'
    }
}

repositories {
    // Check local Maven repository first
    mavenLocal() {
        // Make sure local repository is always checked
        content {
            includeGroup "com.fastcomments"
        }
    }
    mavenCentral()
    maven {
        name = "repsy"
        url = "https://repo.repsy.io/mvn/winrid/fastcomments"
        credentials {
            username = project.findProperty('repsyUsername') ?: System.getenv('REPSY_USERNAME')
            password = project.findProperty('repsyPassword') ?: System.getenv('REPSY_PASSWORD')
        }
    }
}

sourceSets {
    main.java.srcDirs = ['src/main/java']
}

jar {
    manifest {
        attributes(
                'Automatic-Module-Name': 'com.fastcomments.pubsub'
        )
    }
}

// No need to define publishing here; it's in the init script


// Only apply Java configuration
apply plugin: 'java'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

task execute(type: JavaExec) {
    main = System.getProperty('mainClass')
    classpath = sourceSets.main.runtimeClasspath
}

dependencies {
    implementation 'com.google.code.gson:gson:2.12.1'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    
    // Use Maven artifacts instead of project dependencies
    // This works better for local publishing when run from the pubsub directory
    implementation 'com.fastcomments:client:0.0.2'
    implementation 'com.fastcomments:core:0.0.2'
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

// Use spotless plugin to automatically format code, remove unused import, etc
// To apply changes directly to the file, run `gradlew spotlessApply`
// Ref: https://github.com/diffplug/spotless/tree/main/plugin-gradle
spotless {
    // comment out below to run spotless as part of the `check` task
    enforceCheck false

    format 'misc', {
        // define the files (e.g. '*.gradle', '*.md') to apply `misc` to
        target '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces() // Takes an integer argument if you don't like 4
        endWithNewline()
    }
    java {
        // don't need to set target, it is inferred from java

        // apply a specific flavor of google-java-format
        googleJavaFormat('1.8').aosp().reflowLongStrings()

        removeUnusedImports()
        importOrder()
    }
}